{"version":3,"sources":["controller/storageController.ts","controller/apiController.ts","api/api-laravel.service.ts","pages/Home.tsx","components/left-menu.tsx","pages/form-datos-toma/form-datos-toma.page.tsx","utilities.ts","assets/icon/sinFoto.jpg","pages/captura-de-lectura/captura-de-lectura.page.tsx","pages/historial-lecturas/historial-lecturas.page.tsx","pages/editar-lecturas-agua/editar-lecturas-agua.page.tsx","pages/reportes/reportes.page.tsx","pages/buscar-contrato-reporte/buscar-contrato-reporte.tsx","pages/datos-contribuyente/datos-del-contribuyente.tsx","pages/captura-cortes/buscar-contrato.tsx","pages/realizar-corte/realizar-corte.tsx","pages/buscar-corte/buscar-corte.tsx","pages/multar-toma/multar-toma.page.tsx","pages/Realizar-multa/realizar-multa.page.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx","../node_modules/@ionic/react/node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object"],"names":["restoreUser","remenberMe","localStorage","getItem","value","pass","user","remember","removeItem","guardarDatosCliente","basicData","recordar","setItem","contrasenia","usuario","String","idUsuario","cliente","token","userName","console","log","getUsuario","obtenerDatosCliente","guardarContratos","contratos","guardarDatosLectura","idLectura","contribuyente","contratoVigente","medidor","getDatosLecturaStorage","nCliente","extraerDatosEditarLectura","contrato","obtenerDatosClienteEditar","datosLectura","idConsulta","cerrarSesion","a","verifyingSession","setContribuyenteBuscado","setPuntero","getPuntero","cursor","puntero","Number","isNaN","setNumeroPaginas","getNumeroPaginas","noPages","pages","getLogoStorage","setLogoStorage","logoEncode","setClienteNombreCorto","clienteNombreCorto","getClienteNombreCorto","setContribuyente","getContribuyente","clearState","setPunteroBusqueda","getPunteroBusqueda","data","getPaginasBusqueda","setCuentasPapas","papas","getCuentasPapas","setContratoCorte","item","getContratoCorte","getIdUsuario","setIdConfiguracion","idConfiguracionCorte","getIdConfiguracion","guardarTareasCortes","listaTareas","guardarIndexTareas","index","setNumeroPaginasTareas","totalPaginas","getNumeroPaginasTareas","datos","parseInt","getContratoMulta","service","axios","post","headers","date","Date","netwokError","Error","sesionNotValidError","failedLoginError","userNotValidError","lecturaCodeError","noRowSelect","LecturaNull","LecturaMenor","mesMayor","mesRegistrado","anioMayor","anioRegistrado","mesIgual","API223","APIError","errorCarga","errorImagenes","ErrorInsertar","ErrorMulta404","ErrorMulta424","ErrorMulta425","ErrorMulta401","ErrorMulta423","Login","password","remerber","acceso","passwd","getAuth","result","Status","datosUsuario","NombreCompleto","verificarUsuarioLecturista","verified","conectionError","userData","ObtenerConfiguracionCortes","configuracionCorte","esCortes","esLecturista","Corte","id","buscarSectores","datosConsulta","Sectores","extraerDatosLectura","keyLectura","extraesDatosLectura","tipoLectura","ValorLectura","Valor","guardarCaptura","datosCaptura","validarDatosLectura","enviarDatosLectura","anomalia","lectura","arrayAnios","mesActual","getMonth","isInteger","NaN","lecturaActual","consumo","consumoFinal","anioSeleccionado","indexAnio","anio","comparaMes","mesCaptura","comparaAnio","mesLectura","anhioSeleccionado","anhioCaptura","anhioActual","getFullYear","idToma","lecturaAnterior","fechaCaptura","latitud","Latidude","longitud","Longitude","tipoCoordenada","fotos","arregloFotos","ruta","route","guardarDatosLecturaV2","code","Mensaje","message","getDatosLecturaEditar","extraerDatoseditar","obtenerContribuyente","busqueda","offset","sector","mes","datoBusqueda","a_no","Offset","obtenerDatosSectorPalabraClave","extraerContribuyente","mensaje","Array","isArray","obtenerTotalDatosSectores","extraerNumeroItems","length","items","cantidad","lecturasPorSectorPage","Sector","buscarLecturasPorSector","Papas","JSON","stringify","legth","obtenerPromedioConsumo","extraerPromedioContribuyente","Math","round","obtenerLogo","obtenerLogoCliente","logo","Data","obtenerDatosContribuyente","idBusqueda","extraerContactoContribuyente","Code","Contribuyente","actualizarContribuyente","contacto","telefono","email","guardarContribuyente","error","errorMessage","errorCode","typeError","includes","verifyCameraPermission","AndroidPermissions","checkPermission","PERMISSION","CAMERA","hasPermission","verifyGPSPermission","ACCESS_COARSE_LOCATION","solicitarPermisos","requestPermissions","obtenerPromedioEditar","padron","Cliente","Padron","Lectura","buscarContrato","Contrato","buscarPorContrato","buscarPorMedidor","verificarDatosCoutaFija","consumoData","guardarCuotaFija","Consumo","guardarCoutaFijaV2","obtenerDatosCorte","esmulta","Usuario","obtenerDatosContratoCorte","DatosContrato","push","ListaCortes","Mes","Anio","listarCortesUsuario","cortes","ContratosListaContratoReporte","buscarContratoReporte","guardarReporteV2","Reporte","Calle","Colonia","Numero","Descripcion","Latitud","Longitud","Fotos","FallaAdministrativa","Estatus","guardarReporte","buscarMedidorSinFiltro","clave","realizarReporteMedidor","configuracionCuotaFija","obtenerConfiguracion","rawConfiguracion","Configuracion","EnviarCorte","datosCorte","Motivo","Persona","Estado","Ejercicio","Evidencia","RealizarCorteV2","resultCorte","jsonError","parse","historialLecturas","datosFecha","ObtenerHistorialLecturas","resultHistorial","ObtenerListaCortes","ObtenerListaTareas","Tareas","paginas","parseFloat","BuscarContratoCorte","indicio","configuracion","Datos","BuscarMedidorCorte","MultarToma","total","Observacion","coords","Debug","Total","Cordenadas","MultarContratoAPI","SplashScreen","Plugins","Home","history","useHistory","useState","User","setUserName","passwors","setPassword","loading","setLoading","setMessage","setRemember","useEffect","hide","handleRequestPermissions","recordarCredenciales","useIonViewWillEnter","validateUserData","setTimeout","then","replace","catch","err","finally","color","fullscreen","class","className","src","type","placeholder","onIonChange","e","detail","slot","checked","onClick","cssClass","isOpen","onDidDismiss","header","MenuLeft","selectedIndex","setSelectedIndex","setLogo","appPages","title","selects","icon","water","path","reader","construct","cutOutline","timer","warning","logOut","itemSelected","cargarLogo","dir","window","location","pathname","toString","split","selected","undefined","map","pageIndex","side","menuId","contentId","name","button","ios","md","FormDatosTomaPage","setUser","sectores","setSectores","idSector","setIdSector","lecturas","setLecuras","typeErro","setTypeError","permissions","hideAlertButons","setHideAlertbuttons","block","setBlock","tipoMessage","setTipoMessage","tokenExpired","setTokenExpired","textoBusqueda","setTextoBusqueda","serched","setSerched","setPaginas","showPagination","setShowPagination","nombreCliente","setNombreCliente","setBusqueda","filtro","setFiltro","placeHolder","setPlaceHolder","alertButtons","text","handler","cargarSectores","buscarPorSector","handle","activarMenu","setActivarMenu","isSessionValid","valid","nombreCorto","prepararPantalla","camera","gps","storageUser","sessionValid","useIonViewWillLeave","expired","abrirCapturaDatos","metodo","esPapa","punteroBuscarPorSector","handleSector","setSector","punteroBuscarPorClave","porContrato","zeroFill","porMedidor","number","width","onIonCancel","interface","filter","size","texto","shape","searchCircle","disabled","cancelText","itemIndex","arrowBackOutline","arrowForwardOutline","arrayData","estatus","cobro","leyendaCobro","functionValidarLectura","M_etodoCobro","cuentaPapa","ContratoVigente","Medidor","isPlatform","Toma","style","fontsize","backdropDismiss","buttons","calidad","alto","ancho","useTakePhoto","getPhoto","useCamera","takePhoto","resultType","CameraResultType","Uri","source","CameraSource","Camera","quality","height","cameraPhoto","asignarCalidad","cl","modificarTamanio","reducir","generarFechas","listaMeses","listaAnios","generarAnios","obtenerBase64","leerArchivo","fetch","file","blob","blobFile","convertBase64","imgEncode","Promise","resolve","reject","FileReader","onerror","onloadend","baseSplit","readAsDataURL","defaultAnio","menorAnio","anioMaximo","idAnio","obtenerCoordenadas","Geolocation","getCurrentPosition","CapturaDeLectura","Object","datosContribuyente","setDatosContribuyente","setLecturaAnterior","anomalias","setAnomalias","setConsumo","useIonToast","setlistaMeses","mesDefautl","setMesDefault","indexMes","setIndexMes","anioActual","setAnioActual","indexAnioActual","setIndexAnioActual","setAnioLectura","setListaAnios","bloquearCampos","setBloquearcampos","btnInactivo","setComparaMes","setComparaAnio","seleccionAnomalia","setSeleccionAnomalia","setLecturaActual","setTipoLectura","setMesLectura","refreshControl","setRefreshControl","defaultLectura","setDefaultLectura","defaultAnomalia","setDefaultAnomalia","enbleButtons","setEnbleButtons","promedioLectura","setPromedioLectura","toma","setToma","municipio","setMunicipio","localidad","setLocalidad","direccion","setDireccion","bloqueoAnomalias","setBloqueoAnomalias","consumoMinimo","setConsumoMinimo","fija","setFija","fotoMedidorEncode","setFotoMedidorEncode","fotoMedidorPreview","setFotoMedidorPreview","fotoFachadaEncode","setFotoFachadaEncode","fotoFachadaPreview","setFotoFachadaPreview","fotoCalleEncode","setFotoCalleEncode","setFotoCallePreview","errorFotoUI","setErrorFotosU","fecha","cargarContribuyente","useIonViewDidEnter","extraerLectura","promedio","toFixed","Municipio","Localidad","Direccion","cargarFechas","LecturaActual","BloquearCampos","Anomalias","anioDefault","Meses","Anios","lecturaCasoUno","lecturaCasoDos","lecturaCasoTres","anioResult","meses","anhioLista","esteMes","anios","generarAniosPosterior","mesResult","mesComparacion","anioComparar","mensajeConsumoCero","handleBtnGuardar","validarConsumo","procesoConsumo","datosCapturados","latitude","longitude","guardarDatosCuotaFija","LecturaAnterior","handleAbrirCamera","tipoFoto","agregarImagenEncode","webPath","imgDir","formatindex","numIndex","consumoProcesado","pencil","consumido","calcularConsumo","displayFormat","min","max","ActualizarAdelante","ActualizarAtras","Minima","handleSelectAnomalia","descripci_on","foto","selectedText","expand","chevronBackCircleOutline","errorFotos","saveOutline","HistorialLecturas","setAnios","setMeses","setAnioSeleccionado","mesSeleccionado","setMesSeleccionado","listaReportes","setListaReportes","setMensaje","tipoMensaje","setTipoMensaje","aniosMeses","extraerHistorial","fechaAnio","fechas","flex","justifyContent","borderWidth","marginTop","Nombre","Fecha","EditarLecturaAgua","setBloquearDatos","anhioLectura","setAnhioLectura","validarAnhio","setValidarAnhio","validarMes","setValidarMes","listaAnhios","setListaAnhios","setListaMeses","tipoAnomalia","setTipoAnomalia","fechaLectura","setFechaLectura","showToast","setShowToast","connectionError","setConnectionError","setTokenExpered","traceError","setTraceError","lecturaRegistrada","setLecturaRegistrada","alertRetriButtons","cargarDatos","guardarLectura","generarFechasAnhios","A_no","filtrarLectura","bloqueoCampos","goBack","Observaci_on","FechaLectura","handleCalcularconsumo","Padr_onAgua","consumoCalculado","idPadron","regresarPantalla","Exterior","Interior","selectAnomalia","duration","position","checkmarkCircleOutline","Reportes","setContrato","setArregloFotos","setFotoActiva","setFotosCodificadas","setActivarGaleria","ErrorUI","setErrorUI","colonia","setColonia","calle","setCalle","numero","setNumero","descripcion","setDescripcion","fotoCallePreview","buttonsErrorConnection","enviarReporte","jsonImagenes","coordenadas","limpiarPantalla","lanzarMensaje","paddingLeft","paddingRight","trim","ListaContratoReportes","tokenExpirado","setTokenExpirado","setClienteNombre","setUsuario","tipoFiltro","setTipoFiltro","placeHolderFiltro","setPlaceHolderFiltro","palabraClave","setPalabraClave","botonReintentar","setBotonReintentar","setTipoError","cargando","setCargando","listaContratos","setListaContratos","listaEstatus","useIonViewDidLeave","verificarSession","valido","irReportar","idContrato","pablabraClave","buscarMedidor","realizarBusqueda","DatosContribuyente","setTelefono","setEmail","typeMessage","setTypeMessage","hideButtons","setHideButtons","handleBtnGuardarContacto","Celular","Email","sesionValid","saveSharp","PrincipalCortes","sesionValida","setListaTareas","setIndex","setTotalPaginas","PorContrato","mostrarListaContratos","mostrarDatosContrato","listaSeccion","i","paginaSigueinte","RealizarCorte","datosContrato","setDatosContrato","setDatosUsuario","fechaActual","setFechaActual","tipoInspeccion","setTipoInspecion","arregloFotosVista","setArregloFotosVista","fotoActiva","indexFoto","setIndexFoto","motivoInspeccion","setMotivoInspeccion","ejercicio","setEjercicio","bloquearCorte","setBloquearCorte","setErrorCarga","errorCampos","setErrorCampos","pressentToast","fotoTomaEncode","setFotoTomaEncode","fotoTomaPreview","setFotoTomaPreview","setErrorImagenes","extraerDatos","dia","getDate","formatoFecha","guardarInspeccion","validarCampos","Rfc","Cuenta","PersonaNombre","Puesto","fotosTemporal","fotosEncoded","checkmarkCircle","borrarFotoEvidencia","BuscarCorte","mesSelecionado","arregloCortes","setArregloCortes","listaEstados","preparaPantalla","obtenerCortes","FechaCorte","buscarPadron","abrirContrato","RealizarMulta","referenciaModal","useRef","Boolean","mostrarSlide","setMostrarSlide","monto","slice","guardarMulta","cameraOutline","ref","fixed","arrowBackCircle","arrowForwardCircle","arrowBackCircleOutline","App","exact","to","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackAsyncContext","req","__webpack_require__","o","ids","keys","module","exports"],"mappings":"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","file":"static/js/main.9951ada4.chunk.js","sourcesContent":["import { lockClosed, returnUpBackOutline } from \"ionicons/icons\";\n\n//controlador del LocalStorage\nexport function restoreUser() {\n    let remenberMe = localStorage.getItem(\"@Storage:recordarUsuario\");\n    if (remenberMe != null) {\n        let value = remenberMe == \"true\";\n        if (value) {\n            let user = {\n                pass: localStorage.getItem(\"@Storage:contraseniaX\"),\n                user: localStorage.getItem(\"@Storage:usuario\"),\n                remember: value\n            }\n            return user;\n        } else {\n            localStorage.removeItem('@Storage:contraseniaX');\n            localStorage.removeItem('\"@Storage:usuario\"');\n            let user = {\n                pass: '',\n                user: '',\n                remember: value\n            }\n            return user;\n        }\n    } else {\n        let user = {\n            pass: '',\n            user: '',\n            remember: false\n        }\n        return user;\n    }\n}\nexport function guardarDatosCliente(basicData: { usuario: string, idUsuario: Number, cliente: Number, token: string, recordar: boolean, contrasenia: string, userName: string }) {\n    basicData.recordar ? localStorage.setItem(\"@Storage:contraseniaX\", basicData.contrasenia) : localStorage.removeItem(\"@Storage:contraseniaX\");\n    localStorage.setItem(\"@Storage:usuario\", basicData.usuario);\n    localStorage.setItem(\"@Storage:idUsuario\", String(basicData.idUsuario));\n    localStorage.setItem(\"@Storage:cliente\", String(basicData.cliente));\n    localStorage.setItem(\"@Storage::userToken\", basicData.token);\n    localStorage.setItem(\"@Storage:recordarUsuario\", String(basicData.recordar));\n    localStorage.setItem(\"@Storage:userName\", basicData.userName);\n    console.log(basicData.userName)\n}\nexport function getUsuario() {\n    return localStorage.getItem(\"@Storage:usuario\");\n}\nexport function obtenerDatosCliente() {\n    let result = {\n        cliente: localStorage.getItem(\"@Storage:cliente\"),\n        idUsuario: localStorage.getItem(\"@Storage:idUsuario\"),\n        token: localStorage.getItem(\"@Storage::userToken\")\n    }\n    return result;\n}\nexport function guardarContratos(contratos: string) {\n    localStorage.setItem(\"@Storage:contratos\", contratos);\n}\nexport function guardarDatosLectura(idLectura: string, contribuyente: string, contratoVigente: string, medidor: string) {\n    localStorage.setItem('@Storage:idLectura', idLectura);\n    localStorage.setItem('@Storage:nContribuyente', contribuyente);\n    localStorage.setItem('@Storage:contratoVigente', contratoVigente);\n    localStorage.setItem('@Storage:medidor', medidor);\n    return true;\n}\nexport function getDatosLecturaStorage() {\n    let lectura = {\n        idLectura: localStorage.getItem('@Storage:idLectura'),\n        contribuyente: localStorage.getItem('@Storage:nContribuyente'),\n        contratoVigente: localStorage.getItem('@Storage:contratoVigente'),\n        medidor: localStorage.getItem('@Storage:medidor'),\n        //NOTE: TESTING: datos para el guardado de la lectura\n        nCliente: localStorage.getItem(\"@Storage:cliente\"),\n        token: localStorage.getItem(\"@Storage::userToken\"),\n        idUsuario: localStorage.getItem(\"@Storage:idUsuario\")\n    }\n    return lectura;\n}\nexport function getContratos() {\n    let datos = localStorage.getItem(\"@Storage:contratos\");\n    return datos;\n}\nexport function guardarDatosEditarLectura(idLectua: string, contrato: string, contribuyente: string, medidor: string) {\n    localStorage.setItem('@Storage:editarIdLectura', idLectua);\n    localStorage.setItem('@Storage:editarContratoVigente', contrato);\n    localStorage.setItem('@Storage:editarNContribuyente', contribuyente);\n    localStorage.setItem('@Storage:editarMedidor', medidor);\n    return true;\n}\nexport function extraerDatosEditarLectura() {\n    let result = {\n        idLectura: localStorage.getItem('@Storage:editarIdLectura'),\n        contrato: localStorage.getItem('@Storage:editarContratoVigente'),\n        contribuyente: localStorage.getItem('@Storage:editarNContribuyente'),\n        medidor: localStorage.getItem('@Storage:editarMedidor')\n    }\n    return result;\n}\nexport function obtenerDatosClienteEditar() {\n    let lecturaData = {\n        idConsulta: localStorage.getItem('@Storage:editarIdLectura'),\n        nCliente: localStorage.getItem('@Storage:cliente'),\n    }\n    return { datosLectura: lecturaData, token: localStorage.getItem('@Storage::userToken') };\n}\nexport async function cerrarSesion() {\n    //Olvidando credenciales\n    let remenber = localStorage.getItem(\"@Storage:recordarUsuario\");\n    if (remenber == \"false\") {\n        localStorage.removeItem(\"@Storage:usuario\");\n        localStorage.removeItem(\"@Storage:idUsuario\");\n        localStorage.removeItem(\"@Storage:cliente\");\n        localStorage.removeItem(\"@Storage::userToken\");\n        localStorage.removeItem(\"@Storage:contraseniaX\");\n    } else {\n        localStorage.removeItem(\"@Storage:idUsuario\");\n        localStorage.removeItem(\"@Storage:cliente\");\n        localStorage.removeItem(\"@Storage::userToken\");\n    }\n    return true\n}\nexport function verifyingSession() {\n    /* localStorage.setItem(\"@Storage::userToken\",\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczpcL1wvYXBpLnNlcnZpY2lvZW5saW5lYS5teFwvYXBpLW1vdmlsXC9sb2dpbi1wcmVzaWRlbnRlUHJ1ZWJhIiwiaWF0IjoxNjIxMzY1OTk0LCJleHAiOjE2MjE0MDE5OTQsIm5iZiI6MTYyMTM2NTk5NCwianRpIjoiV0w3VE9EeUZpQkhWZzZqRSIsInN1YiI6MzgwMCwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.5aG5sSnugBRIPvmj0QcbhHuqxPfBRkwrxN74bGz1uho\");\n     */let token = localStorage.getItem(\"@Storage::userToken\");\n    return token != null;\n}\nexport function obtenerIdReporte() {\n    let reporte = {\n        userName: localStorage.getItem(\"@Storage:userName\"),\n        id: localStorage.getItem(\"@Storage:idReporte\")\n    }\n    return reporte;\n\n}\nexport function obtenerToken() {\n    return String(localStorage.getItem(\"@Storage::userToken\"));\n}\nexport function guardarIdReporte(id: number) {\n    localStorage.setItem(\"@Storage:idReporte\", String(id));\n}\nexport function contribuyenteBuscado() {\n    let data = localStorage.getItem(\"@Storage:serched\");\n    if (data == null) {\n        return false;\n    } else {\n        return data === \"true\";\n    }\n}\nexport function setContribuyenteBuscado(value: Boolean) {\n    localStorage.setItem(\"@Storage:serched\", String(value));\n}\nexport function setPuntero(value: number){\n    localStorage.setItem(\"@Storage:cursor\",String(value))\n}\nexport function getPuntero(){\n    let cursor =  localStorage.getItem(\"@Storage:cursor\");\n    let puntero = Number(cursor);\n    if(isNaN(puntero)){\n        return 0;\n    }else{\n        return puntero\n    }\n}\nexport function setNumeroPaginas(value: number){\n    localStorage.setItem(\"@Storage:pages\",String(value));\n}\nexport function getNumeroPaginas(){\n    let noPages = localStorage.getItem(\"@Storage:pages\");\n    let pages = Number(noPages);\n    if(isNaN(pages)){\n        return 0\n    }else{\n        return pages;\n    }\n}\nexport function deleteContratos(){\n    localStorage.removeItem(\"@Storage:contratos\");\n}\nexport async function getLogoStorage(){\n    return localStorage.getItem(\"@Storage:logoCliente\");\n}\nexport async function setLogoStorage(logoEncode: string){\n    localStorage.setItem(\"@Storage:logoCliente\",logoEncode);\n}\nexport  function setClienteNombreCorto(clienteNombreCorto: string){\n    localStorage.setItem(\"@Storage:clienteNombreCorto\",clienteNombreCorto)\n}\nexport  function getClienteNombreCorto() {\n    return localStorage.getItem(\"@Storage:clienteNombreCorto\");\n}\nexport  function setContribuyente(contribuyente: string) {\n    localStorage.setItem(\"@Storage:idContribuyente\",contribuyente);\n}\nexport  function getContribuyente() {\n    return localStorage.getItem(\"@Storage:idContribuyente\");\n}\nexport function setSector(sector: string) {\n    localStorage.setItem(\"@Storage:idSector\",sector);\n}\nexport function getSector() {\n    return localStorage.getItem(\"@Storage:idSector\");\n}\nexport function clearState(){\n    localStorage.removeItem(\"@Storage:idSector\");\n    localStorage.removeItem(\"@Storage:cursor\");\n    localStorage.removeItem(\"@Storage:pages\");\n    localStorage.removeItem(\"@Storage:lecturaDesde\");\n    localStorage.removeItem(\"@Storage:lecturaHasta\");\n    localStorage.removeItem(\"@Storage:reporteDesde\");\n    localStorage.removeItem(\"@Storage:reporteHasta\");\n}\nexport function setFechasHistorialLectura (desde: string, hasta: string) {\n    localStorage.setItem(\"@Storage:lecturaDesde\",desde);\n    localStorage.setItem(\"@Storage:lecturaHasta\",hasta);\n}\nexport function getFechasHistorialLectura(){\n    let datos = localStorage.getItem(\"@Storage:lecturaDesde\");\n    if(datos != null){\n        let data = {\n            desde: localStorage.getItem(\"@Storage:lecturaDesde\"),\n            hasta: localStorage.getItem(\"@Storage:lecturaHasta\")\n        }\n        return data;\n    }else{\n        return null;\n    }\n}\nexport function setFechasHistorialReportes(desde: string, hasta: string){\n    localStorage.setItem(\"@Storage:reporteDesde\",desde);\n    localStorage.setItem(\"@Storage:reporteHasta\",hasta);\n}\nexport function getFechasHistorialReportes(){\n    let dato = localStorage.getItem(\"@Storage:reporteDesde\");\n    if(dato!=null){\n        let data = {\n            desde: localStorage.getItem(\"@Storage:reporteDesde\"),\n            hasta: localStorage.getItem(\"@Storage:reporteHasta\")\n        }\n        return data;\n    }else{\n        return null;\n    }\n}\nexport function setPunteroBusqueda(puntero: number){\n    console.log(puntero)\n    localStorage.setItem(\"@Storage:punteroBusqueda\",String(puntero));\n}\nexport function getPunteroBusqueda(){\n    let data = localStorage.getItem(\"@Storage:punteroBusqueda\");\n    let puntero = Number(data);\n    if(isNaN(puntero)){\n        return 0;\n    }else{\n        return puntero;\n    }\n}\nexport function setPaginasBusqueda(paginas: number){\n    localStorage.setItem(\"@Storage:paginasBusqueda\",String(paginas));\n}\nexport function getPaginasBusqueda(){\n   let data = localStorage.getItem(\"@Storage:paginasBusqueda\");\n   let pages = Number(data);\n   if(isNaN(pages)){\n       return 0;\n   }else{\n        return pages;\n   }\n}\nexport function setInspeccionPadronAgua(contribuyente: string){\n    localStorage.setItem(\"@Storage:inspeccionPadron\",contribuyente);\n}\nexport function getInspeccionPadronAgua(){\n    return localStorage.getItem(\"@Storage:inspeccionPadron\");\n}\nexport function obtnerCliente(){\n    return localStorage.getItem(\"@Storage:cliente\")\n}\nexport function setCuentasPapas(papas:String){\n    localStorage.setItem(\"@Storage:CuentasPapas\",String(papas));\n}\nexport function getCuentasPapas(){\n    return localStorage.getItem(\"@Storage:CuentasPapas\") != null ? localStorage.getItem(\"@Storage:CuentasPapas\"): \"\";\n}\nexport function setContratoCorte(item:string){\n    localStorage.setItem(\"@Storage:ContratoCorte\",item);\n}\nexport function getContratoCorte(){\n    return localStorage.getItem(\"@Storage:ContratoCorte\") != null ? localStorage.getItem(\"@Storage:ContratoCorte\") : \"\";\n}\nexport function getIdUsuario(){\n    return localStorage.getItem(\"@Storage:idUsuario\") != null ? localStorage.getItem(\"@Storage:idUsuario\") : 0;\n}\nexport function setContratoReporte(idContrato:string){\n    localStorage.setItem(\"@Storage:reporteContrato\", idContrato );\n}\nexport function getContratoReporte( ){\n    return localStorage.getItem(\"@Storage:reporteContrato\");\n}\nexport function setIdConfiguracion( idConfiguracionCorte:string ){\n    localStorage.setItem(\"@Storage:configuracionCorte\",idConfiguracionCorte);\n}\nexport function getIdConfiguracion( ){\n    return localStorage.getItem(\"@Storage:configuracionCorte\");\n}\nexport function guardarTareasCortes( listaTareas:string ){\n    localStorage.setItem(\"@Storage:listaTareas\",listaTareas);\n}\nexport function guardarIndexTareas( index:string ){\n    localStorage.setItem(\"@Storage:indexTareas\",index);\n}\nexport function getIndexTareas(){\n    return localStorage.getItem(\"@Storage:indexTareas\");\n}\nexport function getTareasCortes( listaTareas:string ){\n    return localStorage.getItem(\"@Storage:listaTareas\");\n}\nexport function setNumeroPaginasTareas( totalPaginas:string ){\n    localStorage.setItem(\"@Storage:totalPaginasTareas\",totalPaginas);\n}\nexport function getNumeroPaginasTareas(){\n    let datos =  localStorage.getItem(\"@Storage:totalPaginasTareas\")\n    return (datos == null || datos == \"\") ? 0 : parseInt(datos) ;\n}\nexport function setContratoMulta( idPadron:string ){\n    localStorage.setItem(\"@Storage:multaContrato\",idPadron);\n}\nexport function getContratoMulta(  ){\n    return localStorage.getItem(\"@Storage:multaContrato\");\n}\n","import { AndroidPermissions } from '@ionic-native/android-permissions';\nimport { threadId } from 'node:worker_threads';\nimport { _private } from 'workbox-core';\nimport { APIservice } from '../api/api-laravel.service';\nimport {\n    guardarDatosCliente,\n    obtenerDatosCliente,\n    guardarContratos,\n    guardarDatosLectura,\n    getContratos,\n    obtenerDatosClienteEditar,\n    getDatosLecturaStorage,\n    setLogoStorage,\n    setClienteNombreCorto,\n    getContribuyente,\n    setContribuyente,\n    obtnerCliente,\n    obtenerToken,\n    extraerDatosEditarLectura,\n    setCuentasPapas,\n    getContratoCorte,\n    getIdUsuario,\n    setIdConfiguracion,\n    getIdConfiguracion, \n    guardarIndexTareas,\n    guardarTareasCortes,\n    setNumeroPaginasTareas,\n    getContratoMulta,\n} from '../controller/storageController';\nconst service = new APIservice();\nconst date = new Date();\n//INDEV: Errores del sistema\nconst netwokError = new Error(\"Error al intentar comunicarse con la API. Verifique que su dispositivo se encuentre conectado a la red\");\nconst sesionNotValidError = new Error(\"La sesion del usuario a caducado\");\nconst failedLoginError = new Error(\"Usuario y/o contraseña incorrectos\");\nconst userNotValidError = new Error(\"No puedes iniciar sesión con este usuario\");\nconst lecturaCodeError = new Error('Consulte con su administrador que el código de lecturas de agua se encuentre en el rango de 1-3');\nconst noRowSelect = new Error(\"No se encontraron registros\");\nconst LecturaNull = new Error(\"No se ha calculado el consumo\");\nconst LecturaMenor = new Error(\"La lectura actual no puede ser menor a la anterior\");\nconst mesMayor = new Error(\"Aun no puedes realizar registros para el mes seleccionado\");\nconst mesRegistrado = new Error(\"El mes seleccionado ya fue registrado\");\nconst anioMayor = new Error(\"Aun no puedes realizar registros para este año\");\nconst anioRegistrado = new Error(\"Ya no puedes realizar registros para este año\");\nconst mesIgual = new Error(\"este mes ya fue registrado\");\nconst API223 = new Error(\"Revisa que los campos esten rellenados de forma correcta\");\nconst APIError = new Error(\"Error del servidor\");\nconst atrasError = new Error(\"El mes seleccionada debe se mayor a la actual\");\nconst adelanteError = new Error(\"El mes de la lectura debe ser menor al actual\");\nconst PermissionsError = new Error(\"Para poder hacer uso de todas las funciones de la aplicaciòn por favor acepta los permisos solicitados por la misma\");\nconst errorCarga = new Error(\"Error al obtener los datos del contrato 403\");\nconst errorImagenes = new Error(\"Corte realizado\\nHubo un error al subir las imagenes\");\nconst ErrorInsertar = new Error(\"Error al insertar el registro\");\nconst ErrorMulta404 = new Error(\"Error al procesar la operacion\\nOperacion no soportada\");\nconst ErrorMulta424 = new Error(\"Error al procesar la operacion\\nFavor de revisar su caja de cobro\");\nconst ErrorMulta425 = new Error(\"Error al procesar la operacion\\nFavor de revisar su area recaudadora\");\nconst ErrorMulta401 = new Error(\"Error al procesar la operacion\\nEl usuario actual no existe o esta dado de baja\");\nconst ErrorMulta423 = new Error(\"Error al procesar la operacion\\nHubo un error al realizar la multa\");\nexport async function Login(user: string, password: string, remerber: boolean) {\n    const acceso = {\n        usuario: user,\n        passwd: password\n    }\n    try {\n        let result = await service.getAuth(acceso);\n        //Verificanos si el inicio de session es valido\n        let sessionValida = result.data.Status;\n        if (sessionValida == true) {\n            let data = {\n                usuario: user,\n                cliente: result.data.cliente,\n                idUsuario: result.data.idUsuario,\n                token: result.data.token,\n                recordar: remerber,\n                contrasenia: password,\n                userName: result.data.datosUsuario.NombreCompleto\n            }\n            let verified = await verificarUsuarioLecturista(data);\n            if (verified === true) {\n                return verified;\n            } else {\n                throw verified;\n            }\n        } else {\n            throw failedLoginError;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n\n}\nasync function verificarUsuarioLecturista(userData: any) {\n    try {\n        let datos = {\n            usuario: userData.idUsuario,\n            cliente: userData.cliente\n        }\n        if (datos.cliente === \"-1\") {\n            throw userNotValidError;\n        }\n        let result = await service.verificarUsuarioLecturista(datos, userData.token);\n        let configuracionCorte = await service.ObtenerConfiguracionCortes(datos,userData.token);\n        let esCortes =  configuracionCorte.data.Status;\n        let esLecturista = result.data.Status;\n        //NOTE: si es un usuario de guardamos el id de su configuracion\n        if( esCortes ){\n            setIdConfiguracion(configuracionCorte.data.Corte[0].id);\n        }else{\n            console.log(\"no es usuario cortes\");\n        }\n        if (esLecturista) {\n            guardarDatosCliente(userData);\n            return true;\n        } else {\n            throw userNotValidError;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function buscarSectores() {\n    try {\n        let basicData = obtenerDatosCliente();\n        const datosConsulta = {\n            nCliente: basicData.cliente,\n            idUsuario: basicData.idUsuario,\n        }\n        let result = await service.buscarSectores(datosConsulta, basicData.token + \"\");\n        return result.data.Sectores;\n    } catch (error) {\n        throw conectionError(error)\n    }\n}\nexport async function lecturasPorSector(sector: string) {\n    try {\n        let basicData = obtenerDatosCliente();\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        const datosConsulta = {\n            nCliente: basicData.cliente,\n            Sector: sector,\n            mes: mes,\n            a_no: anio\n        }\n        let result = await service.buscarLecturasPorSector(datosConsulta, basicData.token + \"\");\n        let mensaje = result.data.mensaje;\n        guardarContratos(JSON.stringify(mensaje));\n        if (mensaje.legth === 0 || mensaje === \"No se encontraron registros\") {\n            throw noRowSelect;\n        } else {\n            return mensaje;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function ConfiguracionEvidencias(){\n    try{\n    let{cliente,token}= obtenerDatosCliente();\n    const datosConsulta = {\n        Cliente: cliente \n    }\n    let result = await service.obtenerConfiguracionFotografia(datosConsulta,  String(token));\n    let mensaje = result.data.Mensaje;\n    if (mensaje.length === 0 || mensaje === \"No se encontraron registros\"){\n        throw noRowSelect;\n    }else {\n        return mensaje;\n    }\n    }catch (error){\n        throw conectionError(error);\n    }\n}\n\nexport async function extraerDatosLectura(keyLectura: string) {\n    try {\n        //Extrallendo los datos de la lectura\n        let basicData = obtenerDatosCliente();\n        let datos = {\n            nCliente: basicData.cliente,\n            idLectura: keyLectura\n        }\n        let result = await service.extraesDatosLectura(datos, basicData.token + \"\");\n        console.log(result);\n        let tipoLectura = result.data.ValorLectura[0].Valor;\n        if (tipoLectura != '1' && tipoLectura != '2' && tipoLectura != '3') {\n            throw lecturaCodeError\n        } else {\n            return result.data;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function guardarCaptura(datosCaptura: any) {\n    try {\n        let result = await validarDatosLectura(datosCaptura);\n        console.log(result);\n        if (result === true) {\n            //NOTE: se manda a llamar al metodo de guardado\n            let result = await enviarDatosLectura(datosCaptura);\n            return result;\n        } else {\n            throw result;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\n/**\n * Funcion para verificar los datos de al guardar la captura del agua\n */\nasync function validarDatosLectura(data: any) {\n    let anomalia = parseInt(data.anomalia);\n    let tipoLectura = data.lectura;\n    let arrayAnios = data.arrayAnios;\n    let mesActual = date.getMonth() + 2;\n    if (!Number.isInteger(anomalia)) {\n        anomalia = NaN;\n    }\n    //Validamos que la lectura no este vacia\n    if (data.lecturaActual == null) {\n        throw LecturaNull;\n    }\n    //Validamos que el consumo no sea menor a 0 \n    let consumo = parseInt(data.consumoFinal);\n    if (!isNaN(anomalia)) {\n        if (consumo < 0) {\n            throw LecturaMenor;\n        }\n    } else {\n        if (consumo <= 0) {\n            throw LecturaMenor;\n        }\n    }\n    //REVIEW: Esto creo que no es necesario\n    if (tipoLectura == 3) {\n        let anioSeleccionado = arrayAnios[data.indexAnio - 1].anio;\n        //mayor \n        if (data.comparaMes < data.mesCaptura) {\n            throw mesMayor;\n        }\n        if (data.comparaAnio < anioSeleccionado) {\n            throw anioMayor\n        }\n        //menor\n        if (data.comparaMes > data.mesCaptura) {\n            throw mesRegistrado\n        }\n        if (data.comparaAnio > anioSeleccionado) {\n            throw anioRegistrado\n        }\n        if (mesActual == 13) {\n            mesActual = 1;\n        }\n        if (mesActual == data.mesLectura) {\n            throw mesIgual\n        }\n    } else\n        if (tipoLectura == 2) {\n            let anhioSeleccionado = arrayAnios[data.indexAnio - 1].anio;\n\n            if (data.comparaMes < data.mesCaptura) {\n                throw mesMayor;\n            }\n            if (data.comparaMes > data.mesCaptura) {\n                throw mesRegistrado\n            }\n            if (data.comparaAnio < anhioSeleccionado) {\n                throw anioMayor\n            }\n            if (data.comparaAnio > anhioSeleccionado) {\n                throw anioRegistrado\n            }\n            if (data.mesCaptura >= data.comparaAnio && data.anhioCaptura >= data.comparaAnio) {\n                throw mesIgual\n            }\n\n        } else\n            if (tipoLectura == 1) {\n                let anhioSeleccionado = arrayAnios[data.indexAnio - 1].anio;\n                let mesActual, anhioActual;\n                if (data.mesCaptura > data.comparaMes) {\n                    throw mesMayor\n                }\n                if (anhioSeleccionado > data.comparaAnio) {\n                    throw anioMayor\n                }\n                if (data.mesCaptura < data.comparaMes) {\n                    throw mesRegistrado\n                }\n                if (anhioSeleccionado < data.comparaAnio) {\n                    throw anioRegistrado\n                }\n                mesActual = date.getMonth() + 2;\n                anhioActual = date.getFullYear();\n                if (mesActual == 13) {\n                    mesActual = 1;\n                    anhioActual = date.getFullYear() + 1;\n                }\n                if (mesActual == data.mesCaptura && anhioActual == data.comparaAnio) {\n                    throw mesMayor\n                }\n            }\n    return true;\n\n}\nasync function enviarDatosLectura(data: any) {\n    const datos = {\n        idToma: data.idToma,\n        cliente: data.nCliente,\n        lecturaAnterior: data.lecturaAnterior,\n        lecturaActual: data.lecturaActual,\n        consumoFinal: data.consumoFinal,\n        mesCaptura: data.mesCaptura,\n        anhioCaptura: data.anhioCaptura,\n        fechaCaptura: data.fechaCaptura,\n        anomalia: data.anomalia,\n        idUsuario: data.idUsuario,\n        latitud: data.Latidude,\n        longitud: data.Longitude,\n        tipoCoordenada: 1,\n        fotos: [],\n        arregloFotos: data.arregloFotos,\n        ruta: data.route\n    }\n    let result = await service.guardarDatosLecturaV2(datos, data.token);\n    console.log(result);\n    let code = result.data.Mensaje;\n    console.log(code);\n    let message = \"\";\n    switch (code) {\n        case 200:\n            message = \"Ok\";\n            break;\n        case 224:\n            throw new Error(\"No se pudo realizar el registro\");\n            break;\n        case 223:\n            throw API223;\n        case 400:\n            throw new Error(\"El mes ya fue capturado\");\n            break;\n        default:\n            throw APIError;\n            break;\n    }\n    return message;\n}\nexport async function obtenerSiguienteIndice(idLectura: number) {\n    let contratos = getContratos();\n    let arrayContratos = new Array;\n    let indice = -1;\n    if (contratos != null) {\n        arrayContratos = JSON.parse(contratos);\n        arrayContratos.map((item, index) => {\n            if (item.id == idLectura)\n                indice = index + 1;\n        })\n    }\n    let result = false;\n    if (indice < arrayContratos.length) {\n        let lecturaSiguiente = arrayContratos[indice];\n        result = guardarDatosLectura(lecturaSiguiente.id, lecturaSiguiente.Contribuyente, lecturaSiguiente.ContratoVigente, lecturaSiguiente.Medidor)\n    }\n    return result;\n}\n//INDEV: dando soporte a los errores\nexport async function historialFechas(fechaInicio: string, fechaFin: string) {\n    try {\n        //Obteniedo los datos para la consulta\n        let basicData = obtenerDatosCliente();\n        let data = {\n            idUsuario: basicData.idUsuario,\n            nCliente: basicData.cliente,\n            fechaInicioH: fechaInicio,\n            fechaFinH: fechaFin\n        }\n        let result = await service.extraerHistorial(data, basicData.token + \"\");\n        if (result.data.Status) {\n            return result.data;\n        } else {\n            throw noRowSelect;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function getDatosLecturaEditar() {\n    try {\n        let { datosLectura, token } = obtenerDatosClienteEditar()\n        if (token != null) {\n            let result = await service.extraerDatoseditar(datosLectura, token);\n            return result.data\n        } else {\n            throw null;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function validorDatosEditarLectura(lecturaDatos: any) {\n    if (lecturaDatos.lecturaActual == \"\" || lecturaDatos.lecturaActual == null)\n        throw LecturaNull;\n    else if (lecturaDatos.consumo < 0)\n        throw LecturaMenor;\n    else if (lecturaDatos.validarAnhio < lecturaDatos.anhioLectura)\n        throw anioMayor;\n    else if (lecturaDatos.validarAnhio > lecturaDatos.anhioLectura)\n        throw anioRegistrado;\n    else if (lecturaDatos.mesLectura < lecturaDatos.validarMes)\n        throw mesRegistrado\n    else if (lecturaDatos.mesLectura > lecturaDatos.validarMes)\n        throw mesMayor;\n    else\n        return null\n\n}\nexport async function actualizarLectura(lecturaDatos: any) {\n    try {\n        let result = await validorDatosEditarLectura(lecturaDatos);\n        let { datosLectura, token } = obtenerDatosClienteEditar();\n        if (result == null) {\n            let data = {\n                idPadronLetura: datosLectura.idConsulta,\n                idToma: lecturaDatos.idPadron,\n                cliente: datosLectura.nCliente,\n                anhioCaptura: lecturaDatos.anhioLectura,\n                consumoFinal: lecturaDatos.consumo,\n                fechaCaptura: lecturaDatos.fechaLectura,\n                lecturaActual: lecturaDatos.lecturaActual,\n                lecturaAnterior: lecturaDatos.lecturaAnterior,\n                mesCaptura: lecturaDatos.mesLectura,\n                anomalia: lecturaDatos.tipoAnomalia\n            }\n            let result = await service.actualizarDatosLectura(data, token + \"\")\n            return result.data;\n        } else {\n            throw result;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function crearReporte(data: { colonia: String, calle: String, numero: String, descripcion: String, contrato: string, fallaAdministrativa: number }) {\n    try {\n        let valid = validarDatosReporte(data);\n        if (valid) {\n            //Llamada a la API\n            let basicData = obtenerDatosCliente();\n            let datosreporte = {\n                cliente: basicData.cliente,\n                usuario: basicData.idUsuario,\n                colonia: data.colonia,\n                calle: data.calle,\n                numero: data.numero,\n                descripcion: data.descripcion,\n                contrato: data.contrato,\n                fallaAdministrativa: data.fallaAdministrativa,\n            }\n            let result = await service.crearReporte(datosreporte, basicData.token + \"\")\n            if (result.data.Status)\n                return result.data.Mensaje\n            else\n                throw new Error(result.data.Mensaje);\n        } else {\n            throw new Error(\"Los campos que presentan * son obligatorios\");\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nfunction validarDatosReporte(data: { colonia: String, calle: String, numero: String, descripcion: String, contrato: string }) {\n    if (data.colonia == \"\" || data.calle == \"\" || data.descripcion == \"\") {\n        return false\n    } else {\n        return true;\n    }\n}\nexport async function historialReportes(fechaInicio: string, fechaFin: string) {\n    try {\n        let basicData = obtenerDatosCliente();\n        let data = {\n            idUsuario: basicData.idUsuario,\n            cliente: basicData.cliente,\n            fechaInicio: fechaInicio,\n            fechaFin: fechaFin\n        }\n        let result = await service.extraerHistorialReportes(data, basicData.token + \"\");\n        if (result.data.Mensaje.length <= 0) {\n            throw noRowSelect;\n        } else {\n            return result.data.Mensaje;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function extraerReporte(id: String) {\n    try {\n        //Obteniendo datos basicos para la consulta;\n        let basicData = obtenerDatosCliente();\n        let data = {\n            cliente: basicData.cliente,\n            idUsuario: basicData.idUsuario,\n            id: id\n        }\n        let result = await service.extraerReporte(data, String(basicData.token));\n        if (result.data.Mensaje.length <= 0) {\n            throw noRowSelect;\n        } else {\n            return result.data.Mensaje;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function obtenerContribuyente(busqueda: string,offset: number,sector: String) {\n    try {\n        let { token, cliente } = obtenerDatosCliente();\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        let datos = {\n            nCliente: cliente,\n            datoBusqueda: busqueda,\n            mes: mes,\n            a_no: anio,\n            Offset: offset,\n            sector:sector\n        }\n        let result = null;\n        if(sector != \"-1\"){\n            result = await service.obtenerDatosSectorPalabraClave(datos,String(token));\n            console.log(\"Se utiliso el sector: \" + sector);\n        }else{\n            result = await service.extraerContribuyente(datos, String(token));\n        }\n        //Mensaje \"Campos vacios\", \"No se encontraron registros\"\n        let data = result.data.mensaje;\n        let isArray = Array.isArray(data);\n        if (isArray) {\n            return data;\n        } else {\n            let message = String(data);\n            throw new Error(message);\n        }\n    } catch (err) {\n        throw conectionError(err);\n    }\n}\nexport async function obtenerTotalDatosSectores(sector: string) {\n    try {\n        let basicData = obtenerDatosCliente();\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        const datosConsulta = {\n            cliente: basicData.cliente,\n            sector: sector,\n            mes: mes,\n            anio: anio\n        }\n        let result = await service.extraerNumeroItems(datosConsulta, String(basicData.token));\n        let exist = result.data.Mensaje.length;\n        if (exist >= 1) {\n            let items = result.data.Mensaje[0].cantidad;\n            let pages = items / 20;\n            let resid = pages % 1;\n            if (resid > 0) {\n                pages++;\n            }\n            return pages;\n        } else {\n            return 0;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function lecturasPorSectorPage(sector: string, offset: number,) {\n    try {\n        let basicData = obtenerDatosCliente();\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        const datosConsulta = {\n            nCliente: basicData.cliente,\n            Sector: sector,\n            mes: mes,\n            a_no: anio,\n            Offset: offset\n        }\n        let result = await service.buscarLecturasPorSector(datosConsulta, basicData.token + \"\");\n        let mensaje = result.data.mensaje;        \n        setCuentasPapas(result.data.Papas);\n        guardarContratos(JSON.stringify(mensaje));\n        if (mensaje.legth === 0 || mensaje === \"No se encontraron registros\") {\n            throw noRowSelect;\n        } else {\n            return mensaje;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function obtenerPromedioConsumo() {\n    try {\n        let { idLectura, token, nCliente } = getDatosLecturaStorage();\n        console.log(token);\n        let datos = {\n            idLectura: idLectura,\n            nCliente: nCliente,\n        }\n        let result = await service.extraerPromedioContribuyente(datos, String(token));\n        let data = result.data.Mensaje;\n        data = Math.round(data);\n        return data;\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function obtenerLogo() {\n    try {\n        let { cliente, token } = obtenerDatosCliente();\n        let data = {\n            nCliente: cliente\n        }\n        let logo = await service.obtenerLogoCliente(data, String(token));\n        setClienteNombreCorto(String(logo.data.Data));\n        setLogoStorage(String(logo.data.Mensaje));\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function obtenerDatosContribuyente() {\n    try {\n        let { idLectura, token } = getDatosLecturaStorage();\n        let { cliente } = obtenerDatosCliente();\n        let datos = {\n            nCliente: cliente,\n            idBusqueda: idLectura\n        }\n        let data = await service.extraerContactoContribuyente(datos, String(token));\n        let result = data.data.Mensaje[0];\n        if( data.data.Code == 200 ){\n            if(data.data.Mensaje.length > 0){\n                setContribuyente(result.Contribuyente);\n            }else{\n                console.log(\"Mensaje de prueba\");\n                throw noRowSelect;\n            }\n        }else{\n\n        }\n        \n        return result;\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function actualizarContribuyente(contacto: { telefono: String, email: String }) {\n    try {\n        let { nCliente, token } = getDatosLecturaStorage();\n        let contribuyente = getContribuyente();\n        let data = {\n            cliente: nCliente,\n            id: contribuyente,\n            telefono: contacto.telefono,\n            email: contacto.email\n        }\n        let result = await service.guardarContribuyente(data, String(token));\n        return result.data.Mensaje;\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function obtenerTotalDatosBusqueda(clave: string, sector: string) {\n    try {\n        let { cliente, token } = obtenerDatosCliente()\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        let data = {\n            cliente: cliente,\n            mes: mes,\n            anio: anio,\n            busqueda: clave,\n            sector: sector\n        }\n        let result = null;\n        if(sector != \"-1\"){\n            console.log(data);\n            result = await service.obtenerNumeroItemsBusquedaSector(data, String(token));\n        }else{\n            result = await service.extraerNumeroItemsBusqueda(data, String(token));\n        }\n        /* return result.data.Mensaje.length; */\n        let exist = result.data.Mensaje.length;\n        if(exist >= 1){\n            let items = result.data.Mensaje[0].Total;\n            let pages = items / 20;\n            let resid = pages % 1;\n            if(resid > 0){\n                pages++;\n            }\n            return pages\n        }else{\n            return 0;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }   \n}\nfunction conectionError(error: any) {\n    let errorMessage = String(error.message);\n    let errorCode = String(error.code);\n    let typeError = error;\n    if (errorMessage.includes(\"Network Error\")) {\n        typeError = netwokError;\n    } else if (errorMessage.includes(\"400\")) {\n        typeError = sesionNotValidError;\n    } else if (errorCode.includes(\"ECONNABORTED\")) {\n        typeError = netwokError;\n    }\n    return typeError;\n}\nexport async function verifyPermissions() {\n    let list = [\n        AndroidPermissions.PERMISSION.CAMERA,\n        AndroidPermissions.PERMISSION.ACCESS_COARSE_LOCATION,\n    ]\n    let validPermissions = \"Salida:\";\n    list.map((item, index) => {\n        let data = AndroidPermissions.checkPermission(item);\n        validPermissions += data + \"\";\n    })\n    return validPermissions;\n}\nexport async function verifyCameraPermission() {\n    let value = await AndroidPermissions.checkPermission(AndroidPermissions.PERMISSION.CAMERA);\n    return value.hasPermission;\n}\nexport async function verifyGPSPermission() {\n    let value = await AndroidPermissions.checkPermission(AndroidPermissions.PERMISSION.ACCESS_COARSE_LOCATION);\n    return value.hasPermission;\n}\nexport async function obtenerContribuyenteInspeccion(busqueda: String){\n    try{\n        let { cliente, token } = obtenerDatosCliente();\n        let data = {\n            Cliente: cliente,\n            Busqueda: busqueda\n        }\n        let result = await service.obtenerContribuyenteInspeccion(data,String(token));\n        let listaDatos =  result.data.mensaje;\n        if(listaDatos instanceof Array){\n            return listaDatos;\n        }else{\n            throw noRowSelect;\n        }\n    }catch(error){\n        throw conectionError(error);\n    }   \n}\n/**\n * Funcion para pedir permisos Camara, gps, storage\n * Si se utilza en web marca un error (Cordova_web_notabiable) solo se utilza en dispisitivos fisicos y emuladoress\n */\nexport async function solicitarPermisos() {\n    let result = await AndroidPermissions.requestPermissions([\n        AndroidPermissions.PERMISSION.CAMERA,\n        AndroidPermissions.PERMISSION.ACCESS_COARSE_LOCATION,\n    ]);\n    return result;\n}\nexport async function obtnerContribuyenteInspeccion(id:String){\n    try{\n        let datos = {\n            Cliente: obtnerCliente(),\n            Padron: id\n        };\n        let result = await service.obtenerDatosContribuyentePorPadron(datos,obtenerToken());\n        console.log(result.data.mensaje.length);\n        let datosContribuyente = result.data.mensaje;\n        if(datosContribuyente.length > 0){\n            return datosContribuyente[0];\n        }else{\n            throw noRowSelect;\n        }\n    }catch(error){\n        throw conectionError(error);\n    }\n}\nexport async function  obtenerPromedioEditar(padron: number){\n    try {\n        let { token, nCliente } = getDatosLecturaStorage();\n        let datosLectura = extraerDatosEditarLectura();\n        let datos = {\n            Cliente: nCliente,\n            Padron: padron,\n            Lectura: datosLectura.idLectura //Esta es la lectura que se va a editar\n        }\n        let result = await service.obtenerPromedioEditar(datos, String(token));\n        let data = result.data.Mensaje;\n        data = Math.round(data);\n        return data;\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\n\nexport async function buscarContrato(busqueda:string){\n    try{\n        let { cliente,token } = obtenerDatosCliente();\n        let idUsuario = getIdUsuario();\n        console.log(idUsuario);\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        let datos = {\n            Cliente: cliente,\n            Contrato: busqueda,\n            mes: mes,\n            a_no: anio,\n            usuario: idUsuario\n        };\n        let result = await service.buscarPorContrato(datos,String(token));\n        let data = result.data.Mensaje;\n        setCuentasPapas(result.data.Papas);\n        let isArray = Array.isArray(data);\n        if (isArray) {\n            return data;\n        } else {\n            let message = String(data);\n            throw new Error(message);\n        }\n    }catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function buscarPorMedidor(busqueda:string){\n    try{\n        let { cliente,token } = obtenerDatosCliente();\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        let idUsuario = getIdUsuario();\n        let datos = {\n            Cliente: cliente,\n            Contrato: busqueda,\n            mes: mes,\n            a_no: anio,\n            usuario: idUsuario\n        };\n        let result = await service.buscarPorMedidor(datos,String(token));\n        let data = result.data.Mensaje;\n        setCuentasPapas(result.data.Papas);\n        console.log(result.data.Papas);\n        let isArray = Array.isArray(data);\n        if (isArray) {\n            return data;\n        } else {\n            let message = String(data);\n            throw new Error(message);\n        }\n    }catch(error){\n        throw conectionError(error);\n    }\n}\nfunction verificarDatosCoutaFija( consumoData: string ){\n    //NOTE: Verificamos que el consumo sea valido\n    let consumo = parseInt(consumoData);\n    if(!isNaN(consumo)){\n        if(consumo < 0 ){\n            throw LecturaMenor;\n        }else{\n            return true;\n        }\n    }else{\n        throw LecturaNull;\n    }\n}\nexport async function guardarCuotaFija(data:any){\n    try{\n        //NOTE: Verificamos los datos del consumo\n        if( verificarDatosCoutaFija(data.Consumo)){\n            //Enviamo los datoa a la API\n            let basicData = obtenerDatosCliente();\n            let token = basicData.token;\n            //NOTE: damos formato a los datos en la interfaz\n            let result = await service.guardarCoutaFijaV2(data,String(token));\n            console.log(result.data.Mensaje);\n            if(result.data.Code == 200){\n                return true;\n            }else if(result.data.Code == 404){\n                throw noRowSelect;\n            }else if(result.data.Code == 423){\n                throw mesMayor;\n            }else if(result.data.Code == 424){\n                throw mesRegistrado;\n            }\n        }\n    }catch(error){\n        throw conectionError(error);\n    }\n\n}\nexport async function obtenerDatosCorte(esmulta = false){\n    try {\n        let { cliente,token } = obtenerDatosCliente(); \n        let padron = esmulta ? getContratoMulta() : getContratoCorte();\n        let Usuario = getIdUsuario();\n        let datos = {\n            'Padron': padron,\n            'Cliente': cliente,\n            'Usuario': Usuario\n        };\n        let result = await service.obtenerDatosContratoCorte(datos,String(token));\n        let DatosContrato = [];\n        if( result.data.code == 200 ){\n            DatosContrato.push(result.data.Mensaje[0]);\n            DatosContrato.push(result.data.Usuario[0]);\n            console.log(DatosContrato);\n            return DatosContrato;\n        }else if ( result.data.code == 403 ){\n            throw errorCarga;\n        }else if ( result.data.code == 404 ){\n            throw noRowSelect;\n        }\n    }catch(error){\n        throw conectionError(error);\n    }\n}\nexport async function RealizarCorteAPI( datos: {Evidencia:any,Motivo:string, Padron: number, Persona:number, Estado: number, Usuario: number, Longitud:string, Latitud: string, Ejercicio: number} ){\n    try {\n        let { cliente, token } = obtenerDatosCliente();\n        let datosCorte = {\n            Cliente: cliente,\n            Motivo: datos.Motivo,\n            Padron: datos.Padron,\n            Persona: datos.Persona,\n            Usuario: datos.Usuario,\n            Estado: datos.Estado,\n            Longitud:datos.Longitud,\n            Latitud: datos.Latitud,\n            Ejercicio: datos.Ejercicio,\n            Evidencia:datos.Evidencia\n        };\n        let resultCorte = await service.realizarCorteTomaSuinpac( datosCorte, String(token));\n        if(resultCorte.data.Code == 200){\n            return (\"OK\");\n        }else if(resultCorte.data.Code == 206){\n            throw errorImagenes;\n        }else if(resultCorte.data.Code == 400){\n            let jsonError = JSON.parse(resultCorte.data.Mensaje);\n            throw new Error(`Error ${jsonError.Code}:\\n${jsonError.Mensaje}`);\n        }\n    }catch( error ){\n        throw conectionError(error);\n    }\n}\nexport async function ListaCortes(Mes: string, Anio: number){\n    try{\n        let { cliente ,idUsuario, token } = obtenerDatosCliente();\n        let data = {\n            \"Cliente\": cliente,\n            \"Usuario\": idUsuario,\n            \"Ejercicio\": Anio,\n            \"Mes\": Mes\n        };\n        let cortes = await service.listarCortesUsuario( data,String(token) );\n        if(cortes.data.Code == 200){\n            return cortes.data.Mensaje;\n        }else if(cortes.data.Code == 404){\n            throw noRowSelect;\n        }\n    }catch(error){\n        throw conectionError(error);\n    }\n}\nexport async function ContratosListaContratoReporte( contrato: string ){\n    try{\n        let { cliente, token } = obtenerDatosCliente();\n        let datos = {\n            Cliente: cliente,\n            Contrato: contrato \n        };\n        let result = await service.buscarContratoReporte(datos,String(token));\n        if(result.data.Code == 200){\n            //NOTE: retornamos la lista de los contratos\n            return result.data.Mensaje;\n        }else{\n            //Error del servidor\n        }\n    }catch(error){\n        console.log(error);\n    }\n}\nexport async function guardarReporteV2(Reporte:any){\n    try{\n        let { cliente , token, idUsuario } = obtenerDatosCliente();\n        console.log(token);\n        let datos = {\n            'Padron': Reporte.Padron,\n            'Cliente':cliente,\n            'Calle':Reporte.Calle,\n            'Colonia':Reporte.Colonia,\n            'Numero':Reporte.Numero,\n            'Descripcion':Reporte.Descripcion,\n            'Latitud':Reporte.Latitud,\n            'Longitud':Reporte.Longitud,\n            'Usuario':idUsuario,\n            'Fotos':Reporte.Fotos,\n            'FallaAdministrativa':Reporte.FallaAdministrativa,\n            'Estatus':Reporte.Estatus\n        }\n        let result = await service.guardarReporte(datos, String(token));\n        console.log(result);\n        if( result.data.Mensaje.Code == 200 ){\n            return true;\n        }else if( result.data.Mensaje.Code == 423 ){\n            throw errorImagenes;\n        }else if( result.data.Mensaje.Code == 403 ){\n            throw ErrorInsertar;\n        }\n        return result.data.Mensaje;\n    }catch(error){\n        throw conectionError(error);\n    }\n}\nexport async function buscarMedidorSinFiltro( clave:string ){\n    try{\n        let { cliente,token } = obtenerDatosCliente();\n        let datos = {\n            'Cliente': cliente,\n            'Contrato': clave\n        };\n        let result = await service.realizarReporteMedidor(datos,String(token));\n        console.log(result.data);\n        if( result.data.Code == 200 ){\n            return result.data.Mensaje;\n        }else{\n            //NOTE: manejador de errores\n            \n        }\n    }catch( error ){\n        throw conectionError(error);\n    }\n}\nexport async function configuracionCuotaFija(  ){\n    try{\n        let { cliente, token } = obtenerDatosCliente();\n        let datos = {\n            'Cliente':cliente\n        };\n        let rawConfiguracion = await service.obtenerConfiguracion(datos,String(token));\n        console.log(rawConfiguracion.data);\n        return rawConfiguracion.data.Configuracion;\n    }catch(error){\n        throw conectionError( error );\n    }\n}\nexport async function EnviarCorte( datos: {Evidencia:any,Motivo:string, Padron: number, Persona:number, Estado: number, Usuario: number, Longitud:string, Latitud: string, Ejercicio: number} ) {\n    try{\n        let { cliente, token } = obtenerDatosCliente();       \n        //NOTE: creamos el objeto que vamos a enviar\n        let datosCorte = {\n            'Longitud': datos.Longitud,\n            'Latitud': datos.Latitud,\n            'Cliente':  cliente,\n            'Motivo': datos.Motivo,\n            'Padron': datos.Padron,\n            'Persona': datos.Persona,\n            'Usuario': datos.Usuario,\n            'Estado': datos.Estado,\n            'Ejercicio': datos.Ejercicio,\n            'Evidencia': datos.Evidencia\n        };\n        let resultCorte = await service.RealizarCorteV2( datosCorte, String( token ));\n        if(resultCorte.data.Code == 200){\n            return (\"OK\");\n        }else if(resultCorte.data.Code == 206){\n            throw errorImagenes;\n        }else if(resultCorte.data.Code == 400){\n            let jsonError = JSON.parse(resultCorte.data.Mensaje);\n            throw new Error(`Error ${jsonError.Code}:\\n${jsonError.Mensaje}`);\n        }\n        \n\n    }catch(error){\n        throw conectionError(error);\n    }\n}\nexport async function historialLecturas( datos:{ anio:number, mes: number } ){\n    try{ \n        let { cliente,idUsuario,token } = obtenerDatosCliente();\n        let datosFecha = {\n            Usuario: idUsuario,\n            Cliente: cliente,\n            Anio: datos.anio,\n            Mes: datos.mes,\n        };\n        let resultHistorial = await service.ObtenerHistorialLecturas( datosFecha, String( token ) );\n        if(resultHistorial.data.Status){\n            return resultHistorial.data.Mensaje;\n        }else{\n            throw noRowSelect;\n        }\n    }catch( error )\n    {\n        throw verificarDatosCoutaFija(error);\n    }\n\n\n}\nexport async function ObtenerListaCortes(  ){\n    try{\n        let { cliente,token } = obtenerDatosCliente();\n        let id =  getIdConfiguracion();\n        let datos = {\n            Cliente: cliente,\n            Configuracion:id\n        }\n        let result = await service.ObtenerListaTareas(datos, String(token));\n        console.log(result.data);\n        if(result.data.Status){\n            //NOTE: lo enviamos al storage\n            guardarTareasCortes(result.data.Tareas);\n            guardarIndexTareas(\"1\");\n            let paginas = (result.data.Tareas.length / 4);\n            let resuido = (parseFloat(result.data.Tareas.length)%(parseFloat(\"5\")));\n            setNumeroPaginasTareas( resuido > 0 ? ((paginas+1)+\"\") : ((paginas)+\"\") );\n            \n        }\n        return result.data.Tareas;\n    }catch( error ){\n        throw conectionError(error);\n    }\n}\nexport async function BuscarContratoCorte( indicio:string ) {\n    try{\n        let { cliente, token } = obtenerDatosCliente();\n        let configuracion = getIdConfiguracion();\n        let mes = date.getMonth()+1;\n        let anio = date.getFullYear();\n        let datos = {\n            'Cliente': cliente,\n            'Configuracion': configuracion,\n            'Indicio':indicio,\n            'Mes':mes,\n            'Anio':anio\n        }        \n        let result = await service.BuscarContratoCorte( datos , String(token) );\n        return result.data.Datos;\n    }catch( error ){\n        throw conectionError(error);\n    }\n}\nexport async function BuscarMedidorCorte( indicio:string ) {\n    try{\n        let { cliente,token  } = obtenerDatosCliente();\n        let configuracion = getIdConfiguracion();\n        console.log(configuracion);\n        let datos = { \n            'Cliente': cliente,\n            'Configuracion': configuracion,\n            'Indicio':indicio,\n\n        }\n        let result = await service.BuscarMedidorCorte(datos,String(token));\n        return result.data.Datos;\n    }catch( error ){\n        throw conectionError(error);\n    }\n}\nexport async function MultarToma(padron:number,total:number,Observacion:string,coords:any,Evidencia:any){\n    try{\n        let { cliente,token,idUsuario } = obtenerDatosCliente();\n        let datos = {\n            Usuario: idUsuario,\n            Padron:padron,\n            Cliente:cliente,\n            Debug:0,\n            Total:total,\n            Observacion:Observacion,\n            Cordenadas: coords,\n            Evidencia:Evidencia\n        }\n        let result = await service.MultarContratoAPI(datos,String(token));\n        console.log(result.data);\n        if(result.data.Status){\n            return true;\n        }else if (result.data.Code == 404){\n            throw ErrorMulta404;\n        }else if (result.data.Code == 424){\n            throw ErrorMulta424;\n        }else if (result.data.Code == 425){\n            throw ErrorMulta425;\n        }else if (result.data.Code == 401){\n            throw ErrorMulta401;\n        }else if( result.data.Code == 423){\n            throw ErrorMulta423;\n        }\n    }catch(error){\n        throw conectionError(error);\n    }\n}","import axios from 'axios'\nimport { returnUpBackOutline } from 'ionicons/icons';\nexport class APIservice {\n    //llamada a la api en la\n    getAuth(data: object) {\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/login-presidentePrueba`, data)\n    }\n    //FIXED:\n    verificarUsuarioLecturista(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/VerificarUsuario`, data, { headers });\n    }\n    buscarSectores(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post('https://api.servicioenlinea.mx/api-movil/buscarSectores', data, { headers })\n    }\n    buscarLecturasPorSector(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/datosLecturaPorSector`, data, { headers });\n    }\n    extraesDatosLectura(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post('https://api.servicioenlinea.mx/api-movil/extrarDatosLecturaPrueba', data, { headers })\n    }\n    //FIXME: esta es una vercion vieja para enviar los datos de la captura \n    guardarDatosLectura(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/guardarDatosLecturaPrueba`, data, { headers })\n    }\n    extraerHistorial(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerHistorialPrueba`, data, { headers });\n    }\n    extraerDatoseditar(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerDatosEditarPrueba`, data, { headers });\n    }\n    actualizarDatosLectura(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/actualizarRegistroPrueba`, data, { headers });\n    }\n    crearReporte(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/crearReportePrueba`, data, { headers });\n    }\n    extraerHistorialReportes(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/listaReportes`, data, { headers });\n    }\n    extraerReporte(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerReporte`, data, { headers });\n    }\n    extraerContribuyente(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/datosLecturaAguaPrueba`, data, { headers });\n    }\n    extraerNumeroItems(data: object, token: String) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/paginas`, data, { headers });\n    }\n    extraerPromedioContribuyente(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/obtenerConsumoPromedio`, data, { headers });\n    }\n    obtenerLogoCliente(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerLogo`, data, { headers });\n    }\n    extraerContactoContribuyente(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerContribuyente`, data, { headers });\n    }\n    guardarContribuyente(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/guardarContribuyente`,data,{headers});\n    }\n    extraerNumeroItemsBusqueda(data: object,token:string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/paginasBusqueda`,data,{headers});\n    }\n    obtenerContribuyenteInspeccion(data:object, token:string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/inspeccionContribuyente`,data,{headers});\n    }\n    obtenerDatosContribuyentePorPadron(data: object,token:String){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/obtenerPadronContribyenteDatos`,data,{headers})\n    }\n    obtenerDatosSectorPalabraClave(data: object,token: String){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(\"https://api.servicioenlinea.mx/api-movil/buscarSectorPalabraClave\",data,{headers});\n    }\n    obtenerNumeroItemsBusquedaSector(data:object,token: String){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(\"https://api.servicioenlinea.mx/api-movil/paginasBusqueaSector\",data,{headers});\n    }\n    obtenerPromedioEditar(data:object,token:String){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(\"https://api.servicioenlinea.mx/api-movil/ObtenerPromedioEditar\",data,{headers});\n    }\n    buscarPorContrato(data:object,token:string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/buscarPorContrato`,data,{headers})\n    }\n    buscarPorMedidor(data:object,token:string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/buscarPorMedidor`,data,{headers})\n    }\n    capturarCoutaFija(data:object,token:string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/consumo`,data,{headers})\n    }\n    obtenerDatosContratoCorte( data: object, token: string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/DatosTomaCorte`,data,{headers});\n    }\n    realizarCorteTomaSuinpac( data: object ,token: string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/RealizarCorte`,data,{headers});\n    }\n    listarCortesUsuario( data:object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/listaCortes`,data,{headers});\n    }\n    //FIXED: Rutas con nuevo controlador\n    buscarContratoReporte( data:object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/ReporteBuscarContrato`,data,{headers});\n    }\n    //FIXED:\n    realizarReporteContrato( data: object, token:string ) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/crearReporteV2`,data,{headers});\n    }\n    //FIXED:\n    realizarReporteMedidor( data:object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/ReporteBuscarMedidor`, data , {headers});\n    }\n    //FIXED:\n    obtenerConfiguracion( data:object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        };\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/ConfiguracionCoutaFija`,data,{headers});\n    }\n    //FIXED:\n    obtenerConfiguracionFotografia( data:object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        };\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/ConfiguracionEvidencia`,data,{headers});\n    }\n    //FIXED: metodos para guardar las fotos de forma ordenada\n    guardarDatosLecturaV2(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/GuardarLecturaV3`, data, { headers })\n    }\n    //FIXED:\n    guardarCoutaFijaV2( data: object, token: string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/GuardarCoutaFija`,data,{headers})\n    }\n    //FIXED:\n    guardarReporte( data:object, token: string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/GuardarReporteAgua`,data,{headers});\n    }\n    //FIXED:\n    RealizarCorteV2( data: object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/RealizarCorte`,data,{ headers });\n    }\n    //FIXED:\n    ObtenerHistorialLecturas( data:object, token: string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/HistorialLecturas`,data,{headers});\n    }\n    //FIXED:\n    ObtenerConfiguracionCortes( data:object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/verificarUsuarioCortes`,data,{headers});\n    }\n    //FIXED:\n    ObtenerListaTareas( data:object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/TareasCortes`,data,{headers});\n    }\n    //FIXED:\n    BuscarContratoCorte( data:object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/BuscarCortePorContrato`,data,{headers});\n    }\n    //FIXED:\n    BuscarMedidorCorte( data:object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/BuscarCortePorMedidor`,data,{headers});\n    }\n    //FIXED:\n    MultarContratoAPI( data:object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/MultarToma`,data,{headers});\n    }\n}\n\n","import { IonAlert, IonButton, IonCard, IonCheckbox, IonContent, IonHeader, IonImg, IonInput, IonItem, IonLabel, IonLoading, IonPage, IonTitle, IonToolbar, useIonViewWillEnter } from '@ionic/react';\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport { Plugins } from '@capacitor/core'\nimport './Home.css';\nimport { Login, obtenerLogo, solicitarPermisos, } from '../controller/apiController';\nimport { restoreUser,clearState } from '../controller/storageController';\nconst { SplashScreen } = Plugins\nconst Home: React.FC = () => {\n  const history = useHistory();\n  const [User, setUserName] = useState('');\n  const [passwors, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [remember, setRemember] = useState(false);\n  useEffect(() => {\n    SplashScreen.hide();\n    handleRequestPermissions();\n    recordarCredenciales();\n  }, [])\n  useIonViewWillEnter(clearState)\n  const recordarCredenciales = async () => {\n    let user = restoreUser();\n    if (user.pass != null && user.user != null) {\n      setUserName(user.user);\n      setPassword(user.pass);\n      setRemember(user.remember);\n    }\n  }\n  const handleBtnLoginPress = () => {\n    setLoading(true)\n    validateUserData();\n  }\n  const validateUserData = async () => {    \n    if (User != \"\" && passwors != \"\" && User != null && passwors != null) {\n      try {\n        setTimeout(() => {\n          if (loading) {\n            throw new Error(\"Tiempo de espera agotado.\");\n          }\n        }, 8000)\n        await Login(User, passwors, remember)\n          .then(async (result) => {\n            await obtenerLogo();\n            history.replace('./form-datos-toma.page');\n          })\n          .catch((err) => {\n            setMessage(err.message);\n          })\n          .finally(() => { setLoading(false) })\n      } catch (err) {\n        setMessage(err.message);\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n      setMessage(\"Campos vacios\")\n    }\n  }\n  const handleRequestPermissions = async () => {\n    await solicitarPermisos().then((result) => {\n      console.log(result)\n    })\n  }\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"danger\" >\n          <IonTitle>Inicio de sessión</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonCard class=\"ion-text-center\" className=\"box\">\n          <IonImg src={\"../assets/Imagenes/Logo_suinpac.jpeg\"}></IonImg>\n          <IonItem className=\"input\">\n            <IonInput type=\"text\" placeholder=\"Usuario\" onIonChange={e => setUserName(e.detail.value!)} value={User}>\n            </IonInput>\n          </IonItem>\n          <IonItem className=\"input\">\n            <IonInput type=\"password\" placeholder=\"Contraseña\" onIonChange={e => setPassword(e.detail.value!)} value={passwors}>\n            </IonInput>\n          </IonItem>\n          <IonItem class=\"ion-text-center\">\n            <IonCheckbox slot=\"start\" color=\"primary\" checked={remember} onIonChange={e => setRemember(e.detail.checked)}></IonCheckbox>\n            <IonLabel>Recordar Usuario y Contraseña</IonLabel>\n          </IonItem>\n          <IonButton color=\"danger\" onClick={handleBtnLoginPress} className=\"input button\">INICIAR SESSIÓN</IonButton>\n        </IonCard>\n        <IonLoading\n          cssClass=\"my-custom-class\"\n          isOpen={loading}\n          onDidDismiss={() => setLoading(false)}\n          message=\"Por favor espere\"\n        />\n        <IonAlert\n          cssClass=\"my-custom-class\"\n          header={\"ERROR\"}\n          message={message}\n          isOpen={message.length > 0}\n          onDidDismiss={() => { setMessage('') }}\n        />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Home;","\nimport './left-menu.css';\nimport { create, logOut, reader, water, cutOutline, timer, construct, warning } from 'ionicons/icons'\nimport { IonMenu, IonContent, IonImg, IonItemDivider, IonMenuToggle, IonRouterOutlet, IonItem, IonLabel, IonIcon, IonSpinner } from '@ionic/react'\nimport { useEffect, useState } from 'react';\nimport { RouteComponentProps, useHistory } from 'react-router-dom'\nimport { cerrarSesion, getLogoStorage} from '../controller/storageController'\ninterface ContainerProps { }\n\nconst MenuLeft: React.FC<ContainerProps> = () => {\n    const history = useHistory();\n    let [selectedIndex, setSelectedIndex] = useState(-1);\n    const [logo,setLogo] = useState(\"\");\n    useEffect(()=>{\n\n    },[])\n    const appPages = [\n        {\n            title: 'Toma de agua',\n            selects: ['form-datos-toma.page','datos-contribuyente.page'],\n            icon: water,\n            path: '/form-datos-toma.page'\n        }, {\n            title: 'Historial de lecturas',\n            selects: ['historial-lecturas.page','editar-lecturas-agua.page'],\n            icon: reader,\n            path: '/historial-lecturas.page'\n        }, {\n\n            title: 'Reportes',\n            selects: ['ContratosReportes','reportes.page'],\n            path: '/ContratosReportes',\n            icon: construct\n        },\n        /*{\n            title: 'Historial reportes',\n            selects: ['historial-reportes.page', 'detalles-reportes.page'],\n            path: '/historial-reportes.page',\n            icon: newspaper\n        },*/\n        {\n            title: 'Cortes',\n            selects: ['buscar-contrato','realizar-corte'],\n            path: '/buscar-contrato',\n            icon: cutOutline\n        },\n        {\n            title: 'Historial Cortes',\n            selects: ['buscar-corte'],\n            path: '/buscar-corte',\n            icon: timer\n        },\n        {\n            title: 'Multar',\n            selects: ['Multas'],\n            path: '/Multas',\n            icon: warning\n        },\n        /*{\n            title: 'Inspecciones',\n            selects: ['inspeccciones.page'],\n            path: '/inspeccciones.page',\n            icon: newspaper\n        },*/\n        {\n            title: 'Salir',\n            selects: ['inicio-de-sesion.page'],\n            icon: logOut\n        },\n    ];\n    useEffect(() => {\n        itemSelected();\n        cargarLogo();\n    });\n    \n    const itemSelected = () => {\n        let dir = window.location.pathname.toString().split(\"/\")[1];\n        let selected = false;\n        if (dir != undefined) {\n            appPages.map((item, pageIndex) => {\n                item.selects.map((item, index) => {\n                    if (item == dir) {\n                        setSelectedIndex(pageIndex);\n                        selected = true;\n                    }\n                })\n            })\n            if (!selected) {\n                setSelectedIndex(0);\n            }\n        }\n    }\n    const btnSelected = (dir: any) => {\n        if (dir.title == 'Salir') {\n            cerrarSesion()\n                .then((result) => {\n                    history.replace(\"/home\")\n                })\n        } else {\n            history.replace(dir.path);\n        }\n    }\n    const cargarLogo = async ()=>{\n        if(logo == \"\"){\n            await getLogoStorage().then((result)=>{\n                setLogo(String(result));\n            });\n        }\n    }\n    return (\n        <div>\n            <IonMenu side=\"start\" menuId=\"first\" contentId=\"main-content\" >\n            <IonContent >\n                    <div className = \"center\" >\n                        {   logo != \"\" ? \n                            <IonImg  src= {\"data:image/png;base64,\"+logo}/* \"../assets/Imagenes/Logo recortado.png\" */></IonImg> : \n                            <IonSpinner className = \"spinerItem\" color = \"danger\" name = \"lines\"></IonSpinner>}\n                    <br></br>\n                    </div>\n\n                    {/*<IonItemDivider className=\"menuLeft\" />*/}\n                    <IonMenuToggle  >\n                        {\n                            appPages.map((item, index) => {\n                                return <IonItem key={index} button={true} className={index == selectedIndex ? \"selected\" : \"\"} onClick={() => { btnSelected(item) }}>\n                                    <IonLabel>{item.title}</IonLabel>\n                                    <IonIcon slot=\"start\" ios={item.icon + \"-outline\"} md={item.icon + \"-sharp\"} color=\"blue\"></IonIcon>\n                                </IonItem>\n                            })\n                        }\n                    </IonMenuToggle>\n                    {/*<IonItemDivider />*/}\n                </IonContent>\n            </IonMenu>\n            <IonRouterOutlet id = \"main-content\"></IonRouterOutlet>\n        </div>\n    )\n}\n\nexport default MenuLeft;","import React, { useEffect, useState } from \"react\";\nimport {\n  IonPage,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonContent,\n  IonItem,\n  IonButtons,\n  IonMenuButton,\n  IonCard,\n  IonCardHeader,\n  IonLabel,\n  IonSelect,\n  IonAlert,\n  IonSelectOption,\n  IonCardContent,\n  IonItemDivider,\n  IonList,\n  IonLoading,\n  IonButton,\n  IonInput,\n  IonIcon,\n  IonGrid,\n  IonRow,\n  IonCol,\n  useIonViewWillEnter,\n  IonNote,\n  useIonViewWillLeave,\n  \n} from \"@ionic/react\";\nimport { useHistory } from 'react-router-dom'\nimport \"./form-datos-toma.page.css\";\nimport MenuLeft from '../../components/left-menu';\nimport { buscarSectores, lecturasPorSectorPage, solicitarPermisos, verifyCameraPermission, verifyGPSPermission, obtenerContribuyente, obtenerTotalDatosSectores, obtenerTotalDatosBusqueda,buscarContrato,buscarPorMedidor, configuracionCuotaFija} from '../../controller/apiController';\nimport { getUsuario, guardarDatosLectura, cerrarSesion, verifyingSession, setContribuyenteBuscado, setPuntero, getPuntero, getNumeroPaginas, setNumeroPaginas, getClienteNombreCorto, setSector, getSector, getPunteroBusqueda, getPaginasBusqueda, setPunteroBusqueda, setPaginasBusqueda,getCuentasPapas } from '../../controller/storageController';\nimport { searchCircle, arrowForwardOutline, arrowBackOutline, cogSharp, server } from 'ionicons/icons'\nimport { isPlatform} from '@ionic/react';\nconst FormDatosTomaPage: React.FC = () => {\n  const history = useHistory();\n  const [user, setUser] = useState('');\n  const [sectores, setSectores] = useState<any[]>([]);\n  const [message, setMessage] = useState('');\n  const [idSector, setIdSector] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [lecturas, setLecuras] = useState<any[]>([])\n  const [typeErro, setTypeError] = useState('');\n  const [permissions, setPermissons] = useState(true);\n  const [hideAlertButons, setHideAlertbuttons] = useState(false);\n  const [block, setBlock] = useState(false);\n  const [tipoMessage, setTipoMessage] = useState(\"Mensaje\");\n  const [tokenExpired, setTokenExpired] = useState(false);\n  const [textoBusqueda, setTextoBusqueda] = useState(String);\n  const [serched, setSerched] = useState(false);\n  const [paginas, setPaginas] = useState(Number);\n  const [showPagination, setShowPagination] = useState(false);\n  const [nombreCliente, setNombreCliente] = useState(String);\n  const [busqueda, setBusqueda] = useState(false);\n  const [filtro,setFiltro] = useState(1);\n  const [placeHolder,setPlaceHolder] = useState(\"Buscar por contrato\");\n  const alertButtons = [\n    {\n      text: \"Reintentar\", handler: () => {\n        setMessage(\"\");\n        typeErro == \"sectores\" ? cargarSectores() : buscarPorSector(idSector);\n      }\n    },\n    {\n      text: \"Cancelar\", handle: () => {\n        setMessage(\"\");\n      }\n    }\n  ]\n  const [activarMenu,setActivarMenu] = useState(true);\n  const isSessionValid = async () => {\n    let valid = verifyingSession();\n    setTokenExpired(!valid);\n    setBlock(!valid);\n    let nombreCorto = await getClienteNombreCorto();\n    setNombreCliente(String(nombreCorto));\n  }\n\n  useEffect(() => { isSessionValid() }, []);\n  useEffect(() => { tokenExpired ? logOut(tokenExpired) : prepararPantalla() }, [tokenExpired])\n\n  const logOut = (valid: boolean) => {\n    if (valid) {\n      setTipoMessage(\"Sesión no valida\");\n      setMessage(\"Inicie sesión por favor\\nRegresando...\");\n      setHideAlertbuttons(true);\n      setTimeout(async () => {\n        setTipoMessage('Error');\n        setMessage('');\n        await cerrarSesion()\n          .then((result) => {\n            history.replace(\"/home\")\n          })\n      }, 2500);\n    }\n  }\n  const prepararPantalla = async () => {\n    await solicitarPermisos()\n      .then(async (err) => {\n        let camera = await verifyCameraPermission();\n        let gps = await verifyGPSPermission();\n        if (camera && gps) {\n          let storageUser = getUsuario();\n          setUser(storageUser + \"\");\n          cargarSectores();\n        } else {\n          setHideAlertbuttons(true);\n          setMessage(\"Debe otorgar permisos para usar la aplicación\");\n          setBlock(true)\n          setTimeout(() => {\n            history.replace(\"/home\")\n          }, 2500)\n        }\n      }).catch(() => {\n        //Quitar antes de la vercion final (solo sirve en web)\n        let storageUser = getUsuario();\n        setUser(storageUser + \"\");\n        cargarSectores()\n      })\n    /**\n   * Activar el metodo solo para la version web de prueba\n   */\n\n    //setMessage(\"EL IOIOA\")\n  }\n  const cargarSectores = async () => {\n    await buscarSectores()\n      .then(result => setSectores(result))\n      .catch(err => {\n        let errorMessage = String(err.message);\n        let sessionValid = errorMessage.includes(\"Sesion no valida\");\n        setTokenExpired(sessionValid);\n        setIdSector(\"\");\n        if (!sessionValid) {\n          setMessage(err.message)\n          setTypeError(\"sectores\")\n        }\n      })\n  }\n  useIonViewWillEnter(()=>{setActivarMenu(true)});\n  useIonViewWillLeave(()=>{setActivarMenu(false)});\n  const buscarPorSector = async (idSector:string) => {\n    setBusqueda(false)\n    setLoading(true);\n    await obtenerTotalDatosSectores(idSector).then((result) => {\n      console.log(result);\n      setNumeroPaginas(parseInt(result + \"\"))\n      setPaginas(parseInt(result + \"\"));\n      setPuntero(0)\n    })\n    await lecturasPorSectorPage(idSector, 0)\n      .then((result) => {\n        setShowPagination(true);\n        setLecuras(result);\n        setSerched(false)\n        setPuntero(0);\n      })\n      .catch((err) => {\n        setLecuras([]);\n        let errorMessage = String(err.message);\n        let expired = errorMessage.includes(\"Sesion no valida\");\n        setTokenExpired(expired);\n        if (!expired) {\n          setHideAlertbuttons(true)\n          setTypeError(\"Mensaje\");\n          setMessage(err.message)\n        }\n      })\n      .finally(() => { setLoading(false) })\n  }\n  const abrirCapturaDatos = async (idLectura: string, contribuyente: string, contratoVigente: string, medidor: string,metodo:number,esPapa:boolean) => {\n    if(!esPapa){\n      if( metodo != 1 ){\n        setContribuyenteBuscado(serched);\n        let result = guardarDatosLectura(idLectura, contribuyente, contratoVigente, medidor);\n        if (result === true) {\n          //Redireccion a toma de lectura\n          history.push('/captura-de-lectura.page');\n          setHideAlertbuttons(true);\n        }\n      }else{\n        //INDEV: obtenemo la configuracion de los clie \n        await configuracionCuotaFija()\n        .then((result)=>{\n            //NOTE: si el valor del result es 1 se inserta\n            if(result == \"1\"){\n              let result = guardarDatosLectura(idLectura, contribuyente, contratoVigente, medidor);\n              if(result === true){\n                history.push('/captura-de-lectura.page');\n                setHideAlertbuttons(true);\n              }\n            }else{              \n              setHideAlertbuttons(true);\n              setTipoMessage(\"Mensaje\");\n              setMessage(\"Temporalmente deshabilitado\");   \n            }\n        })\n        .catch((error)=>{\n          //Mandamos un error al usuario\n        })\n      }\n     }\n  }\n  const buscarPalabraClave = async () => {\n\n    if(idSector == \"\"){\n      setBusqueda(true);\n      setLecuras([]);\n      setShowPagination(true);\n      setLoading(true);\n      await obtenerTotalDatosBusqueda(textoBusqueda,\"-1\").then((result) => {\n        let paginas = parseInt(String(result));\n        setPunteroBusqueda(0);\n        setPaginasBusqueda(paginas);\n        setPaginas(paginas);\n      });\n      await obtenerContribuyente(textoBusqueda,0,\"-1\").then((result) => {\n        console.log(result);\n        setSerched(true);\n        setLecuras(result);\n      }).catch((err) => {\n        setLecuras([]);\n        let errorMessage = String(err.message);\n        let sessionValid = errorMessage.includes(\"Sesion no valida\");\n        if (!sessionValid) {\n          setHideAlertbuttons(true);\n          setTipoMessage(\"ERROR\");\n          setMessage(errorMessage);\n        } else {\n          setTokenExpired(true);\n        }\n      }).finally(() => { setLoading(false) });\n    }else{\n      console.log(\"Busqueda por sector\");\n      handleBuscarSectorParablaClave();\n    }\n  }\n  const handleInputSerh = (texto: string) => {\n    setTextoBusqueda(texto);\n  }\n  const handleNextPage = () => {\n    setLoading(true);\n    let puntero = getPuntero();\n    setPuntero(puntero + 1);\n    puntero++;\n    let pages = getNumeroPaginas();\n    let itemIndex = 0;\n    if (puntero >= pages) {\n      setPuntero(0);\n      puntero = 0;\n      itemIndex = puntero * 20;\n    } else {\n      itemIndex = puntero * 20;\n    }\n    console.log(itemIndex, idSector);\n    punteroBuscarPorSector(itemIndex, idSector);\n  }\n  const handlePreviousPage = () => {\n    let puntero = getPuntero();\n    if (puntero - 1 < 0) {\n      puntero = getNumeroPaginas() - 1;\n      setPuntero(puntero);\n    } else {\n      setPuntero(puntero - 1);\n      puntero--;\n    }\n    let pages = getNumeroPaginas();\n    let itemIndex = (puntero * 20);\n    punteroBuscarPorSector(itemIndex, idSector);\n  }\n  const punteroBuscarPorSector = async (offset: number, sector: string) => {\n    setBusqueda(false);\n    setLoading(true);\n    await lecturasPorSectorPage(sector, offset)\n      .then((result) => {\n        setLecuras(result);\n        setSerched(false)\n      })\n      .catch((err) => {\n        console.log(err)\n        setLecuras([]);\n        let errorMessage = String(err.message);\n        let expired = errorMessage.includes(\"Sesion no valida\");\n        setTokenExpired(expired);\n        if (!expired) {\n          setHideAlertbuttons(true)\n          setTypeError(\"Mensaje\");\n          setMessage(err.message)\n        }\n      })\n      .finally(() => { setLoading(false) })\n  }\n  const handleSector = (sector: string) => {\n    setIdSector(sector);\n    setSector(sector);\n    buscarPorSector(sector);\n\n  }\n  const handleNextPageBusqueda = () => {\n    setLoading(true); \n    let puntero = getPunteroBusqueda();\n    setPunteroBusqueda(puntero + 1);\n    puntero++;\n    let pages = getPaginasBusqueda()\n    let itemIndex = 0;\n    if (puntero >= pages) {\n      setPunteroBusqueda(0);\n      puntero = 0;\n      itemIndex = puntero * 20;\n    } else {\n      itemIndex = puntero * 20;\n    }\n    console.log(itemIndex, textoBusqueda);\n    punteroBuscarPorClave(itemIndex);\n  }\n  const handlePreviousPageBusqueda = () => {\n    setLoading(true);\n    let puntero = getPunteroBusqueda();\n    if (puntero - 1 < 0) {\n      puntero = getPaginasBusqueda() - 1;\n      setPunteroBusqueda(puntero);\n    } else {\n      setPunteroBusqueda(puntero - 1);\n      puntero--;\n    }\n    let itemIndex = (puntero * 20);\n    console.log(itemIndex, textoBusqueda);\n    punteroBuscarPorClave(itemIndex);\n  }\n  const punteroBuscarPorClave = async (offset: number) => {\n      setBusqueda(true);\n      await obtenerContribuyente(textoBusqueda,offset,\"-1\").then((result) => {\n        setSerched(true);\n        setLecuras(result);\n      }).catch((err) => {\n        let errorMessage = String(err.message);\n        let sessionValid = errorMessage.includes(\"Sesion no valida\");\n        if (!sessionValid) {\n          setHideAlertbuttons(true);\n          setTipoMessage(\"Mensaje\");\n          setMessage(errorMessage);\n        } else {\n          setTokenExpired(true);\n        }\n      }).finally(() => { setLoading(false) });\n  }\n  const handleCancelSector = () =>{\n    setIdSector(\"\");\n  }\n  const handleBuscarSectorParablaClave = async () =>{\n    setBusqueda(true);\n    setLecuras([]);\n    setShowPagination(true);\n    setLoading(true);\n    await obtenerTotalDatosBusqueda(textoBusqueda,idSector).then((result) => {\n      let paginas = parseInt(String(result));\n      setPunteroBusqueda(0);\n      setPaginasBusqueda(paginas);\n      setPaginas(paginas);\n    });\n    await obtenerContribuyente(textoBusqueda,0,idSector).then((result) => {\n      console.log(result);\n      setSerched(true);\n      setLecuras(result);\n    }).catch((err) => {\n      setLecuras([]);\n      let errorMessage = String(err.message);\n      let sessionValid = errorMessage.includes(\"Sesion no valida\");\n      if (!sessionValid) {\n        setHideAlertbuttons(true);\n        setShowPagination(false);\n        setTipoMessage(\"Mensaje\");\n        setMessage(errorMessage);\n      } else {\n        setTokenExpired(true);\n      }\n    }).finally(() => { setLoading(false) });\n  }  \n  const handleCancelFiltro = () =>{\n    setFiltro(1);\n  }\n  const buscarFiltro = () =>{\n    if(filtro == 1){\n      porContrato();\n    }\n    if(filtro == 2){\n      porMedidor();\n    }\n    if(filtro == 3){\n    }\n  }\n  const porContrato = async () =>{\n    setBusqueda(true);\n    setLecuras([]);\n    setShowPagination(false);\n    setLoading(true);\n    console.log(zeroFill(textoBusqueda));\n    await buscarContrato(zeroFill(textoBusqueda))\n    .then(result =>{\n      setLecuras(result);\n    }).catch(err=>{\n      setLecuras([]);\n      let errorMessage = String(err.message);\n      let expired = errorMessage.includes(\"Sesion no valida\");\n      setTokenExpired(expired);\n      if (!expired) {\n        setHideAlertbuttons(true)\n        setTypeError(\"Mensaje\");\n        setMessage(err.message)\n      }\n    }).finally(\n     ()=>{setLoading(false);} \n    )\n  }\n  const porMedidor = async () =>{ \n    setBusqueda(true);\n    setLecuras([]);\n    setShowPagination(false);\n    setLoading(true);\n    console.log(zeroFill(textoBusqueda,10));\n    await buscarPorMedidor(zeroFill(textoBusqueda,10))\n    .then(result =>{\n      setLecuras(result);\n    }).catch(err=>{\n      setLecuras([]);\n      let errorMessage = String(err.message);\n      let expired = errorMessage.includes(\"Sesion no valida\");\n      setTokenExpired(expired);\n      if (!expired) {\n        setHideAlertbuttons(true)\n        setTypeError(\"Mensaje\");\n        setMessage(err.message)\n      }\n    }).finally(\n     ()=>{setLoading(false);} \n    )\n  }\n  const functionValidarLectura = (estatus: number, cobro:number) =>{\n    let leyendaCobro = \"\";\n    let result = [\"\",false];\n    if(cobro == 1){\n      leyendaCobro = \"Cuota Fija \";\n    }\n  switch(estatus){\n    case 1:\n      result = [ leyendaCobro + \"\",cobro == 1];\n    break;\n    case 2:\n     result = [leyendaCobro + \"\",cobro == 1];\n    break;\n    case 3:\n      result = [ leyendaCobro + \"Baja Temporal\",true];\n    break;\n    case 4:\n      result = [ leyendaCobro +  \"Baja Permanente\",true];\n    break;\n    case 5:\n      result = [ leyendaCobro + \"Inactivo\",true];\n    break;\n    case 6:\n      result = [ leyendaCobro +  \"Nueva\",true];\n    break;    \n    case 9:\n      result = [ leyendaCobro +  \"Sin Toma\",true];\n    break;\n    case 10:\n      result = [ leyendaCobro +  \"Multada\",true]\n    break;\n  }\n  return result;\n  }\n  function zeroFill( number:string,width:number = 9)\n{\n  while(number.length < width){\n    number = \"0\"+number;\n  }\n  return number;\n  }\n  const handleSelectFiltro = (filter: number) => {\n  setFiltro(filter); \n  if(filtro == 1){\n    setPlaceHolder(\"Buscar por Medidor\");\n  }\n  if(filtro == 2){\n    setPlaceHolder(\"Buscar por Contrato\");\n  }\n  }\n  return (\n    <IonPage>\n      {\n        activarMenu ? \n        <MenuLeft />: <></>\n      }\n      <IonHeader>\n        <IonToolbar color=\"danger\" >\n          <IonTitle>{`${user} - ${nombreCliente}`}</IonTitle>\n          <IonButtons slot=\"start\" className=\"btnMenu\">\n            <IonMenuButton ></IonMenuButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonCard class=\"ion-text-center\" className=\"box\">\n          <IonCardHeader>\n            <div>\n              <h3>Lectura de agua potable</h3>\n              <IonLabel>Puedes realizar busquedas por:</IonLabel>\n              <p>Contrato y Medidor</p>\n              <br />\n            </div>\n            <IonGrid>\n            <IonRow>\n                <IonCol>\n                <IonItem>\n                  <IonLabel>Filtrar Por:</IonLabel>\n                <IonSelect onIonCancel = {handleCancelFiltro} value = {filtro} placeholder = \"Seleccione el filtro\" interface = \"action-sheet\" onIonChange = {e => {handleSelectFiltro(parseInt(e.detail.value+\"\"))}}>\n                    <IonSelectOption value={1} >Contrato</IonSelectOption>\n                    <IonSelectOption value={2} >Medidor</IonSelectOption>\n                  </IonSelect>\n                </IonItem>\n                </IonCol>\n              </IonRow>\n              <IonRow>\n                <IonCol size=\"9\">\n                  <IonItem>\n                    <IonInput type=\"number\" placeholder = {placeHolder} onIonChange={e => { handleInputSerh(String(e.detail.value)) }}></IonInput>\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"2\" class=\"btnSerch\">\n                  <IonButton color=\"danger\" size=\"large\" shape=\"round\" onClick={buscarFiltro}><IonIcon icon={searchCircle} color=\"light\" size=\"large\"></IonIcon></IonButton>\n                </IonCol>\n              </IonRow>\n              <IonItem>\n                <IonLabel className=\"center\" color=\"\">o seleccione un sector</IonLabel>\n              </IonItem>\n            </IonGrid>\n            <IonItem>\n              <IonLabel>Sectores</IonLabel>\n              <IonSelect\n                placeholder=\"Seleccionar uno\"\n                onIonChange={e => { handleSector(e.detail.value) }}\n                interface=\"action-sheet\"\n                disabled={block}\n                cancelText=\"Cancelar\"\n                value={idSector}\n              >\n                {\n                  sectores != null  ?\n                    sectores.map(function (item, index) {\n                      return <IonSelectOption key={index} value={item.id}>{item.Sector}</IonSelectOption>\n                    }) :\n                    <IonSelectOption disabled>\n                      Sin Sectores\n                    </IonSelectOption>\n                }\n              </IonSelect>\n            </IonItem>\n          </IonCardHeader>\n          <IonCardContent >\n            <IonItemDivider >\n              {showPagination ? <IonGrid>\n                <IonRow>\n                  <IonCol>\n                    <IonButton shape=\"round\" color=\"danger\" size=\"small\" onClick={busqueda ? handlePreviousPageBusqueda : handlePreviousPage} disabled={getPuntero() == 0}>\n                      <IonIcon icon={arrowBackOutline} size=\"small\" ></IonIcon>\n                    </IonButton></IonCol>\n                  <IonCol className = \"centrar-ios\" >\n                    <IonLabel >Pagina {busqueda ? getPunteroBusqueda() + 1 : getPuntero() + 1} de {(paginas == 0 ? 1 : paginas)}</IonLabel>\n                  </IonCol>\n                  <IonCol>\n                    <IonButton shape=\"round\" color=\"danger\" onClick={busqueda ? handleNextPageBusqueda : handleNextPage}  disabled = {getPuntero()+1==(getNumeroPaginas())}>\n                      <IonIcon icon={arrowForwardOutline} size=\"small\" ></IonIcon>\n                    </IonButton>\n                  </IonCol>\n                </IonRow>\n              </IonGrid> : <IonLabel className=\"center\" class=\"ion-text-center\" >Mostrando Resultados</IonLabel>\n              }\n            </IonItemDivider>\n            <IonList >\n              {\n                lecturas.map(function (item, index) {\n                  let papas = getCuentasPapas();\n                  let arrayData = functionValidarLectura(parseInt(item.Estatus),parseInt(item.M_etodoCobro));\n                  let cuentaPapa = String(papas).includes(item.id);\n                  if(cuentaPapa){\n                    arrayData[0] += \"Desarrollo\";  \n                  }\n                  return <div className = { ( cuentaPapa || arrayData[1]) ? 'cuotaFija':''} key={index} onClick={() => {  abrirCapturaDatos(item.id, item.Contribuyente, item.ContratoVigente, item.Medidor,item.M_etodoCobro,cuentaPapa) }}>\n                    <IonItem detail={true} className = {isPlatform(\"ios\") ? \"padding-ios\" : \"\" } >\n                      <IonList>\n                        <IonLabel>{item.Contribuyente}</IonLabel>\n                        <p>Contrato: {item.ContratoVigente},\n                           Medidor: {item.Medidor}, \n                           Toma: {item.Toma}\n                           &nbsp;&nbsp;&nbsp;&nbsp;\n                           {\n                             (cuentaPapa || arrayData[1]) ? <IonNote style ={{fontsize: 20}} color=\"danger\">{arrayData[0]}</IonNote> :\"\"\n                           }\n                        </p>\n                      </IonList>\n                    </IonItem>\n                  </div>\n                })\n              }\n            </IonList>\n          </IonCardContent>\n        </IonCard>\n        <IonAlert\n          cssClass=\"my-custom-class\"\n          header={tipoMessage}\n          message={message}\n          isOpen={message.length > 0}\n          backdropDismiss={false}\n          buttons={hideAlertButons ? [{ text: \"Aceptar\", handler: () => { setMessage(\"\") } }] : alertButtons}\n        />\n        <IonLoading\n          cssClass=\"my-custom-class\"\n          isOpen={loading}\n          onDidDismiss={() => { setLoading(false); }}\n          message=\"Por favor espere\"\n        />\n        <IonAlert\n          cssClass=\"my-custom-class\"\n          header={\"ERROR\"}\n          message={'Para poder hacer uso de todas las funciones de la aplicaciòn por favor acepta los permisos solicitados por la misma'}\n          isOpen={!permissions}\n        />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default FormDatosTomaPage;","import { useCamera, } from '@capacitor-community/react-hooks/camera';\nimport { CameraResultType, CameraSource} from '@capacitor/core';\nimport { callCordovaPlugin } from '@ionic-native/core/decorators/common';\nimport { Geolocation, Geoposition } from '@ionic-native/geolocation';\nlet calidad = 50;\n//NOTE: para fotos de fachada y calle\nlet alto = 500; // 1280\nlet ancho = 400; // 800 \n//NOTE: para la foto de la toma\n\n\nexport function useTakePhoto( ) {\n  const { getPhoto } = useCamera();\n  const takePhoto = async () => {\n    const cameraPhoto = await getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: calidad,\n      height: alto,\n      width: ancho\n    });\n    return cameraPhoto;\n  }\n  return {\n    takePhoto\n  }\n}\nexport function asignarCalidad(cl:number) {\n  calidad < 5 ? calidad = 5 : ( cl > 100 ) ? calidad = 100 : calidad = cl; \n}\nexport function modificarTamanio ( reducir:boolean ){\n  reducir ? alto = 500 : alto = 1280;\n  reducir ? ancho = 400 : ancho = 800; \n}\n\nexport async function generarFechas(anio: number) {\n  let result = new Array;\n  let listaMeses = new Array;\n  listaMeses = [\n    {\n      id: 1,\n      mes: \"Enero\"\n    }, {\n      id: 2,\n      mes: \"Febrero\"\n    },\n    {\n      id: 3,\n      mes: \"Marzo\"\n    },\n    {\n      id: 4,\n      mes: \"Abril\"\n    }, {\n      id: 5,\n      mes: \"Mayo\"\n    }, {\n      id: 6,\n      mes: \"Junio\"\n    }, {\n      id: 7,\n      mes: \"Julio\"\n    }, {\n      id: 8,\n      mes: \"Agosto\"\n    }, {\n      id: 9,\n      mes: \"Septiembre\"\n    }, {\n      id: 10,\n      mes: \"Octubre\"\n    }, {\n      id: 11,\n      mes: \"Noviembre\"\n    }, {\n      id: 12,\n      mes: \"Diciembre\"\n    }]\n  let listaAnios = generarAnios(anio);\n  result.push({ 'Meses': listaMeses });\n  result.push({ 'Anios': listaAnios });\n  return result;\n}\nexport function generarAniosPosterior(anio: number) {\n  let listaAnios = new Array;\n  let anioActual = new Date().getFullYear() + 1;\n  let idAnio = 1;\n  for (let anios = anio; anios <= anioActual; anios++) {\n    listaAnios.push({ 'id': idAnio, anio: anios });\n    idAnio++;\n  }\n  return listaAnios;\n}\nexport function obtenerBase64(path: string) {\n  let imgEncode = leerArchivo(path);\n  return imgEncode;\n}\nasync function leerArchivo(path: string) {\n  let file = await fetch(path);\n  let blobFile = await file.blob();\n  let imgEncode = await convertBase64(blobFile);\n  return imgEncode;\n}\nasync function convertBase64(blobFile: Blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader;\n    reader.onerror = reject;\n    reader.onloadend = () => {\n      let baseSplit  = reader.result;/* ?.toString().split(',')[1] */\n      resolve(baseSplit);\n    }\n    reader.readAsDataURL(blobFile);\n  })\n}\nexport function generarAnios(defaultAnio: number) {\n  let listaAnios = new Array;\n  let menorAnio = (defaultAnio - 10);\n  let anioMaximo = (defaultAnio + 3);\n  let idAnio = 1;\n  for (menorAnio; menorAnio <= anioMaximo; menorAnio++) {\n    listaAnios.push({ 'id': idAnio, anio: menorAnio });\n    idAnio++;\n  }\n  return listaAnios;\n\n}\nexport async function obtenerCoordenadas() {\n  try {\n    let coords = await Geolocation.getCurrentPosition();\n  return coords.coords;\n  } catch (err) {\n    throw err;\n  }\n}\nexport function zeroFill( number:string,width:number = 9){\n  while(number.length < width){\n    number = \"0\"+number;\n  }\n  return number;\n}","export default __webpack_public_path__ + \"static/media/sinFoto.131cdc10.jpg\";","import React, { useEffect, useState } from \"react\";\nimport {\n    IonAlert,\n    IonButton,\n    IonButtons,\n    IonCard,\n    IonCardContent,\n    IonCardHeader,\n    IonCol,\n    IonContent,\n    IonDatetime,\n    IonGrid,\n    IonHeader,\n    IonIcon,\n    IonImg,\n    IonInput,\n    IonItem,\n    IonLabel,\n    IonLoading,\n    IonMenuButton,\n    IonPage,\n    IonRow,\n    IonSelect,\n    IonSelectOption,\n    IonTitle,\n    IonToolbar,\n    useIonToast,\n    IonChip,\n    useIonViewWillEnter,\n    useIonViewDidEnter,\n    IonRippleEffect\n} from '@ionic/react'\nimport { saveOutline, pencil, chevronBackCircleOutline } from 'ionicons/icons';\nimport './captura-de-lectura.page.css';\nimport MenuLeft from '../../components/left-menu';\nimport { extraerDatosLectura, guardarCaptura, obtenerSiguienteIndice, obtenerPromedioConsumo, guardarCuotaFija } from '../../controller/apiController';\nimport { useTakePhoto, generarFechas, obtenerBase64, generarAniosPosterior, generarAnios, obtenerCoordenadas,asignarCalidad,modificarTamanio } from '../../utilities';\nimport { getDatosLecturaStorage, verifyingSession, setContribuyenteBuscado, setPuntero, setNumeroPaginas, deleteContratos } from '../../controller/storageController';\nimport { useHistory } from 'react-router';\nimport './captura-de-lectura.page.css';\nimport foto from '../../assets/icon/sinFoto.jpg';\nconst CapturaDeLectura: React.FC = () => {\n    const history = useHistory();\n    const [datosContribuyente, setDatosContribuyente] = useState(Object);\n    const [lecturaAnterior, setLecturaAnterior] = useState(Number);\n    const [message, setMessage] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [anomalias, setAnomalias] = useState<any[]>([])\n    const [consumo, setConsumo] = useState(Number);\n    const [pressentToast, dismissToast] = useIonToast();\n    const [listaMeses, setlistaMeses] = useState<any[]>([]);\n    const [mesDefautl, setMesDefault] = useState('');\n    const [indexMes, setIndexMes] = useState(Number);\n    const [anioActual, setAnioActual] = useState(Number);\n    const [indexAnioActual, setIndexAnioActual] = useState(11);\n    const [anioLectura, setAnioLectura] = useState(Number);\n    const [listaAnios, setListaAnios] = useState<any[]>([]);\n    const { takePhoto } = useTakePhoto();\n    const [bloquearCampos, setBloquearcampos] = useState(false);\n    const [btnInactivo, setBtnInactivo] = useState(false);\n    const [comparaMes, setComparaMes] = useState(Number)\n    const [comparaAnio, setComparaAnio] = useState(Number)\n    const [seleccionAnomalia, setSeleccionAnomalia] = useState(Number);\n    const [lecturaActual, setLecturaActual] = useState(Number);\n    const [tipoLectura, setTipoLectura] = useState(Number);\n    const [mesLectura, setMesLectura] = useState(Number);\n    const [refreshControl, setRefreshControl] = useState(false);\n    const [defaultLectura, setDefaultLectura] = useState(Number);\n    const [defaultAnomalia, setDefaultAnomalia] = useState(Number);\n    const [enbleButtons, setEnbleButtons] = useState(false);\n    const [tipoMessage, setTipoMessage] = useState(\"MENSAJE\");\n    const [promedioLectura, setPromedioLectura] = useState(Number);\n    const [toma, setToma] = useState(String);\n    const [municipio, setMunicipio] = useState(String);\n    const [localidad, setLocalidad] = useState(String);\n    const [direccion, setDireccion] = useState(String);\n    const [bloqueoAnomalias, setBloqueoAnomalias] = useState(false);\n    const [consumoMinimo,setConsumoMinimo] = useState(20);\n    const [activarMenu,setActivarMenu] = useState(true);\n    const [ fija, setFija ] = useState(false);\n    const sinFoto = \"https://media.istockphoto.com/vectors/vector-camera-icon-with-photo-button-on-a-white-background-vector-id1270930870?k=20&m=1270930870&s=170667a&w=0&h=kG9xDNMeLFQJeDrg-ik-HkvaHcOy2HjZe8xaDMB-dk0=\";\n\n    //INDEV: Bloque de fotos para tomas\n    const [ fotoMedidorEncode, setFotoMedidorEncode ] =  useState(String);\n    const [ fotoMedidorPreview, setFotoMedidorPreview ] = useState(String);\n    //NOTE: Foto de la facha\n    const [ fotoFachadaEncode, setFotoFachadaEncode ] = useState(String);\n    const [ fotoFachadaPreview, setFotoFachadaPreview ] = useState(String);\n    //NOTE: Foto perspectiva amplia\n    const [ fotoCalleEncode, setFotoCalleEncode ] = useState(String);\n    const [ fotoCallePreview, setFotoCallePreview ] = useState(String);\n    //NOTE: Error de las fotos\n    const [ errorFotoUI, setErrorFotosU ] = useState(\"\");\n\n\n    const alertButtons = [\n        {\n            text: \"Reintentar\", handler: () => {\n                setMessage(\"\");\n                setTipoMessage(\"Error\");\n                isSessionValid();\n            }\n        },\n        {\n            text: \"Cancelar\"\n        }];\n    const fecha = new Date();\n    const isSessionValid = () => {\n        let valid = verifyingSession();\n        logOut(valid)\n    }\n    useEffect(() => { isSessionValid(); }, [refreshControl])\n    useEffect(() => {\n        //FIXME: obtenemos los datos actuales\n        if (refreshControl) {\n            setConsumo(0)\n        }\n    }, [defaultLectura])\n    useEffect(() => { console.log(promedioLectura) }, [promedioLectura])\n    const logOut = (valid: boolean) => {\n        if (!valid) {\n            setTipoMessage(\"Sesión no valida\");\n            setMessage(\"Inicie sesión por favor\\nRegresando...\");\n            setTimeout(() => {\n                setTipoMessage(\"ERROR\");\n                setMessage('');\n                history.replace(\"/home\");\n            }, 2500)\n        } else {\n            setLoading(true);\n            cargarContribuyente();\n            setDefaultLectura(0);\n        }\n    }\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\n    const cargarContribuyente = async () => {\n        let result = getDatosLecturaStorage();\n        if(result.contribuyente == \"null\"){\n            result.contribuyente = \"\";\n        }\n        setDatosContribuyente(result);\n        extraerLectura(result.idLectura);\n        setRefreshControl(false);\n    }\n    const extraerLectura = async (idLectura: any) => {\n        await obtenerPromedioConsumo().then( async (promedio)=>{\n            promedio = parseFloat(promedio).toFixed(2);\n            setPromedioLectura(parseInt(String(promedio)));\n            await extraerDatosLectura(idLectura)\n            .then((result) => {\n                setFija(result.Mensaje[0].M_etodoCobro == \"1\");\n                if(result.Mensaje != 300){\n                    setToma(result.Mensaje[0].Toma)\n                    setMunicipio(result.Mensaje[0].Municipio);\n                    setLocalidad(result.Mensaje[0].Localidad);\n                    setDireccion(result.Mensaje[0].Direccion);\n                    //FIXED: hay un bug para los contraros sin lecturas y estatus de letura 1\n                    let data = parseInt(result.Mensaje[0]['A_no']);\n                    let mesLectura = parseInt(result.Mensaje[0].Mes);\n                    //NOTE: si todo es NaN seleccionamos la fecha actual\n                    isNaN(data) ? data = fecha.getFullYear() : data = data;\n                    isNaN( mesLectura ) ? mesLectura = fecha.getMonth() : mesLectura = mesLectura;\n                    setMesLectura(mesLectura);\n                    setAnioLectura(data);\n                    cargarFechas(data, result.ValorLectura[0].Valor, mesLectura);\n                    setLecturaAnterior(result.Mensaje[0].LecturaActual != null ? parseInt(result.Mensaje[0].LecturaActual) : 0 );\n                }else{\n                    cargarFechas(fecha.getFullYear(), \"1\" , fecha.getMonth());\n                }\n                setBloquearcampos(result.BloquearCampos[0].Valor == 1);\n                setAnomalias(result.Anomalias);\n                setTipoLectura(result.ValorLectura[0].Valor)\n                setConsumo(0);\n            })\n            .catch((err) => {\n                console.log(\"aqui esta el error\");\n                let errorMessage = err.message + \"\";\n                if (errorMessage.includes(\"API\")) {\n                    setEnbleButtons(true);\n                }\n                setMessage(err.message);\n            })\n            .finally(() => { setLoading(false) });\n        }).catch((error)=>{\n\n        }).finally(()=>{setLoading(false)})\n        //Fin de extraer Consumo promedio del contribuyente\n    }\n    const cargarFechas = async (anioDefault: number, tipoLectura: string, mes: number) => {\n        const mesActual = (parseInt(fecha.getMonth().toString()));\n        await generarFechas(anioDefault).then((result) => {\n            setMesDefault(result[0].Meses[mesActual].mes);\n            setIndexMes(result[0].Meses[mesActual].id);\n            setlistaMeses(result[0].Meses);\n            setListaAnios(result[1].Anios);\n            // Se debe separar por casos\n            switch (tipoLectura) {\n                case '1':\n                    lecturaCasoUno(anioDefault, mes, result[0].Meses);\n                    break;\n                case '2':\n                    lecturaCasoDos(anioDefault, result[0].Meses[mesActual].id, result[0].Meses, result[1].Anios);\n                    break;\n                case '3':\n                    lecturaCasoTres(result[0].Meses);\n                    break;\n            }\n        })\n    }\n    const calcularConsumo = (consumido: number) => {\n        let result = consumido - lecturaAnterior;\n        setLecturaActual(consumido);\n        setDefaultLectura(consumido)\n        isNaN(result) ? setConsumo(0) : setConsumo(result)\n    }\n    const lecturaCasoUno = (anioResult: number, mes: number, meses: any[]) => {\n        let anhioLista = anioResult;\n        let esteMes = mes + 1;\n        setComparaAnio(anhioLista); //NOTE: se envia este compara anio al metodo de verificacion\n        let listaAnios = generarAniosPosterior(anioResult);\n        setListaAnios(listaAnios);\n        if (esteMes == 13) {\n            anhioLista = anioResult + 1;\n            esteMes = meses[0].id;\n            setMesDefault(meses[0].mes);\n            setComparaAnio(anioResult + 1);\n        }\n        setComparaMes(esteMes); //NOTE: se envia este compara anio al metodo de verificacion\n        setIndexMes(esteMes);\n\n        listaAnios.map((item, index) => {\n            if (item.anio == anhioLista) {\n                setIndexAnioActual(item.id);\n                setAnioActual(item.anio)\n            }\n        })\n        if (lecturaAnterior == null) {\n            setLecturaAnterior(0);\n        }\n    }\n    const lecturaCasoDos = (anioResult: number, mesResult: number, meses: any[], anios: any[]) => {\n        // se tomara la fecha actual para generar la lectura\n        let anhioLista = fecha.getFullYear();\n        let esteMes = fecha.getMonth();\n        meses.map((item, index) => {\n            if (item.id == esteMes) {\n                setIndexMes(item.id);\n                setMesDefault(item.mes);\n            }\n        })\n        setComparaMes(fecha.getMonth());    //NOTE: se envia este compara anio al metodo de verificacion\n        setComparaAnio(fecha.getFullYear());    //NOTE: se envia este compara anio al metodo de verificacion\n        //Generar lista de los años\n        let listaAnios = generarAnios(anhioLista);\n        setListaAnios(listaAnios);\n        listaAnios.map((item, index) => {\n            if (anhioLista == item.anio) {\n                setIndexAnioActual(item.id);\n                setAnioActual(item.anio);\n            }\n        })\n        if (lecturaAnterior == null) {\n            setLecturaAnterior(0);\n        }\n    }\n    const lecturaCasoTres = (meses: any[]) => {\n        // se Obtienen las fechas actuales\n        let mesComparacion = fecha.getMonth() + 1\n        setComparaMes(mesComparacion);  //NOTE: se envia este compara anio al metodo de verificacion\n        let anioComparar = fecha.getFullYear()\n        let esteMes = fecha.getMonth() + 1\n\n        if (esteMes == 13) {\n            anioComparar = fecha.getFullYear() + 1\n            esteMes = meses[0].id;\n            setMesDefault(meses[0].mes);\n            setComparaAnio(anioComparar);\n            setComparaMes(meses[0].id);\n        }\n\n        setAnioActual(anioComparar);\n        setComparaAnio(anioComparar);     //NOTE: se envia este compara anio al metodo de verificacion\n        setIndexMes(esteMes);\n        let listaAnios = generarAnios(anioComparar);\n        setListaAnios(listaAnios);\n        listaAnios.map((item, index) => {\n            if (item.anio == anioComparar) {\n                setIndexAnioActual(item.id);\n            }\n        })\n        if (lecturaAnterior == null) {\n            setLecturaAnterior(0);\n        }\n    }\n    const siguienteLectura = async () => {\n        await obtenerSiguienteIndice(datosContribuyente.idLectura)\n            .then((result) => {\n                if (result) {\n                    /*setTipoMessage(\"Mensaje\");\n                    setMessage(\"Lectura guardada\\nPasando a siguiente lectura...\");\n                    setTimeout(() => {\n                        setLoading(false);\n                        //Limpiando Componentes\n                        setActivarGaleria(false)\n                        setDefaultLectura(0)\n                        setFotoActiva('');\n                        setFotosCodificadas([]);\n                        setFotosEvidencia([]);\n                        setIndexFoto(0);\n                        setSeleccionAnomalia(-1)\n                        setDefaultAnomalia(-1)\n                        setRefreshControl(true);\n                        handleCancelAnomalia();\n                    }, 1000);*/\n                    setTipoMessage(\"Mensaje\");\n                    setMessage(\"Final de los datos en la pagina\\nRegresado...\");\n                    setPuntero(0);\n                    setNumeroPaginas(0);\n                    deleteContratos();\n                    setTimeout(() => {\n                        history.replace(\"/form-datos-toma.page\");\n                    }, 2500);\n                } else {\n                    setTipoMessage(\"Mensaje\");\n                    setMessage(\"Final de los datos en la pagina\\nRegresado...\");\n                    setPuntero(0);\n                    setNumeroPaginas(0);\n                    deleteContratos();\n                    setTimeout(() => {\n                        history.replace(\"/form-datos-toma.page\");\n                    }, 2500);\n                }\n\n            }).catch(err => {\n                setMessage(err.message);\n            }).finally(() => {\n                setLoading(false);\n            })\n    }\n    const mensajeConsumoCero = async () => {\n        //let value = contribuyenteBuscado();\n        /*if (!value) {\n            if (consumo <= 0) {\n                setEnbleButtons(false);\n                setTipoMessage(\"Mensaje\");\n                setMessage(\"El Consumo se calculo como el promedio de 12 meses\");\n                setTimeout(() => {\n                    setMessage(\"\");\n                    siguienteLectura();\n                }, 2000);\n            } else {\n                siguienteLectura();\n            }\n        } else {\n\n        }*/\n        setLoading(false);\n        setTipoMessage(\"Mensaje\");\n        setMessage(\"Lectura guardada\\nRegresado...\");\n        setTimeout(() => {\n            setContribuyenteBuscado(false);\n            history.replace(\"/form-datos-toma.page\");\n        }, 2500);\n    }\n    //Manejadores de la interfaz\n    const handleBtnGuardar = async ( fotos:any  ) => {\n        try {\n            setLoading(true);\n            setTimeout(() => {\n                if (loading) {\n                    throw 0;\n                }\n            }, 20000);\n            let mes = fecha.getMonth() + 1;\n                let anio = fecha.getFullYear();\n                let coords = await obtenerCoordenadas();\n                let validarConsumo = procesoConsumo(); // Falta la validacion del consumo\n                //NOTE: Verificamos la cuotafija\n                if( !fija ){\n                    let datosCapturados = {\n                        route: anio + \"\" + mes + \"/\",\n                        lecturaAnterior:  lecturaAnterior,\n                        lecturaActual: bloqueoAnomalias ? lecturaAnterior : lecturaActual,\n                        consumoFinal: validarConsumo,\n                        mesCaptura: indexMes,\n                        anhioCaptura: anioActual,\n                        fechaCaptura: fecha,\n                        anomalia: seleccionAnomalia == 0 ? \"\" : seleccionAnomalia,\n                        tipoCoordenada: 1,\n                        arregloFotos: fotos,\n                        comparaMes: comparaMes,\n                        comparaAnio: comparaAnio,\n                        lectura: 1,\n                        arrayAnios: listaAnios,\n                        indexAnio: indexAnioActual,\n                        mesLectura: mesLectura,\n                        nCliente: datosContribuyente.nCliente,\n                        token: datosContribuyente.token,\n                        idUsuario: datosContribuyente.idUsuario,\n                        idToma: datosContribuyente.idLectura,\n                        Latidude:  String(coords.latitude) ,\n                        Longitude: String(coords.longitude),\n                    }\n                    await guardarCaptura(datosCapturados)\n                        .then((result) => { mensajeConsumoCero(); })\n                        .catch((err) => { setLoading(false); setMessage(err.message) });\n                }else{\n                    guardarDatosCuotaFija(validarConsumo,coords,fotos);\n                }\n        } catch (err) {\n            console.log(err);\n            setLoading(false);\n            setMessage(`Tiempo de espera agotado.\n            Asegúrese de activar la ubicación del dispositivo`)\n        }\n    }\n    //NOTE: metodo para enviar los datos de la cuotafija\n    const guardarDatosCuotaFija = async ( consumo:Number, coords: any, fotos:any ) => {\n        //NOTE: creamos el formato de los datos\n        let datos = {\n            LecturaActual: lecturaActual,\n            LecturaAnterior: lecturaAnterior,\n            Cliente: datosContribuyente.nCliente,\n            Consumo: consumo,\n            Anio: anioActual,\n            padron: datosContribuyente.idLectura,\n            mes: indexMes,\n            anomalia: seleccionAnomalia == 0 ? \"\" : seleccionAnomalia,\n            idUsuario: datosContribuyente.idUsuario,\n            Fotos: fotos,\n            tipoCoordenada: 1,\n            Latidude:  String(coords.latitude),\n            Longitude: String(coords.longitude),\n        };\n        await guardarCuotaFija(datos)\n        .then(()=>{\n            mensajeConsumoCero();\n        }) \n        .catch(( error )=>{\n            setLoading(false); setMessage(error.message);\n        }).finally(()=>{\n            setLoading(false);\n        })\n    }\n    const handleSelectAnio = (value: number) => {\n        listaAnios.map((item, index) => {\n            if (item.id == value) {\n                setAnioActual(item.anio)\n                setIndexAnioActual(item.id)\n            }\n        })\n    }\n    const handleSelectMes = (value: number) => {\n        listaMeses.map((item, index) => {\n            if (item.id == value) {\n                setIndexMes(item.id);\n                setMesDefault(item.mes);\n            }\n        })\n    }\n    const handleSelectAnomalia = (seleccionAnomalia: number) => {\n        setSeleccionAnomalia(seleccionAnomalia);\n        setDefaultAnomalia(seleccionAnomalia);\n        setConsumo(promedioLectura);\n        setBloqueoAnomalias(seleccionAnomalia != 0);\n        console.log(defaultLectura);\n        anomalias.map((item, index) => {\n            if (item.id == seleccionAnomalia) {\n                    console.log(item.ActualizarAdelante + \" - \" + item.ActualizarAtras + \" Se activa: \" + (parseInt(item.ActualizarAdelante) == 0 || parseInt(item.ActualizarAtras) == 0));\n                    if(parseInt(item.ActualizarAdelante) == 1 || parseInt(item.ActualizarAtras) == 1 ){\n                        setBloqueoAnomalias(false);\n                        setLecturaActual( defaultLectura );\n                    }else{\n                        setBloqueoAnomalias(true);\n                        setLecturaActual( defaultLectura );\n                    }\n                    setConsumoMinimo( parseInt(item.Minima) );\n                    if(defaultLectura != 0){\n                        console.log(\"Procesando Consumo\");\n                        setConsumo(procesoConsumo());\n                    }\n                    if(seleccionAnomalia == 24){\n                        setConsumo(promedioLectura);\n                    }\n            }\n        });\n    }\n    const handleCancelAnomalia = () => { \n        setDefaultAnomalia(0);\n        setBloqueoAnomalias(false);\n    }\n    //NOTE: 1 = Medidor, 2 = Fachada, 3 = Calle( )  \n    const handleAbrirCamera = async ( tipoFoto: number  ) => {\n        setLoading(true);\n        //NOTE: asugnamos la calidad de la camara\n        asignarCalidad( tipoFoto == 1 ? 50 : 20 );\n        modificarTamanio(  tipoFoto != 1 );\n        await takePhoto() \n            .then(async (result) => {\n                setLoading(true);\n                agregarImagenEncode(result.webPath + \"\", tipoFoto);\n            })\n            .catch((err) => {\n                let errorType = err.message + \"\";\n                if (errorType.includes(\"denied\")) {\n                    setMessage(\"La aplicación no tiene permisos para usar la cámara\")\n                }\n            }).finally(() => { setLoading(false) })\n    }\n    //llamada al metodo de convercion\n    const agregarImagenEncode = async (imgDir: string, tipoFoto:number) => {\n        await obtenerBase64(imgDir).then((result) => {\n            switch (tipoFoto) {\n                case 1:\n                    setFotoMedidorEncode(String(result));\n                    setFotoMedidorPreview(imgDir);\n                    break;\n                case 2:\n                    setFotoFachadaEncode(String(result));\n                    setFotoFachadaPreview(imgDir);\n                    break;\n                case 3: \n                    setFotoCalleEncode(String(result));\n                    setFotoCallePreview(imgDir);\n                    break;\n            }\n\n        }).finally(() => { setLoading(false) })\n    }\n    const formatindex = (index: string) => {\n        let result = \"\";\n        let numIndex = Number(index);\n        if (isNaN(numIndex)) {\n            result = '00';\n        } else {\n            numIndex <= 9 ? result = String(\"0\" + numIndex) : result = String(numIndex);\n        }\n        return result;\n    }\n    const btnDetallesContribuyente = () => {\n        history.push(\"/datos-contribuyente.page\");\n    }\n    const btnRegresar = () =>{\n        history.replace(\"/form-datos-toma.page\");\n    }\n    const procesoConsumo = () => {\n        let consumoProcesado = 0;\n        if(seleccionAnomalia != 0){\n            if(bloqueoAnomalias){ // este es el proceso de las anomalias sin capturas\n                if ( promedioLectura < consumoMinimo ){\n                    consumoProcesado = consumoMinimo;\n                }else{\n                    consumoProcesado = promedioLectura;\n                }\n            }else{ //este el el proceso de las anomalias con captura\n                if(consumo < promedioLectura){\n                    consumoProcesado = promedioLectura;\n                }\n                if(promedioLectura < consumoMinimo){\n                    consumoProcesado = consumoMinimo;\n                }\n                if(consumoMinimo < consumo){\n                    consumoProcesado =  consumo;\n                }\n            }\n        }else{ // este es el proceso de captura normal\n            consumoProcesado = consumo;\n        }\n        if(seleccionAnomalia == 47){\n            consumoProcesado = consumoMinimo;\n        }\n        if(seleccionAnomalia == 99){\n            if(lecturaActual < consumoMinimo){\n                consumoProcesado = consumoMinimo;\n            }else{\n                consumoProcesado = lecturaActual;\n            }\n        }\n        if(seleccionAnomalia == 24){\n            consumoProcesado = promedioLectura;\n        }\n        if(seleccionAnomalia == 40){ //Nuevo forma de anomalia\n            if(lecturaActual < consumoMinimo){\n                consumoProcesado = consumoMinimo;\n            }else{\n                consumoProcesado = lecturaActual;\n            }\n        }\n        setConsumo(consumoProcesado);\n        return consumoProcesado;\n    }\n    //INDEV: Bloque para lanzar la camara dependiendo del tipo de foto\n    const FotoToma = () =>{\n        //NOTE: lanzamos la camara con el tipo 1\n        handleAbrirCamera(1);\n    } \n    const FotoFachada = () =>{\n        handleAbrirCamera(2);\n    }\n    const FotoCalle = () =>{\n        handleAbrirCamera(3);\n    }\n    const validarFotosTomadas = () => {\n        let errorFotos = \"\";\n        if( fotoMedidorEncode.length == 0 ){\n            errorFotos += \"FM,\";\n        }\n        if( fotoFachadaEncode.length == 0 ){\n            errorFotos += \"FF,\";\n        }\n        if( fotoCalleEncode.length == 0 ){\n            errorFotos += \"FC,\";\n        }\n        if(errorFotos.length != 0){\n            setMessage(\"¡Favor de capturar las evidencias!\");\n            setTipoMessage(\"Mensaje\");\n            console.log(errorFotos);\n            setErrorFotosU(errorFotos);\n        }else{\n            //NOTE: se forma el json para el envio de las imagenes\n            setErrorFotosU(\"\");\n            let jsonImagenes = {\n                \"Toma\": fotoMedidorEncode,\n                \"Fachada\": fotoFachadaEncode,\n                \"Calle\": fotoCalleEncode\n            }\n            handleBtnGuardar(jsonImagenes);\n        }\n    }\n    return (\n        <IonPage>\n      {\n        activarMenu ? \n        <MenuLeft />: <></>\n      }\n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                    <IonTitle>Captura de lectura</IonTitle>\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\n                        <IonMenuButton ></IonMenuButton>\n                    </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <IonCard>\n                    <IonCardHeader className=\"headerData\">\n                        <div className=\"datosContribuyete\">\n                            <h3>{datosContribuyente.contribuyente}</h3>\n                            <p>Contrato: {datosContribuyente.contratoVigente}, &nbsp;&nbsp; Medidor: {datosContribuyente.medidor == \"null\" ? \"S/N\" : datosContribuyente.medidor }, &nbsp;&nbsp; Toma: {toma}</p>\n                            <p>Municipio: {municipio}, &nbsp;&nbsp; Localidad: {localidad}</p>\n                            <p>{`Dirección: ${direccion}`}</p>\n                            <IonGrid>\n                                <IonRow>\n                                    <IonCol size=\"10\">\n                                    </IonCol>\n                                    <IonCol size=\"1\">\n                                        <IonChip color=\"danger\" onClick={btnDetallesContribuyente}>\n                                            <IonIcon icon={pencil} className=\"btnEditar\" />\n                                        </IonChip>\n                                    </IonCol>\n                                </IonRow>\n                            </IonGrid>\n                        </div>\n                    </IonCardHeader>\n                    <IonCardContent>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Lectura anterior:</IonLabel>\n                            <IonInput disabled className=\"disabledInput\">{`${lecturaAnterior}`}</IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Lectura actual:</IonLabel>\n                            <IonInput disabled = {bloqueoAnomalias} type=\"number\" placeholder=\"0\" value={defaultLectura} onIonChange={e => { calcularConsumo(parseFloat(e.detail.value + \"\")) }}></IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Consumo:</IonLabel>\n                            <IonInput disabled className=\"disabledInput\" value={consumo}></IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Fecha de lectura:</IonLabel>\n                            <IonDatetime disabled displayFormat=\"DD/MM/YYYY\" min=\"2000\" max=\"2026\" value={`${fecha}`}></IonDatetime>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Anomalía</IonLabel>\n                            <IonSelect interface=\"action-sheet\" onIonCancel = {handleCancelAnomalia} value={defaultAnomalia} onIonChange={e => { handleSelectAnomalia(e.detail.value) }}>\n                                {\n                                    anomalias.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.id}>\n                                            {`${item.clave <= 10 ? formatindex(item.clave) : item.clave} - ${item.descripci_on}`}\n                                        </IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <br />\n                        <IonGrid>\n                                <IonRow>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Toma </IonLabel>\n                                        <IonCard onClick = { FotoToma } className = { errorFotoUI.includes(\"FM,\") ? \"cardError\" : \"\" } >\n                                            <IonImg className=\"imagenViwer\"  src = { fotoMedidorPreview != \"\" ? fotoMedidorPreview : foto }></IonImg>\n                                            <IonRippleEffect></IonRippleEffect>\n                                        </IonCard>\n                                    </IonCol>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Facha </IonLabel>\n                                        <IonCard onClick = { FotoFachada } className = { errorFotoUI.includes(\"FF,\") ? \"cardError\" : \"\" } >\n                                            <IonImg className=\"imagenViwer\"  src ={ fotoFachadaPreview != \"\" ? fotoFachadaPreview : foto } >  </IonImg>\n                                        </IonCard>\n                                        <IonRippleEffect></IonRippleEffect>\n                                    </IonCol>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Calle </IonLabel>\n                                        <IonCard onClick = { FotoCalle } className = { errorFotoUI.includes(\"FC,\") ? \"cardError\" : \"\" } >\n                                            <IonImg className=\"imagenViwer\"  src ={ fotoCalleEncode != \"\" ? fotoCalleEncode : foto } >  </IonImg>\n                                        </IonCard>\n                                        <IonRippleEffect></IonRippleEffect>\n                                    </IonCol>\n                                </IonRow>\n                        </IonGrid>\n                        <IonItem>\n                            <IonLabel>Mes: </IonLabel>\n                            <IonSelect interface=\"action-sheet\" value={indexMes} selectedText={`${mesDefautl}`} disabled={bloquearCampos} onIonChange={e => handleSelectMes(e.detail.value)}>\n                                {\n                                    listaMeses.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.id} >{item.mes}</IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <IonItem>\n                            <IonLabel>Año: </IonLabel>\n                            <IonSelect interface=\"action-sheet\" value={indexAnioActual} selectedText={`${anioActual}`} disabled={bloquearCampos} onIonChange={e => handleSelectAnio(e.detail.value)}>\n                                {\n                                    listaAnios.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.id}>{item.anio}</IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <br />\n                        <div className=\"centrar\">\n                            <IonGrid>\n                                <IonRow>\n                                    <IonCol size=\"6\">\n                                        <IonButton expand = \"block\" color=\"secondary\" onClick = {btnRegresar}>\n                                            <IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon>\n                                            Regresar\n                                        </IonButton>\n                                    </IonCol>\n                                    <IonCol size=\"6\">\n                                        <IonButton expand = \"block\" color=\"danger\" onClick={validarFotosTomadas} disabled={btnInactivo}>\n                                            Guardar\n                                            <IonIcon icon={saveOutline} slot=\"end\"></IonIcon>\n                                        </IonButton>\n                                    </IonCol>\n                                </IonRow>\n                            </IonGrid>\n\n                        </div>\n                    </IonCardContent>\n                </IonCard>\n                <IonAlert\n                    cssClass=\"my-custom-class\"\n                    header={tipoMessage}\n                    message={message}\n                    isOpen={message.length > 0}\n                    backdropDismiss={false}\n                    buttons={enbleButtons ? alertButtons : [{ text: 'Aceptar', handler: () => { setMessage(\"\") } }]}\n                />\n                <IonLoading\n                    cssClass=\"my-custom-class\"\n                    isOpen={loading}\n                    onDidDismiss={() => { setLoading(false); }}\n                    message=\"Por favor espere\"\n                />\n            </IonContent>\n        </IonPage>\n    );\n}\n\nexport default CapturaDeLectura;","import { \n    IonAlert,\n    IonButton, \n    IonButtons, \n    IonCard, \n    IonCardContent, \n    IonCardHeader, \n    IonCol, \n    IonContent, \n    IonDatetime, \n    IonGrid, \n    IonHeader, \n    IonIcon, \n    IonItem, \n    IonItemDivider, \n    IonLabel, \n    IonList, \n    IonLoading, \n    IonMenuButton, \n    IonNote, \n    IonPage, \n    IonRippleEffect, \n    IonRow, \n    IonSelect, \n    IonSelectOption, \n    IonText, \n    IonTitle, \n    IonToolbar, \n    useIonViewDidEnter, \n    useIonViewWillEnter,\n} from \"@ionic/react\";\nimport React, { useEffect, useState } from \"react\";\nimport MenuLeft from '../../components/left-menu';\nimport { contractOutline, eyeOutline, searchCircle } from 'ionicons/icons';\nimport { historialFechas, historialLecturas} from '../../controller/apiController';\nimport { guardarDatosEditarLectura, verifyingSession, cerrarSesion, setFechasHistorialLectura, getFechasHistorialLectura } from '../../controller/storageController';\nimport { useHistory } from 'react-router-dom'\nimport { generarFechas } from \"../../utilities\";\nconst HistorialLecturas: React.FC = () => {\n    const fecha = new Date();\n    //NOTE: lista de los meses y anios \n    const [ anios, setAnios ] = useState<any[]>();\n    const [ meses, setMeses ] = useState<any[]>();\n    //NOTE: Manejadores de la interfaz\n    const [ anioSeleccionado, setAnioSeleccionado ] = useState(11);\n    const [ mesSeleccionado, setMesSeleccionado ] = useState(Number);\n    const [ fechaInicio, setFechaInicio ] = useState();\n    const [activarMenu , setActivarMenu ] = useState(true);\n    //NOTE: manejadores de listas\n    const [ listaReportes, setListaReportes ] = useState<any[]>();\n    //NOTE: manejadores de mensajes de errores\n    const [ mensaje, setMensaje ] = useState( String );\n    const [ loading, setLoading ] = useState( false );\n    const [ tipoMensaje, setTipoMensaje ] = useState( String ) \n\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\n    useEffect(()=>{\n        prepararPantalla();\n    },[]);\n    const prepararPantalla = async () =>{\n        let aniosMeses = await generarFechas(fecha.getFullYear());\n        setMeses(aniosMeses[0].Meses);\n        setAnios(aniosMeses[1].Anios);\n        setMesSeleccionado(fecha.getMonth() + 1);\n    }\n    const extraerHistorial = async () =>{\n        setLoading(true);\n        let fechaAnio = anios != null ? anios[anioSeleccionado-1].anio : fecha.getFullYear();\n        let fechas = {\n            anio: fechaAnio,\n            mes: mesSeleccionado\n        }\n        await historialLecturas(fechas)\n        .then(( result )=>{\n            setListaReportes(result);\n        })\n        .catch((error)=>{\n            setMensaje(error.message);\n            setTipoMensaje(\"ERROR\");\n        }).finally(()=>{\n            setLoading( false );\n        });\n    }\n    return (\n        <IonPage>\n            {\n                activarMenu ? \n                <MenuLeft /> : <></>\n            }\n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                    <IonTitle> Lecturas </IonTitle>\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\n                        <IonMenuButton ></IonMenuButton>\n                    </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <IonCard>\n                    <IonCardHeader >\n                        <IonRow className = \"bordeFecha\" >\n                            <IonCol className = \"labelCalendario\" >\n                                <IonText > Seleccione el año: </IonText>\n                            </IonCol>    \n                            <IonCol className = \"ion-activatable ripple-parent\">\n                                <div >\n                                    <IonSelect onIonCancel = { ()=>{setAnioSeleccionado(11)} }  interface = \"action-sheet\" value={ anioSeleccionado } onIonChange = {e=>{setAnioSeleccionado(e.detail.value)}} >\n                                        {\n                                            anios?.map((item,index)=>{\n                                                return <IonSelectOption value={ item.id } key = {index} >{ item.anio }</IonSelectOption>\n                                            })\n                                        }\n                                    </IonSelect>\n                                    <IonRippleEffect></IonRippleEffect>\n                                </div>\n                            </IonCol>\n                        </IonRow>\n                        <IonRow className = \"bordeFecha\" >\n                            <IonCol class=\"labelCalendario\">\n                                <IonText> Seleccione mes: </IonText>\n                            </IonCol>\n                            <IonCol>\n                                <div>\n                                    <IonSelect onIonCancel = { () => { setMesSeleccionado(fecha.getMonth() + 1) }} interface = \"action-sheet\" value = { mesSeleccionado } onIonChange = {e => {setMesSeleccionado(e.detail.value)}} >\n                                        {\n                                            meses?.map((mes,item)=>{\n                                                return <IonSelectOption value={mes.id} key = {mes.id} >{ mes.mes }</IonSelectOption>\n                                            })\n                                        }\n                                    </IonSelect>\n                                </div>\n                            </IonCol> \n                        </IonRow>\n                        <IonRow>\n                            <IonCol className = \"center margintop\" >\n                                <IonButton color=\"danger\" expand = \"block\" onClick = { extraerHistorial } >\n                                    <IonText> Mostrar Historial </IonText> <IonRippleEffect></IonRippleEffect>\n                                    <IonIcon icon={searchCircle} size=\"large\" slot = \"end\" ></IonIcon>\n                                </IonButton>\n                            </IonCol>\n                        </IonRow>\n                    </IonCardHeader>\n                    <IonCardContent>\n                        {/*NOTE: contenedor lista*/ }\n                        <div style = {{flex:1,justifyContent:\"center\", borderWidth: 1, marginTop: 5 }} >\n                            <IonList className = \"borderList\" >\n                                {\n                                    listaReportes?.map((item,index)=>{\n                                        return <IonItem key = {index} >\n                                            <IonLabel>\n                                                <h2> {item.Nombre} </h2>\n                                                <p> Contrato: { item.ContratoVigente }, Fecha: { item.Fecha } </p>\n                                                <p> Contribuyente: { item.Contribuyente == \"\" ? \"No disponible\" : item.Contribuyente }, Tipo: {item.Toma} </p>\n                                                <IonNote slot = \"end\" color = {item.Estatus == 2 ? \"danger\" : \"primary\"} > {listaReportes[item.Estatus-1]} </IonNote>\n                                            </IonLabel>\n                                            </IonItem>\n                                    })\n                                }\n                            </IonList>\n                        </div>\n                    </IonCardContent>\n                </IonCard>\n                <IonLoading\n                cssClass=\"my-custom-class\"\n                isOpen={loading}\n                onDidDismiss={() => { setLoading(false); }}\n                message=\"Por favor espere\"\n                />\n                <IonAlert\n                cssClass=\"my-custom-class\"\n                header={tipoMensaje}\n                message={mensaje}\n                isOpen={mensaje.length > 0}\n                onDidDismiss = {()=>{setMensaje(\"\")}}\n                buttons ={[{\n                    text:\"Aceptar\",\n                    handler:()=>{setMensaje(\"\")}\n                }]}\n                />\n            </IonContent>\n        </IonPage>\n    )\n}\nexport default HistorialLecturas;","import React, { useEffect, useState } from 'react';\nimport {\n    IonPage,\n    IonButtons,\n    IonHeader,\n    IonMenuButton,\n    IonTitle,\n    IonToolbar,\n    IonContent,\n    IonCard,\n    IonCardHeader,\n    IonCardContent,\n    IonItem,\n    IonLabel,\n    IonInput,\n    IonDatetime,\n    IonSelect,\n    IonSelectOption,\n    IonButton,\n    IonIcon,\n    IonAlert,\n    IonToast,\n    IonLoading,\n    IonGrid,\n    IonRow,\n    IonCol\n} from '@ionic/react';\nimport LeftMenu from '../../components/left-menu';\nimport { getDatosLecturaEditar, actualizarLectura, obtenerPromedioEditar} from '../../controller/apiController';\nimport { saveOutline, checkmarkCircleOutline, chevronBackCircleOutline, star, } from 'ionicons/icons';\nimport { useHistory } from \"react-router-dom\";\nimport { useTakePhoto, generarFechas, obtenerBase64, generarAniosPosterior, generarAnios, obtenerCoordenadas } from '../../utilities';\nimport { cerrarSesion, extraerDatosEditarLectura, verifyingSession } from '../../controller/storageController';\nconst EditarLecturaAgua: React.FC = () => {\n    const history = useHistory();\n    const [datosContribuyente, setDatosContribuyente] = useState(Object)\n    const [loading, setLoading] = useState(false);\n    const [anomalias, setAnomalias] = useState<any[]>([]);\n    const [bloquearCampos, setBloquearDatos] = useState(true);\n    const [tipoLectura, setTipoLectura] = useState(Number);\n    const [anhioLectura, setAnhioLectura] = useState(Number);\n    const [mesLectura, setMesLectura] = useState(Number)\n    const [validarAnhio, setValidarAnhio] = useState(Number);\n    const [validarMes, setValidarMes] = useState(Number);\n    const [message, setMessage] = useState(String);\n    const [listaAnhios, setListaAnhios] = useState<any[]>([]);\n    const [listaMeses, setListaMeses] = useState<any[]>([]);\n    const [consumo, setConsumo] = useState(Number);\n    const [lecturaActual, setLecturaActual] = useState(Number);\n    const [lecturaAnterior, setLecturaAnterior] = useState(Number);\n    const [tipoAnomalia, setTipoAnomalia] = useState(Number);\n    const [fechaLectura, setFechaLectura] = useState(Date);\n    const [tipoMensaje, setTipoMensaje] = useState(String);\n    const [showToast, setShowToast] = useState(false);\n    const [connectionError, setConnectionError] = useState(false);\n    const [block, setBlock] = useState(false);\n    const [tokenExpired, setTokenExpered] = useState(false);\n    const [traceError, setTraceError] = useState(String);\n    //INDEV: Actualizar el registro de la lectura\n    const [bloqueoAnomalias, setBloqueoAnomalias] = useState(false);\n    const [seleccionAnomalia,setSeleccionAnomalia] = useState(0);\n    const [promedioLectura,setPromedioLectura] = useState(Number);\n    const [consumoMinimo,setConsumoMinimo] = useState(20);\n    const [lecturaRegistrada,setLecturaRegistrada] = useState(Number);\n    let consumoDatos = 0;\n    const fecha = new Date();\n    const alertRetriButtons = [\n        { text: \"Reintentar\", handler: () => { setMessage(\"\"); traceError == \"onLoad\" ? cargarDatos() : guardarLectura(); } },\n        { text: \"Aceptar\", handler: () => { setTraceError(\"\"); setMessage(\"\"); } }\n    ]\n    const alertAcceptButtons = [{ text: \"Aceptar\", handler: () => { } }];\n    const isSessionValid = () => {\n        let valid = verifyingSession(); //Verificamos si existe algun token guardado\n        setTokenExpered(!valid);        //Validacion para ver si el token expiro (Si valid == false se lanza el error de la sesion)\n        setBlock(!valid);               //Si existe el token\n    }\n    \n    const cargarDatos = async () => {\n        setLoading(true);\n        let result = extraerDatosEditarLectura();\n        setDatosContribuyente(result);\n        //Obtenemos el promedio de las lecturas\n        await getDatosLecturaEditar()\n            .then((result) => {\n                if (result.Status) {\n                    //Me falta contrato vigente\n                    console.log(result.Mensaje);\n                    setDatosContribuyente(result.Mensaje[0]);\n                    generarFechasAnhios(parseInt(result.Mensaje[0].A_no));\n                    filtrarLectura(result)\n\n                } else {\n                    setTipoMensaje(\"Mensaje\");\n                    setMessage(\"No se encontraron resultados.\");\n                }\n            })\n            .catch((err) => {\n                let errorMessage = String(err.message);\n                setConnectionError(errorMessage.includes(\"API\"));\n                let sessionValid = errorMessage.includes(\"Sesion no valida\");\n                console.log(\"El toke es valido ?\", sessionValid)\n                setTokenExpered(sessionValid);\n                if (!sessionValid) {\n                    setTraceError(\"onLoad\");\n                    setMessage(err.message)\n                    setTipoMensaje(\"ERROR\");\n                }\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n    useEffect(() => { isSessionValid(); }, [anhioLectura]);\n    useEffect(() => { logOut(tokenExpired); }, [tokenExpired])\n    const logOut = (valid: boolean) => {\n        if (valid) {\n            setTipoMensaje(\"Sesión no valida\");\n            setMessage(\"Inicie sesión por favor\\nRegresando...\");\n            setTimeout(async () => {\n                setMessage('');\n                setTipoMensaje('MENSAJE')\n                await cerrarSesion().then((result) => {\n                    history.replace(\"/home\");\n                })\n            }, 2500)\n        } else {\n            cargarDatos();\n        }\n    }\n    const filtrarLectura = async (result: any) => {\n        console.log(result.tipoLectura[0].Valor);\n        result.bloqueoCampos[0].Valor == 0 ? setBloquearDatos(false) : setBloquearDatos(true);\n        setTipoLectura(result.tipoLectura[0].Valor);\n        setAnomalias(result.Anomalias);\n        let lectura = result.tipoLectura[0].Valor;\n        if (lectura == 1 || lectura == 2 || lectura == 3) {\n            setAnhioLectura(result.Mensaje[0]['A_no']);\n            setMesLectura(result.Mensaje[0]['Mes'])\n            setValidarAnhio(result.Mensaje[0]['A_no']);\n            setValidarMes(result.Mensaje[0]['Mes']);\n            //Obtenemos el promedio\n            await obtenerPromedioEditar(result.Mensaje[0]['Padr_onAgua']).then((result)=>{\n                setPromedioLectura(result);\n            }).catch((e)=>{\n                setPromedioLectura(0);\n            });\n        } else {\n            //Mensaje de error\n            setTipoMensaje('ERROR')\n            setMessage('Consulte con su administrador que el código de lecturas de agua se encuentre en el rango de 1-3');\n            setTimeout(() => {\n                history.goBack();\n            }, 2000)\n        }\n        let datosLectura = result.Mensaje[0];\n        setConsumo(datosLectura.Consumo);\n        consumoDatos = datosLectura.Consumo;\n        setLecturaActual(datosLectura.LecturaActual);\n        setLecturaRegistrada(datosLectura.LecturaActual);\n        setLecturaAnterior(datosLectura.LecturaAnterior);\n        datosLectura.Observaci_on == null ? setTipoAnomalia(0) : setTipoAnomalia(datosLectura.Observaci_on);\n        setFechaLectura(datosLectura.FechaLectura);\n    }\n    const generarFechasAnhios = async (anio: number) => {\n        let data = await generarFechas(anio);\n        setListaAnhios(data[1].Anios);\n        setListaMeses(data[0].Meses);\n    }\n    const handleCalcularconsumo = (consumido: number) => {\n        //Calculando el consumo\n        let result = consumido - lecturaAnterior;\n        setLecturaActual(consumido);\n        isNaN(result) ? setConsumo(0) : setConsumo(result)\n        \n    }\n    const guardarLectura = async () => {\n        setLoading(true);\n        //localStorage.setItem(\"@Storage::userToken\",\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczpcL1wvYXBpLnNlcnZpY2lvZW5saW5lYS5teFwvYXBpLW1vdmlsXC9sb2dpbi1wcmVzaWRlbnRlUHJ1ZWJhIiwiaWF0IjoxNjIxMzY1OTk0LCJleHAiOjE2MjE0MDE5OTQsIm5iZiI6MTYyMTM2NTk5NCwianRpIjoiV0w3VE9EeUZpQkhWZzZqRSIsInN1YiI6MzgwMCwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.5aG5sSnugBRIPvmj0QcbhHuqxPfBRkwrxN74bGz1uho\");\n        console.log(anhioLectura, mesLectura,datosContribuyente.Padr_onAgua);\n        let consumoCalculado = procesoConsumo();\n        if(consumoCalculado == 0){\n            setTipoMensaje(\"MENSAJE\");\n            setMessage(\"No se ha calculado el consumo\");\n            setLoading(false);\n        }else if(consumoCalculado < 0){\n            setTipoMensaje(\"MENSAJE\");\n            setMessage(\"La lectura actual no puede ser menor a la anterior\");\n            setLoading(false);\n        }else{\n            //Enviamos los datos a editar\n            let data = {\n                anhioLectura: anhioLectura,\n                consumo: consumoCalculado,\n                fechaLectura: fechaLectura,\n                lecturaActual: lecturaActual,\n                lecturaAnterior: lecturaAnterior,\n                mesLectura: mesLectura,\n                tipoAnomalia: tipoAnomalia,\n                validarAnhio: validarAnhio,\n                validarMes: validarMes,\n                idPadron: datosContribuyente.Padr_onAgua,\n            }\n            console.log(data);\n            setLoading(false);\n                 /*await actualizarLectura(data)\n            .then((result) => {\n                setShowToast(true);\n                console.log(result)\n            })\n            .catch((err) => {\n                let errorMessage = String(err.message);\n                setConnectionError(errorMessage.includes(\"API\"));\n                let sessionValid = errorMessage.includes(\"Sesion no valida\");\n                setTokenExpered(sessionValid);\n                if (!sessionValid) {\n                    setTraceError(\"onUpdate\");\n                    setTipoMensaje(\"ERROR\");\n                    setMessage(err.message)\n                }\n            })\n            .finally(() => {\n                setLoading(false);\n            })*/\n        }\n   \n    }\n    const regresarPantalla = async () => {\n        if (showToast) {\n            setShowToast(false);\n            history.replace('/historial-lecturas.page');\n        }\n    }\n    //Manejadores de \n    const handleSelectMes = (mes: string) => {\n        setMesLectura(parseInt(mes));\n    }\n    const handleSelectAnio = (anio: string) => {\n        setAnhioLectura(parseInt(anio));\n    }\n    const handlebtnRegresar = () => {\n        history.replace(\"/historial-lecturas.page\");\n        console.log(\"Regresando\");\n    }\n    const handleSelectAnomalia = (selectAnomalia: number) =>{\n        setSeleccionAnomalia(selectAnomalia);\n        setTipoAnomalia(selectAnomalia);\n        anomalias.map((item,index)=>{\n            if(item.id == selectAnomalia){\n                if(parseInt(item.ActualizarAdelante) == 1 || parseInt(item.ActualizarAtras) == 1){\n                    setBloqueoAnomalias(false);\n                }else{\n                    setBloqueoAnomalias(true);\n                    setLecturaActual(lecturaAnterior);\n                }\n                setConsumoMinimo(item.Minima);\n                console.log(item.Minima + \"Consumo calculado\");\n                if(lecturaActual != 0){\n                    setConsumo(procesoConsumo());\n                }\n                if(selectAnomalia == 24){\n                    setConsumo(promedioLectura);\n                }\n            }\n        });\n    }\n    const handleCancelAnomalia = () =>{\n        setTipoAnomalia(0);\n        setSeleccionAnomalia(0);\n        setBloqueoAnomalias(false);\n        handleCalcularconsumo(lecturaActual);\n        setLecturaActual(lecturaRegistrada);\n    }\n    const procesoConsumo = () => {\n        let consumoProcesado = 0;\n        console.log(seleccionAnomalia);\n        if( seleccionAnomalia != 0){\n            if(bloqueoAnomalias){ // este es el proceso de las anomalias sin capturas\n                if (promedioLectura < consumoMinimo){\n                    consumoProcesado = consumoMinimo;\n                }else{\n                    consumoProcesado = promedioLectura;\n                }\n            }else{ //este el el proceso de las anomalias con captura\n                if(consumo < promedioLectura){\n                    consumoProcesado = promedioLectura;\n                }\n                if(promedioLectura < consumoMinimo){\n                    consumoProcesado = consumoMinimo;\n                }\n                if(consumoMinimo < consumo){\n                    consumoProcesado =  consumo;\n                }\n            }\n        }else{ // este es el proceso de captura normal\n            if(consumo < consumoMinimo && consumo > 0){\n                consumoProcesado = consumoMinimo;\n            }else{\n                consumoProcesado = consumo;\n            }\n        }\n        if(tipoAnomalia == 47){\n            consumoProcesado = consumoMinimo;\n        }\n        if(tipoAnomalia == 99){\n            if(lecturaActual < consumoMinimo){\n                consumoProcesado = consumoMinimo;\n            }else{\n                consumoProcesado = lecturaActual;\n            }\n        }\n        if(tipoAnomalia == 24){\n            consumoProcesado = promedioLectura;\n        }\n        \n        setConsumo(consumoProcesado);\n        return consumoProcesado;\n    }\n    return (\n        <IonPage>\n            <LeftMenu />\n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                    <IonTitle>Editar lectura</IonTitle>\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\n                        <IonMenuButton ></IonMenuButton>\n                    </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <IonCard>\n                    <IonCardHeader>\n                        <div className=\"datosContribuyete\">\n                            <h3>{datosContribuyente.Nombre}</h3>\n                            <p>Contrato: {datosContribuyente.ContratoVigente}, &nbsp;&nbsp; Medidor: {datosContribuyente.Medidor}, &nbsp;&nbsp; Toma: {datosContribuyente.Toma}</p>\n                            <p>Municipio: {datosContribuyente.Municipio}, &nbsp;&nbsp; Localidad: {datosContribuyente.Localidad}</p>\n                            <p>Colonia: {datosContribuyente.Colonia} &nbsp;&nbsp; Calle: {datosContribuyente.Calle} &nbsp;&nbsp; Exterior: {datosContribuyente.Exterior} &nbsp;&nbsp; Interior: {datosContribuyente.Interior}</p>\n                        </div>\n                    </IonCardHeader>\n                    <IonCardContent>\n                        <br />\n                        <IonItem>\n                            <IonLabel> Lectura anterior:</IonLabel>\n                            <IonInput disabled value={lecturaAnterior}></IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Lectura actual:</IonLabel>\n                            <IonInput disabled  value={lecturaActual} onIonChange={e => { handleCalcularconsumo(parseFloat(e.detail.value + \"\")) }}></IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Consumo :</IonLabel>\n                            <IonInput disabled value={consumo}></IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Fecha de lectura: </IonLabel>\n                            <IonDatetime disabled displayFormat=\"DD/MM/YYYY\" value={fechaLectura}></IonDatetime>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Anomalía:</IonLabel>\n                            <IonSelect \n                                disabled\n                                placeholder=\"Seleccione uno\" \n                                interface=\"action-sheet\" \n                                cancelText=\"Cancelar\" \n                                value={tipoAnomalia}\n                                onIonCancel = {handleCancelAnomalia}\n                                onIonChange = { e => { handleSelectAnomalia(e.detail.value) } } >\n                                <IonSelectOption value={null}></IonSelectOption>\n                                {\n                                    //Lista de anomalias\n                                    anomalias.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.id}>\n                                            {`${item.clave}-${item.descripci_on}`}\n                                        </IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel> Mes: </IonLabel>\n                            <IonSelect disabled={bloquearCampos} interface=\"action-sheet\" placeholder=\"Seleccione uno\" cancelText=\"Cancelar\" value={mesLectura} onIonChange={e => { handleSelectMes(e.detail.value) }}>\n                                {\n                                    listaMeses.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.id}>\n                                            {item.mes}\n                                        </IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Año: </IonLabel>\n                            <IonSelect disabled={bloquearCampos} interface=\"action-sheet\" placeholder=\"Seleccione uno\" cancelText=\"Cancelar\" value={anhioLectura} onIonChange={e => { handleSelectAnio(e.detail.value) }}>\n                                {\n                                    listaAnhios.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.anio}>\n                                            {item.anio}\n                                        </IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <br />\n                        <div className=\"centrar\">\n                            <IonGrid>\n                                <IonRow>\n                                    <IonCol>\n                                        <IonButton color=\"secondary\" onClick={handlebtnRegresar} >Regresar<IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon> </IonButton>\n                                    </IonCol>\n                                </IonRow>\n                            </IonGrid>\n\n\n                        </div>\n                    </IonCardContent>\n                </IonCard>\n                <IonAlert\n                    cssClass=\"my-custom-class\"\n                    header={tipoMensaje}\n                    message={message}\n                    isOpen={message.length > 0}\n                    backdropDismiss={false}\n                    buttons={connectionError ? alertRetriButtons : [{ text: \"Aceptar\", handler: () => { setMessage(\"\") } }]}\n                />\n                <IonToast\n                    isOpen={showToast}\n                    onDidDismiss={regresarPantalla}\n                    message=\"Los datos se actualizaron correctamente\"\n                    duration={2000}\n                    position=\"top\"\n                    buttons={[{ side: \"end\", icon: checkmarkCircleOutline, handler: regresarPantalla }]}\n                ></IonToast>\n                <IonLoading\n                    cssClass=\"my-custom-class\"\n                    isOpen={loading}\n                    onDidDismiss={() => { setLoading(false); }}\n                    message=\"Por favor espere\"\n                />\n            </IonContent>\n        </IonPage>\n    )\n}\n\nexport default EditarLecturaAgua;","import { useIonToast,IonAlert, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonCheckbox, IonChip, IonCol, IonContent, IonGrid, IonHeader, IonImg, IonInput, IonItem, IonLabel, IonLoading, IonMenuButton, IonPage, IonRippleEffect, IonRow, IonText, IonTextarea, IonTitle, IonToolbar, IonIcon, useIonViewWillEnter } from '@ionic/react'\nimport { useEffect, useState } from 'react'\nimport LeftMenu from '../../components/left-menu';\nimport {  guardarReporteV2 } from '../../controller/apiController';\nimport { verifyingSession, cerrarSesion, getContratoReporte } from '../../controller/storageController';\nimport { useTakePhoto, obtenerBase64, obtenerCoordenadas } from '../../utilities';\nimport { useHistory } from 'react-router';\nimport './reportes.page.css';\nimport { arrowBackOutline,checkmarkCircle, chevronBackCircleOutline, saveOutline } from 'ionicons/icons';\nimport MenuLeft from '../../components/left-menu';\nimport foto from '../../assets/icon/sinFoto.jpg';\n\nconst Reportes: React.FC = () => {\n    const history = useHistory();\n    const [ loading, setLoading ] = useState(false);\n    const [ message, setMessage ] = useState(String);\n    const [ tipoMensaje, setTipoMensaje ] = useState(String);\n    const [ block, setBlock ] = useState(false);\n    const [ tokenExpired, setTokenExpired ] = useState(false);\n    const [ connectionError, setConnectionError ] = useState(false);\n    const [ contrato,setContrato ] = useState(String);\n    const [ fallaAdministrativa, setFallaAdministrativa ] = useState(false);\n    const [ arregloFotos, setArregloFotos ] = useState<string[]>([]);\n    const [ fotoActiva, setFotoActiva ] = useState('');\n    const [ indexFoto, setIndexFoto ] = useState(Number);\n    const [ fotosCodificadas, setFotosCodificadas ] = useState<any[]>([]);\n    const [pressentToast, dismissToast ] = useIonToast();\n    const [ activarGalaria, setActivarGaleria ] = useState(false);\n    const [ ErrorUI, setErrorUI ] = useState(\"\");\n    //NOTE: manejadores de los inputs\n    const [colonia, setColonia] = useState(String);\n    const [calle, setCalle] = useState(String);\n    const [numero, setNumero] = useState(String);\n    const [ descripcion, setDescripcion ] = useState( String );\n    const [activarMenu,setActivarMenu] = useState(false);\n\n     //INDEV: Bloque de fotos para tomas\n     const [ fotoMedidorEncode, setFotoMedidorEncode ] =  useState(String);\n     const [ fotoMedidorPreview, setFotoMedidorPreview ] = useState(String);\n     //NOTE: Foto de la facha\n     const [ fotoFachadaEncode, setFotoFachadaEncode ] = useState(String);\n     const [ fotoFachadaPreview, setFotoFachadaPreview ] = useState(String);\n     //NOTE: Foto perspectiva amplia\n     const [ fotoCalleEncode, setFotoCalleEncode ] = useState(String);\n     const [ fotoCallePreview, setFotoCallePreview ] = useState(String);\n\n    const { takePhoto } = useTakePhoto();\n    //Verificando la session\n    const buttonsErrorConnection = [\n        { text: \"Reintentar\", handler: () => { setMessage(\"\"); enviarReporte(); } },\n        { text: \"Aceptar\", handler: () => { setMessage(\"\"); console.log(\"Cancelando\") } }\n    ]\n    const isSessionValid = async () => {\n        let valid = verifyingSession();\n        setTokenExpired(!valid);\n        setBlock(!valid);\n    }\n    useIonViewWillEnter(()=>{setActivarMenu(true)});\n    useEffect(() => { isSessionValid() }, []);\n    useEffect(() => { logOut() }, [tokenExpired]);\n    useEffect(()=>{\n        setActivarGaleria( arregloFotos.length > 0 );\n    },[arregloFotos])\n    //Manejadores de la interfaz\n    const logOut = async () => {\n        if (tokenExpired) {\n            setTipoMensaje(\"Sesión no valida\");\n            setMessage(\"Inicie sesión por favor\\nRegresando...\");\n            setTimeout(() => {\n                cerrarSesion()\n                    .then((result) => {\n                        setMessage('');\n                        history.replace('/home');\n                    })\n            }, 2500)\n        }\n    }\n    const handleAbrirCamera = async (tipoFoto: number) => {\n        setLoading(true);\n        await takePhoto()\n            .then(async (result) => {\n                setLoading(true);\n                agregarImagenEncode(result.webPath + \"\", tipoFoto);\n            })\n            .catch((err) => {\n                let errorType = err.message + \"\";\n                if (errorType.includes(\"denied\")) {\n                    setMessage(\"La aplicación no tiene permisos para usar la cámara\")\n                }\n            }).finally(() => { setLoading(false) })\n    }\n    const agregarImagenEncode = async (imgDir: string, tipoFoto:number) => {\n        await obtenerBase64(imgDir).then((result) => {\n            switch (tipoFoto) {\n                case 1:\n                    setFotoMedidorEncode(String(result));\n                    setFotoMedidorPreview(imgDir);\n                    break;\n                case 2:\n                    setFotoFachadaEncode(String(result));\n                    setFotoFachadaPreview(imgDir);\n                    break;\n                case 3: \n                    setFotoCalleEncode(String(result));\n                    setFotoCallePreview(imgDir);\n                    break;\n            }\n\n        }).finally(() => { setLoading(false) })\n    }\n    const borrarFotoEvidencia = () => {\n        let fotosTemporal = new Array;\n        let fotosEncoded = new Array;\n        arregloFotos.map((item, index) => {\n            if (index != indexFoto) {\n                fotosTemporal.push(item);\n            }\n        });\n        fotosCodificadas.map((item, index) => {\n            if (index != indexFoto) {\n                fotosEncoded.push(item);\n            }\n        })\n        setFotosCodificadas(fotosEncoded);\n        setArregloFotos(fotosTemporal);\n        setFotoActiva('');\n        pressentToast({\n            message: \"Se elimino la foto de la lista'\",\n            duration: 2000,\n            position: 'top',\n            buttons: [\n                {\n                    side: 'start',\n                    icon: checkmarkCircle,\n                }\n            ]\n        })\n    }\n    const validarDatos = () =>{\n        setMessage(\"\");\n        setErrorUI(\"\");\n        let error = \"\";\n        if( calle.trim().length == 0 ){\n            error += \"Cl,\";\n        }\n        if( colonia.trim().length == 0 ){\n            error += \"C,\";\n        }\n        if( numero.trim().length == 0 ){\n            error += \"N,\";\n        }\n        if ( descripcion.trim().length == 0 ){\n            error += \"D,\";\n        }\n        //NOTE: aqui ingresamos lar reglas para las imagenes\n        if(fotoMedidorEncode.length == 0)\n            error += \"FM,\"\n        if(fotoFachadaEncode.length == 0)\n            error += \"FF,\"\n        if(fotoCallePreview.length == 0)\n            error += \"FC,\";\n        //NOTE: validamos que los datos no esten en 0\n        error.length == 0 ? enviarReporte() : lanzarMensaje(\"Mensaje\",\"Favor de ingresar los campos requeridos\", error);\n    }\n    const enviarReporte = async () =>{\n        //NOTE: Recolectamos los datos\n        setLoading(true);\n        //NOTE: creamos el json de los datos\n        let jsonImagenes = {\n            \"Toma\": fotoMedidorEncode,\n            \"Fachada\": fotoFachadaEncode,\n            \"Calle\": fotoCalleEncode\n        }\n        let Padron = getContratoReporte()\n        await obtenerCoordenadas().then( async ( coordenadas )=>{\n            let datos = {\n                'Calle':calle,\n                'Colonia':colonia,\n                'Numero':numero,\n                'Descripcion':descripcion,\n                'Latitud':String(coordenadas.latitude),\n                'Longitud':String(coordenadas.longitude),\n                'FallaAdministrativa':0,\n                'Estatus':1,\n                'Fotos':jsonImagenes,\n                'Padron':String(Padron),\n            };\n            await guardarReporteV2(datos)\n            .then(( result )=>{\n                limpiarPantalla();\n            })\n            .catch(( error )=>{\n                console.log(error);\n                setTipoMensaje(\"Mensaje\");\n                //setMessage(error.mensaje);\n            }).finally(()=>{\n                setLoading(false);\n            });\n        }).catch((error)=>{\n            setLoading(false);\n            lanzarMensaje(\"ERROR\",\"¡Favor de activar el servicio de ubicacion!\", \"\")\n        })\n    }\n    const lanzarMensaje = ( tipoMensaje: string, mensaje: string, error = \"\") =>{\n        setTipoMensaje( tipoMensaje );\n        setMessage( mensaje );\n        setErrorUI( error );\n    }\n    const btnRegresar = () => {\n        history.goBack();\n    }\n    const limpiarPantalla = () =>{\n        \n        setColonia(\"\");\n        setCalle(\"\");\n        setNumero(\"\");\n        setDescripcion(\"\");\n        setContrato(\"\");\n        setFotoActiva(\"\");\n        setFotosCodificadas([]);\n        setArregloFotos([]);\n        setTipoMensaje(\"Mensaje\");\n        setMessage(\"Reporte guardado\\nRegresando\");\n        setTimeout(()=>{\n            history.goBack();\n        }, 1000);\n\n    }\n     //INDEV: Bloque para lanzar la camara dependiendo del tipo de foto\n     const FotoToma = () =>{\n        //NOTE: lanzamos la camara con el tipo 1\n        handleAbrirCamera(1);\n    } \n    const FotoFachada = () =>{\n        handleAbrirCamera(2);\n    }\n    const FotoCalle = () =>{\n        handleAbrirCamera(3);\n    }\n    return (\n        <IonPage >\n            <LeftMenu />\n            {\n                activarMenu ? \n                <MenuLeft />: <></>\n            }\n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                    <IonTitle>Reportar</IonTitle>\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\n                        <IonMenuButton></IonMenuButton>\n                    </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent >\n                {/*INDEV: Pantalla de para el reporte */  }\n                <div style={{paddingLeft:10, paddingRight:10}} >\n                    <br></br>\n                    <IonGrid className = {'centerInput ' + ( ErrorUI.includes(\"C,\") ? \"errorInput\" : \"\" )} >\n                        <IonRow>\n                            <IonInput placeholder = \"Colonia\"  value={colonia} onIonChange = { text => { setColonia(String(text.detail.value))} } ></IonInput>\n                        </IonRow>\n                    </IonGrid>\n                    <br></br>\n                    <IonGrid className = {'centerInput ' + ( ErrorUI.includes(\"Cl,\") ? \"errorInput\" : \"\" ) } >\n                        <IonRow>\n                            <IonInput placeholder = \"Calle\" value={calle} onIonChange = { text => { setCalle( String(text.detail.value) )}} >  </IonInput>\n                        </IonRow>\n                    </IonGrid>\n                    <br></br>\n                    <IonGrid className = {'centerInput ' + ( ErrorUI.includes(\"N,\") ? \"errorInput\" : \"\" ) } >\n                        <IonRow>\n                            <IonInput placeholder = \"Numero\" value = { numero } onIonChange = { text => {setNumero( String(text.detail.value))}} >  </IonInput>\n                        </IonRow>\n                    </IonGrid>\n                    <br/><br/>\n                    <IonGrid>\n                                <IonRow>\n                                    <IonCol size=\"4\" className=\"center\"  >\n                                        <IonLabel> Toma </IonLabel>\n                                        <IonCard onClick = { FotoToma } className = { ErrorUI.includes(\"FM,\") ? \"errorInput\" : \"clearInput\" } >\n                                            <IonImg className=\"imagenViwer\"  src = { fotoMedidorPreview != \"\" ? fotoMedidorPreview : foto } ></IonImg>\n                                            <IonRippleEffect></IonRippleEffect>\n                                        </IonCard>\n                                    </IonCol>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Facha </IonLabel>\n                                        <IonCard onClick = { FotoFachada } className = { ErrorUI.includes(\"FF,\") ? \"errorInput\" : \"clearInput\" }  >\n                                            <IonImg className=\"imagenViwer\"  src ={ fotoFachadaPreview != \"\" ? fotoFachadaPreview : foto } >  </IonImg>\n                                        </IonCard>\n                                        <IonRippleEffect></IonRippleEffect>\n                                    </IonCol>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Calle </IonLabel>\n                                        <IonCard onClick = { FotoCalle } className = { ErrorUI.includes(\"FC,\") ? \"errorInput\" : \"clearInput\" } >\n                                            <IonImg className=\"imagenViwer\"  src ={ fotoCalleEncode != \"\" ? fotoCalleEncode : foto } >  </IonImg>\n                                        </IonCard>\n                                        <IonRippleEffect></IonRippleEffect>\n                                    </IonCol>\n                                </IonRow>\n                        </IonGrid>\n                    <IonGrid className = {'centerInput ' + ( ErrorUI.includes(\"D,\") ? \"errorInput\" : \"\" ) } >\n                        <IonRow>\n                            <IonCol size='12' className='centrado descrip' >\n                                <IonLabel > Descripción </IonLabel>\n                            </IonCol>\n                            <IonCol size='12' >\n                                <IonTextarea value = { descripcion } onIonChange = { text => { setDescripcion(String(text.detail.value))}}></IonTextarea>\n                            </IonCol>\n                        </IonRow>\n                    </IonGrid>\n                    <br></br>\n                    \n                    <IonGrid>\n                        <IonRow>\n                            <IonCol size='6' >\n                                <IonButton color='secondary' expand='block' onClick={ btnRegresar }>\n                                    <IonIcon icon={chevronBackCircleOutline} slot= \"start\" ></IonIcon>\n                                     Regresar \n                                     </IonButton>\n                            </IonCol>\n                            <IonCol size='6' >\n                                <IonButton color='danger' expand='block' onClick={ validarDatos }>\n                                    <IonIcon icon={saveOutline} slot=\"end\"></IonIcon>\n                                    Guardar</IonButton>\n                            </IonCol>\n                        </IonRow>\n                    </IonGrid>\n                </div>\n                <IonAlert\n                    cssClass=\"my-custom-class\"\n                    header={ tipoMensaje }\n                    message={ message }\n                    isOpen={ message.length > 0 }\n                    backdropDismiss={ false }\n                    buttons={connectionError ? buttonsErrorConnection : [{ text: \"Aceptar\", handler: () => { setMessage(\"\"); console.log(\"Cancelando\") } }]}\n                />\n                <IonLoading\n                    cssClass=\"my-custom-class\"\n                    isOpen={loading}\n                    onDidDismiss={() => { setLoading(false); }}\n                    message=\"Por favor espere\"\n                />\n            </IonContent>\n        </IonPage>\n    )\n}\n\nexport default Reportes;","import React, { useEffect, useState } from \"react\";\nimport { \n    IonPage, \n    IonHeader, \n    IonToolbar, \n    IonTitle, \n    IonButtons, \n    IonMenuButton, \n    IonContent, \n    IonCard, \n    IonCardHeader, \n    IonLabel,\n    IonGrid,\n    IonRow, \n    IonCol,\n    IonItem,\n    IonSelect,\n    IonSelectOption,\n    IonInput,\n    IonButton,\n    IonCardContent,\n    IonItemDivider,\n    IonIcon,\n    IonList,\n    IonAlert,\n    IonLoading,\n    useIonViewWillEnter,\n    IonNote,\n    useIonViewDidLeave,\n} from \"@ionic/react\";\nimport MenuLeft from \"../../components/left-menu\";\nimport { obtenerDatosCliente, verifyingSession, getClienteNombreCorto, cerrarSesion, getUsuario, setContratoReporte } from \"../../controller/storageController\";\nimport { solicitarPermisos, verifyCameraPermission, verifyGPSPermission, ContratosListaContratoReporte, buscarMedidorSinFiltro } from \"../../controller/apiController\";\nimport { zeroFill } from '../../utilities';\nimport { searchCircle } from 'ionicons/icons';\nimport { useHistory } from 'react-router-dom';\n\nconst ListaContratoReportes : React.FC = () => {\n    const [ activarMenu, setActivarMenu ] = useState( false );\n    const [ tokenExpirado , setTokenExpirado ] = useState( false );\n    const [ nombreCliente, setClienteNombre ] = useState( String );\n    const [ tipoMensaje, setTipoMensaje ] = useState( String );\n    const [ mensaje, setMensaje ] = useState(String);\n    const [ usuario, setUsuario ] = useState(\"\");\n    const [ tipoFiltro, setTipoFiltro ] = useState(1);\n    const [ placeHolderFiltro, setPlaceHolderFiltro ] = useState(\"Buscar por contrato\");\n    const [ palabraClave, setPalabraClave ] = useState(String);\n    const [ botonReintentar, setBotonReintentar ] = useState( false );\n    const [ tipoError , setTipoError ] = useState( String );\n    const [ cargando, setCargando ] = useState(false);\n    const [ listaContratos, setListaContratos ] = useState<any[]>([]);\n    const listaEstatus = [\"Activo\",\"Cortado\",\"Baja Temporal\",\"Baja Permanente\",\"Inactivo\",\"Nueva\",\"\",\"\",\"Sin Toma\",\"Multada\"];\n    const history = useHistory();\n\n    const [] = useState( true );\n    //NOTE: recursos de la pantalla\n    const alertButtons = [\n        {\n          text: \"Reintentar\", handler: () => {\n            setMensaje(\"\");\n            buscarContrato(palabraClave);\n          }\n        },\n        {\n          text: \"Cancelar\", handle: () => {\n            setMensaje(\"\");\n          }\n        }\n      ]\n    //NOTE: Session de los hooks\n    useIonViewWillEnter(()=>{setActivarMenu( true )});\n    useIonViewDidLeave(()=>{setActivarMenu( false )});\n    useEffect(()=>{ verificarSession(); },[]);\n    useEffect(()=>{ tokenExpirado ? logOut( tokenExpirado ) : prepararPantalla()  },[tokenExpirado])\n    //NOTE: seccion de los metodos\n    const verificarSession = async () =>{\n        //INDEV: obtenemos el token y lo verificamos\n        setTokenExpirado(!verifyingSession());\n        setClienteNombre( String(await getClienteNombreCorto()));\n    }\n    const logOut = async(valido:Boolean) =>{\n        if (valido) {\n            setTipoMensaje(\"Sesión no valida\");\n            setMensaje(\"Inicie sesión por favor\\nRegresando...\");\n            setTimeout(async () => {\n              setTipoMensaje('Error');\n              setMensaje('');\n              await cerrarSesion()\n                .then((result) => {\n                  history.replace(\"/home\")\n                })\n            }, 2500);\n          }\n    }\n    const prepararPantalla = async () => {\n        await solicitarPermisos()\n        .then( async (  )=>{\n            let camera = await verifyCameraPermission();\n            let gps = await verifyGPSPermission();\n            if(camera && gps ){\n                setUsuario(String(getUsuario()));\n            }else{\n                setMensaje(\"Debe otorgar permisos para usar la aplicación\");\n                setTimeout(() => {\n                    history.replace(\"/home\")\n                }, 2500)\n            }\n        });\n    }\n    const handleSelectFiltro = (filtro: number) => {\n        setTipoFiltro(filtro);\n        filtro == 1 ? setPlaceHolderFiltro(\"Buscar por Medidor\") : setPlaceHolderFiltro(\"Buscar por Contrato\");\n    }\n    //INDEV: metodo para crear un reporte\n    const irReportar = ( item:any ) =>{\n        //INDEV: aqui ingresamos el id del contrato \n        setContratoReporte(item.id);\n        setCargando( true );\n        setTimeout(()=>{\n            setCargando( false );\n            history.push(\"/reportes.page\");\n        },500)\n    }\n    //INDEV: metodo para la busqueda de contratos sin filtros\n    const buscarContrato = async (pablabraClave: string) =>{\n        //NOTE: damos formato al contrato\n        console.log(zeroFill( pablabraClave ));\n        await ContratosListaContratoReporte(zeroFill( pablabraClave ))\n        .then(( result )=>{\n          if(result.length == 0){\n            setTipoError(\"Mensaje\");\n            setMensaje(\"Sin resultados\");\n            setBotonReintentar(false);\n          }\n            setListaContratos(result);\n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n        .finally(()=>{\n          setCargando(false);\n        })\n    } \n    const buscarMedidor = async ( palabraClave: string ) => {\n      await buscarMedidorSinFiltro(zeroFill( palabraClave ))\n      .then(( result ) => {\n        if(result.length == 0){\n          setTipoError(\"Mensaje\");\n          setMensaje(\"Sin resultados\");\n          setBotonReintentar(false);\n        }\n        setListaContratos( result );\n      })\n      .catch(( error )=>{\n        console.log(error.message);\n      }).finally(()=>{\n        setCargando( false );\n      })\n    }\n    const realizarBusqueda = async() =>  {\n      if( palabraClave.trim().length == 0 ){\n        setTipoMensaje(\"Mensaje\");\n        setMensaje(\"Ingrese un contrato o medidor\");\n        setBotonReintentar( true );\n      }else{\n        setCargando(true);\n        tipoFiltro == 1 ? buscarContrato( palabraClave ) : buscarMedidor( palabraClave );\n      }\n      \n    }\n    return (\n        <IonPage>\n        {\n          activarMenu ? \n          <MenuLeft />: <></>\n        }\n        <IonHeader>\n          <IonToolbar color=\"danger\" >\n            <IonTitle>{` Reportar `}</IonTitle>\n            <IonButtons slot=\"start\" className=\"btnMenu\">\n              <IonMenuButton ></IonMenuButton>\n            </IonButtons>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n          <IonCard class=\"ion-text-center\" className=\"box\">\n            <IonCardHeader>\n              <div>\n                <h3> Buscar contrato </h3>\n                <IonLabel>Puedes realizar busquedas por:</IonLabel>\n                <p>Contrato o Medidor</p>\n                <br />\n              </div>\n              <IonGrid>\n              <IonRow>\n                  <IonCol>\n                  <IonItem>\n                    <IonLabel>Filtrar Por:</IonLabel>\n                  <IonSelect onIonCancel = {()=>{ setTipoFiltro(1) }} value = { tipoFiltro } placeholder = \"Seleccione el filtro\" interface = \"action-sheet\" onIonChange = {e => {handleSelectFiltro(parseInt(e.detail.value+\"\"))}}>\n                      <IonSelectOption value={1} >Contrato</IonSelectOption>\n                      <IonSelectOption value={2} >Medidor</IonSelectOption>\n                    </IonSelect>\n                  </IonItem>\n                  </IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol size=\"12\">\n                    <IonItem>\n                      <IonInput type=\"number\" placeholder = {placeHolderFiltro} onIonChange={e => {setPalabraClave(String(e.detail.value)) }}></IonInput>\n                    </IonItem>\n                  </IonCol>\n                </IonRow>\n                <IonRow>\n                    <IonCol size=\"12\" > \n                        <IonButton color=\"danger\" expand=\"block\" onClick={ realizarBusqueda } > Buscar Toma <IonIcon icon={searchCircle} color=\"light\" size=\"large\" slot = \"end\" ></IonIcon></IonButton>\n                    </IonCol>\n                </IonRow>\n              </IonGrid>\n            </IonCardHeader>\n            <IonCardContent>\n                {/*NOTE: contenedor lista*/ }\n                <div style = {{flex:1,justifyContent:\"center\", borderWidth: 1, marginTop: 5 }} >\n                    <IonList className = \"borderList\" >\n                        {\n                            listaContratos.map((item,index)=>{\n                                return <IonItem key = {index} onClick = { ()=>{ irReportar(item); } } >\n                                    <IonLabel>\n                                        <h2> {item.Contribuyente} </h2>\n                                        <p> Contrato: { item.ContratoVigente }, Toma: { item.Toma } </p>\n                                        <p> Medidor: { item.Medidor }</p>\n                                        <IonNote color=\"primary\">Estado: {listaEstatus[item.Estatus - 1] }</IonNote>\n                                    </IonLabel>\n                                    \n                                    </IonItem>\n                            })\n                        }\n                    </IonList>\n                </div>\n            </IonCardContent>\n          </IonCard>\n          <IonAlert\n            cssClass=\"my-custom-class\"\n            header={tipoMensaje}\n            message={mensaje}\n            isOpen={mensaje.length > 0}\n            backdropDismiss={false}\n            buttons={botonReintentar ? [{ text: \"Aceptar\", handler: () => { setMensaje(\"\") } }] : alertButtons}\n          />\n          <IonLoading\n            cssClass=\"my-custom-class\"\n            isOpen={cargando}\n            onDidDismiss={() => { setCargando( false ); }}\n            message=\"Por favor espere\"\n          />\n        </IonContent>\n      </IonPage>\n    );\n}\n\nexport default ListaContratoReportes;","import { IonIcon, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonContent, IonHeader, IonInput, IonItem, IonLabel, IonMenuButton, IonPage, IonTitle, IonToolbar, IonAlert, IonLoading, IonGrid, IonCol, IonRow, IonFooter, IonFab, IonFabButton } from '@ionic/react';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './datos-del-contribuyente.css'\nimport MenuLeft from '../../components/left-menu';\nimport { obtenerDatosContribuyente, actualizarContribuyente } from '../../controller/apiController';\nimport { backspaceOutline, chevronBackCircleOutline, saveOutline, saveSharp, logoFacebook, compassOutline } from 'ionicons/icons';\nimport { cerrarSesion } from '../../controller/storageController';\nconst DatosContribuyente: React.FC = () => {\n    const history = useHistory();\n    const [datosContribuyente, setDatosContribuyente] = useState(Object);\n    const [telefono, setTelefono] = useState(String);\n    const [email, setEmail] = useState(String);\n    const [message, setMessage] = useState(String);\n    const [typeMessage, setTypeMessage] = useState(String);\n    const [loading, setLoading] = useState(false);\n    const [hideButtons, setHideButtons] = useState(true);\n    const [tokenExpired, setTokenExpired] = useState(false);\n    const [ typeError, setTypeError ] = useState(String);\n    useEffect(() => { obtenerContribuyente() }, []);\n    useEffect(() => { logOut() }, [tokenExpired]);\n    const alertButtons = [\n        { text: \"Reintentar\", handler: () => { setMessage(\"\"); typeError == \"onLoad\" ? obtenerContribuyente() : handleBtnGuardarContacto();} },\n        { text: \"Aceptar\", handler: () => { setMessage(\"\"); } }\n    ]\n    const logOut = () => {\n        if (tokenExpired) {\n            setTypeMessage(\"Session no valida\");\n            setMessage(\"Inicie sesión por favor\\nRegresando...\");\n            setHideButtons(true);\n            setTimeout(async () => {\n                await cerrarSesion().then((result) => {\n                    setTypeMessage(\"Error\");\n                    setMessage('');\n                    history.replace('/home');\n                })\n            }, 2500)\n        }\n    }\n    const obtenerContribuyente = async () => {\n        setLoading(true);\n        await obtenerDatosContribuyente()\n            .then((result) => {\n                if( result != null ){\n                    setTelefono(result.Celular == null ? \"\" : result.Celular);\n                    setEmail(result.Email == null ? \"\" : result.Email);\n                    setDatosContribuyente(result);\n                }else{\n                    setTypeMessage(\"ERROR\");\n                    setTypeError(\"onLoad\");\n                    setMessage(\"No se encontro el contribuyente\");\n                }\n            })\n            .catch((error) => { \n                setHideButtons(false);\n                let errorMessage = String(error.message);\n                let validSession = errorMessage.includes(\"Sesion no valida\");\n                if(!validSession){\n                    setTypeMessage(\"ERROR\");\n                    setTypeError(\"onLoad\");\n                    setMessage(errorMessage);\n                }\n             })\n            .finally(() => { setLoading(false) });\n    }\n    const handleTelefono = (value: string) => {\n        setTelefono(value);\n    }\n    const handleEmail = (value: string) => {\n        setEmail(value);\n    }\n    const handleBtnGuardarContacto = async () => {\n        setLoading(true);\n        let datos = {\n            telefono: telefono,\n            email: email\n        }\n        await actualizarContribuyente(datos)\n            .then((result) => {\n                setHideButtons(true);\n                setTypeMessage(\"MENSAJE\");\n                setMessage(result);\n            })\n            .catch(err => {\n                setTypeError(\"onUpdate\");\n                let errorMessage = String(err.message);\n                let sesionValid = errorMessage.includes(\"Sesion no valida\");\n                let connectionError = errorMessage.includes(\"API\");\n                setHideButtons(connectionError);\n                if (!sesionValid) {\n                    setHideButtons(false);\n                    setTypeMessage(\"Error\");\n                    setMessage(err.message);\n                } else {\n                    setTokenExpired(true);\n                }\n            })\n            .finally(() => { setLoading(false) })\n    }\n    const handleBtnRegresar = () =>{\n        console.log(\"REGRESANDO!!\");\n        history.replace(\"/captura-de-lectura.page\")\n    }\n    return (\n        <IonPage>\n            <IonContent fullscreen = {true}>\n                <MenuLeft />\n                <IonHeader>\n                    <IonToolbar color=\"danger\" >\n                        <IonTitle>Detalles contribuyente</IonTitle>\n                        <IonButtons slot=\"start\" className=\"btnMenu\">\n                            <IonMenuButton ></IonMenuButton>\n                        </IonButtons>\n                    </IonToolbar>\n                </IonHeader>\n                <IonCard >\n                    <IonCardHeader className=\"headerData\">\n                        <div className=\"datosContribuyete\">\n                            <h3>{datosContribuyente.Nombre}</h3>\n                            <p>Contrato: {datosContribuyente.ContratoVigente}, &nbsp;&nbsp; Medidor: {datosContribuyente.Medidor}, &nbsp;&nbsp; Toma: {datosContribuyente.Toma}</p>\n                            <p>Municipio: {datosContribuyente.Municipio}, &nbsp;&nbsp; Localidad: {datosContribuyente.Localidad}</p>\n                            <p>Colonia: {datosContribuyente.Colonia} &nbsp;&nbsp; Calle: {datosContribuyente.Calle} &nbsp;&nbsp; Exterior: {datosContribuyente.Exterior} &nbsp;&nbsp; Interior: {datosContribuyente.Interior}</p>\n                        </div>\n                    </IonCardHeader>\n                    <IonCardContent className=\"centrar\">\n                        <IonItem>\n                            <IonLabel className=\"center\" color=\"\">Datos de contacto</IonLabel>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel className=\"input\" position=\"floating\">Telefono</IonLabel>\n                            <IonInput type=\"tel\" placeholder=\"Telefono del contribuyente\" value={telefono} onIonChange={e => { handleTelefono(String(e.detail.value)) }} />\n                        </IonItem>\n                        <IonItem>\n                            <IonLabel className=\"input\" position=\"floating\" >Correo Electronico</IonLabel>\n                            <IonInput type=\"email\" placeholder=\"Correo Electronico\" value={email} onIonChange={e => { handleEmail(String(e.detail.value)) }} />\n                        </IonItem>\n                        <br />\n                        <IonGrid>\n                            <IonRow>\n                                <IonCol size = \"6\" >\n                                    <IonButton expand =\"block\" color=\"secondary\" onClick = {handleBtnRegresar}> \n                                        Regresar <IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon>\n                                    </IonButton>\n                                </IonCol>\n                                <IonCol size = \"6\">\n                                    <IonButton expand =\"block\" color=\"danger\" onClick={handleBtnGuardarContacto}> \n                                        Guardar <IonIcon icon={saveSharp} slot=\"end\"></IonIcon>\n                                    </IonButton>\n                                </IonCol>\n                            </IonRow>\n                        </IonGrid>\n                    </IonCardContent>\n                </IonCard>\n                <IonAlert\n                    isOpen={message.length > 0}\n                    header={typeMessage}\n                    message={message}\n                    backdropDismiss={false}\n                    buttons={hideButtons ? [\"Aceptar\"] : alertButtons}\n                />\n                <IonLoading\n                    cssClass=\"my-custom-class\"\n                    isOpen={loading}\n                    message={\"Por favor espere\"}\n                    backdropDismiss={false}\n                />\n            </IonContent>\n        </IonPage>\n    )\n}\n\nexport default DatosContribuyente;","import {\n  IonAlert,\n  IonButton,\n  IonCard,\n  IonCardHeader,\n  IonCol,\n  IonContent,\n  IonGrid,\n  IonIcon,\n  IonInput,\n  IonItem,\n  IonItemDivider,\n  IonLabel,\n  IonList,\n  IonLoading,\n  IonNote,\n  IonPage,\n  IonRow,\n  IonSelect,\n  IonSelectOption,\n  useIonViewDidEnter,\n  useIonViewWillEnter,\n  IonRefresherContent,\n  IonRefresher\n} from \"@ionic/react\"\nimport { useEffect, useState } from \"react\"\nimport MenuLeft from '../../components/left-menu';\nimport { IonHeader, IonToolbar, IonTitle, IonButtons, IonMenuButton } from '@ionic/react';\nimport { solicitarPermisos, verifyGPSPermission, verifyCameraPermission, ObtenerListaCortes, BuscarContratoCorte, BuscarMedidorCorte } from '../../controller/apiController';\nimport { searchCircle, arrowForwardOutline, arrowBackOutline } from \"ionicons/icons\";\nimport { getCuentasPapas, getUsuario, setContratoCorte, getNumeroPaginasTareas } from \"../../controller/storageController\";\nimport { useHistory } from 'react-router-dom';\n\n//FIXME: Agregar la validacion de vencimiento de session\n\nconst PrincipalCortes: React.FC = () => {\n  const history = useHistory();\n  const [activarMenu, setActivarMenu] = useState(true);\n  const [tipoFiltro, setTipoFiltro] = useState(1);\n  const [user, setUser] = useState(\"Prueba\");\n  const [nombreCliente, setNombreCliente] = useState(\"Demo OPD\");\n  const [contrato, setContrato] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [listaContratos, setListaContratos] = useState<any[]>([]);\n  const [tipoMensaje, setTipoMensaje] = useState(\"Mensaje\");\n  const [mensaje, setMensaje] = useState(\"\");\n  const [sesionValida, setSessionValida] = useState(true);\n  const [listaTareas, setListaTareas] = useState<any[]>([]);\n\n  //NOTE: para el control del paginado\n  const [index, setIndex] = useState(0);\n  const [ totalPaginas, setTotalPaginas ] = useState(1);\n  \n  useEffect(() => { prepararPantalla(); }, []);\n  useIonViewWillEnter(() => { setActivarMenu(false) });\n  useIonViewDidEnter(() => { setActivarMenu(true) });\n  //INDEV: buscamos los contratos dentro de las tareas del usuarios \n  const BuscarLectura = () => {\n    setLoading(true);\n    if (contrato != \"\") {\n      tipoFiltro == 1 ? PorContrato(contrato) : porMedidor(contrato);\n    } else {\n      //NOTE: mostramos los todos los contratos asignados\n      mostrarListaContratos();\n    }\n  }\n  const PorContrato = async (contrato: string) => {\n    console.log(contrato);\n    await BuscarContratoCorte(zeroFill(contrato))\n      .then((result) => {\n        if (result.length == 0) {\n          setMensaje(\"Contrato no encontrado, favor de revisar sus contrato asignados\")\n          setListaContratos([]);\n        }else{\n          setListaContratos(result);\n        }\n        \n      }).catch((error) => {\n        console.log(error);\n      }).finally(() => {\n        setLoading(false);\n      })\n  }\n  const porMedidor = async (medidor: string) => {\n    setLoading(true);\n    await BuscarMedidorCorte(medidor)\n      .then((result) => {\n          if( result.length == 0 ){\n            setMensaje(\"Contrato no encontrado, favor de revisar sus contrato asignados\")\n            setListaContratos([]);\n          }else{\n            setListaContratos(result);\n          }\n      }).catch((error) => {\n        setMensaje(error.message);\n      }).finally(() => {\n        setLoading(false);\n      })\n  }\n  function zeroFill(number: string, width: number = 9) {\n    while (number.length < width) {\n      number = \"0\" + number;\n    }\n    return number;\n  }\n  const functionValidarLectura = (estatus: number, cobro: number) => {\n    let leyendaCobro = \"\";\n    let result = [\"\", false];\n    if (cobro == 1) {\n      leyendaCobro = \"Cuota Fija \";\n    }\n    switch (estatus) {\n      case 1:\n        result = [leyendaCobro + \"\", cobro == 1];\n        break;\n      case 2:\n        result = [leyendaCobro + \"\", cobro == 1];\n        break;\n      case 3:\n        result = [leyendaCobro + \"Baja Temporal\", true];\n        break;\n      case 4:\n        result = [leyendaCobro + \"Baja Permanente\", true];\n        break;\n      case 5:\n        result = [leyendaCobro + \"Inactivo\", true];\n        break;\n      case 6:\n        result = [leyendaCobro + \"Nueva\", true];\n        break;\n      case 9:\n        result = [leyendaCobro + \"Sin Toma\", true];\n        break;\n      case 10:\n        result = [leyendaCobro + \"Multada\", true]\n        break;\n    }\n    return result;\n  }\n  const prepararPantalla = async () => {\n    await solicitarPermisos()\n      .then(async (err) => {\n        console.log(\"Solicitando persmisos\");\n        let camera = await verifyCameraPermission();\n        let gps = await verifyGPSPermission();\n        if (camera && gps) {\n          let storageUser = getUsuario();\n          setUser(storageUser + \"\");\n        } else {\n        }\n      }).catch(() => {\n        //Quitar antes de la vercion final (solo sirve en web)\n        let storageUser = getUsuario();\n        setUser(storageUser + \"\");\n      })\n    mostrarListaContratos();\n  }\n  const mostrarDatosContrato = async (item: any, esPapa: boolean) => {\n    //NOTE: Verificamos si es una cuenta papa\n    if (!esPapa) {\n      //INDEV: guardamos los datos en el storage para mostrar en la pantalla\n      setContratoCorte(item.id);\n      history.push(\"/realizar-corte\");\n    }\n  }\n  const mostrarListaContratos = async () => {\n    await ObtenerListaCortes()\n      .then( async (result) => {\n        if(result.length > 0){\n          //NOTE: obtenemos los datos para el paginado\n          setIndex(1);\n          setTotalPaginas(await getNumeroPaginasTareas());\n          let listaSeccion = [];\n          for( let i = (0); i < ((index+1)*4); i++ ){\n            listaSeccion.push(result[i]);\n          }\n          setListaContratos(listaSeccion);\n          setListaTareas(result);\n        }\n        //setListaContratos(result);\n      })\n      .catch((error) => {\n        setMensaje(error.message);\n      }).finally(() => {\n        setLoading(false);\n      })\n  }\n  const paginaAnterior = (  ) =>{\n    if( (index - 2) >= 0 ){\n      let listaSeccion = [];\n      console.log( \"Border: \" + ((index - 2) * 4 ) + \" -> Superior: \" +((( index - 1 ) * 4)));\n      for( let i = ((index - 2) * 4 ); i <= ((index - 1) * 4)-1; i++ ){\n        listaSeccion.push(listaTareas[i]);\n      }\n      setListaContratos(listaSeccion);\n      setIndex((index - 1));\n    }\n  }\n  const paginaSigueinte = async () =>{\n    if(( index + 1) < getNumeroPaginasTareas()){\n      let listaSeccion = [];\n      for( let i = (( index * 4 ) -1) ; i < (( index + 1 )*4) -1; i++ ){\n        listaSeccion.push(listaTareas[i]);\n      }\n      setListaContratos(listaSeccion);\n      setIndex((index + 1));\n    }\n  }\n  return (\n    <IonPage>\n      {\n        activarMenu ?\n          <MenuLeft /> : <></>\n      }\n      {/* Cabezera */}\n      <IonHeader>\n        <IonToolbar color=\"danger\" >\n          <IonTitle>{`Cortes`}</IonTitle>\n          <IonButtons slot=\"start\" className=\"btnMenu\">\n            <IonMenuButton ></IonMenuButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      {/* Contenido de la app */}\n      <IonContent>\n        <IonCard class=\"ion-text-center\" className=\"box\" >\n          <IonCardHeader >\n            <div>\n              <h3>Realizar corte</h3>\n              <IonLabel >Puedes realizar busquedas por:</IonLabel>\n              <p>Contrato o Medidor</p>\n              <br />\n            </div>\n            <IonGrid>\n              <IonRow>\n                <IonCol>\n                  <IonItem>\n                    <IonLabel>Filtrar Por:</IonLabel>\n                    <IonSelect value={tipoFiltro} onIonCancel={() => { setTipoFiltro(1); }} placeholder=\"Seleccione el filtro\" interface=\"action-sheet\" onIonChange={e => { setTipoFiltro(e.detail.value) }} >\n                      <IonSelectOption value={1} >Contrato</IonSelectOption>\n                      <IonSelectOption value={2} >Medidor</IonSelectOption>\n                    </IonSelect>\n                  </IonItem>\n                </IonCol>\n              </IonRow>\n              <IonRow>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonInput type=\"number\" placeholder={`Ingrese el ${tipoFiltro == 1 ? \"contrato\" : \"medidor\"}`} onIonChange={e => { setContrato(String(e.detail.value)) }}></IonInput>\n                  </IonItem>\n                </IonCol>\n              </IonRow>\n              <br />\n              <IonButton color=\"danger\" expand=\"block\" onClick={BuscarLectura}>\n              <IonIcon icon={searchCircle} slot=\"end\" size = \"large\"></IonIcon>\n                 Buscar Toma </IonButton>\n              <IonItem></IonItem>\n              {\n                (listaContratos != null && listaContratos.length > 0) ?\n                <IonItem>\n                <IonGrid>\n                  <IonRow>\n                    <IonCol>\n                      <IonButton shape=\"round\" color=\"danger\" size=\"small\" onClick={ paginaAnterior} /* disabled={getPuntero() == 0} */>\n                        <IonIcon icon={arrowBackOutline} size=\"small\" ></IonIcon>\n                      </IonButton></IonCol>\n                      <IonCol ><IonLabel className = \"center\">Pagina:{index == 0 ? 1 : index}</IonLabel></IonCol>\n                    <IonCol >\n                      <IonButton shape=\"round\" color=\"danger\" onClick={ paginaSigueinte } /* disabled = {getPuntero()+1==getNumeroPaginas()} */>\n                        <IonIcon icon={arrowForwardOutline} size=\"small\" ></IonIcon>\n                      </IonButton>\n                    </IonCol>\n                  </IonRow>\n                </IonGrid>\n              </IonItem>:<></>\n              }\n            </IonGrid>\n          </IonCardHeader>\n          <IonList>\n            {\n              listaContratos.map((item, index) => {\n                if( item != undefined ){\n                  let papas = getCuentasPapas();\n                  //console.log( \"Estado de la toma: \" + item);\n                  let arrayData = functionValidarLectura(parseInt(item.Estatus), parseInt(item.M_etodoCobro));\n                  let cuentaPapa = String(papas).includes(item.id);\n                  if (cuentaPapa) {\n                    arrayData[0] += \"Desarrollo\";\n                  }\n                  return <div className={(cuentaPapa || arrayData[1]) ? 'cuotaFija' : ''} key={index} onClick={() => { mostrarDatosContrato(item, cuentaPapa); }}>\n                    <IonItem detail={true} >\n                      <IonList>\n                        <IonLabel>{item.Contribuyente}</IonLabel>\n                        <p>Contrato: {item.ContratoVigente},\n                                           Medidor: {item.Medidor},\n                                           Toma: {item.Toma}\n                                           &nbsp;&nbsp;&nbsp;&nbsp;\n                                           {\n                            (cuentaPapa || arrayData[1]) ? <IonNote style={{ fontsize: 20 }} color=\"danger\">{arrayData[0]}</IonNote> : \"\"\n                          }\n                        </p>\n                      </IonList>\n                    </IonItem>\n                  </div>\n                }\n              })\n            }\n          </IonList>\n        </IonCard>\n        <IonLoading\n          cssClass=\"my-custom-class\"\n          isOpen={loading}\n          onDidDismiss={() => { setLoading(false); }}\n          message=\"Por favor espere\"\n        />\n        <IonAlert\n          cssClass=\"my-custom-class\"\n          header={tipoMensaje}\n          message={mensaje}\n          onDidDismiss={() => { if (!sesionValida) { history.replace(\"./home\"); } }}\n          isOpen={mensaje.length > 0}\n          backdropDismiss={false}\n          buttons={[{ text: 'Aceptar', handler: () => { setMensaje(\"\") } }]}\n        />\n      </IonContent>\n    </IonPage>\n  )\n}\nexport default PrincipalCortes;","import { IonAlert, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonChip, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonImg, IonItem, IonLabel, IonLoading, IonMenuButton, IonPage, IonPicker, IonRippleEffect, IonRow, IonSelect, IonSelectOption, IonText, IonTextarea, IonTitle, IonToolbar, useIonToast, useIonViewDidEnter, useIonViewWillEnter } from \"@ionic/react\";\nimport { checkmarkCircle, chevronBackCircleOutline, contractOutline, pencil, saveOutline, triangle } from \"ionicons/icons\";\nimport { useEffect,useState } from 'react';\nimport MenuLeft from '../../components/left-menu';\nimport { obtenerDatosCorte, EnviarCorte } from '../../controller/apiController';\nimport { useTakePhoto, obtenerBase64, obtenerCoordenadas,asignarCalidad,modificarTamanio } from '../../utilities';\nimport './realizar-corte.css';\nimport foto from '../../assets/icon/sinFoto.jpg';\nimport { useHistory } from 'react-router';\n\nconst RealizarCorte: React.FC = () => {\n    const history = useHistory();\n    const [ activarMenu, setActivarMenu ] = useState(true);\n    const [ datosContrato, setDatosContrato ] = useState(Object);\n    const [ datosUsuario, setDatosUsuario ] = useState(Object);\n    const [ loading, setLoading ] = useState(true);\n    const [ fechaActual, setFechaActual ] = useState(\"\");\n    const [ tipoInspeccion, setTipoInspecion ] = useState(2);\n    /**NOTE: Manejadores de fotos */\n    const [ arregloFotos, setArregloFotos ] = useState<string[]>([]);\n    const [ arregloFotosVista, setArregloFotosVista ] = useState<string[]>([]);\n    const [ fotoActiva, setFotoActiva ] = useState(String);\n    const [ indexFoto, setIndexFoto ] = useState(Number);\n    const [ activarGaleria, setActivarGaleria ] = useState(false);\n    const { takePhoto } = useTakePhoto();\n    //NOTE: contradores de la base de datos\n    const [ motivoInspeccion, setMotivoInspeccion ] = useState(String);\n    const [ ejercicio, setEjercicio ] = useState(2020);\n    //NOTE: Validacion de toma si esta cortado\n    const [ bloquearCorte, setBloquearCorte ] = useState(true);\n    /**NOTE: Manejador de mensajes de error y advertencias */\n    const [ tipoMensaje, setTipoMensaje ] = useState(String);   \n    const [ mensaje, setMensaje ] = useState( String );\n    const [ errorCarga, setErrorCarga ] = useState(false);\n    const [ errorCampos, setErrorCampos ] = useState(false);\n    const [pressentToast, dismissToast] = useIonToast();\n    \n\n\n     //INDEV: Bloque de fotos para tomas\n     const [ fotoTomaEncode, setFotoTomaEncode ] =  useState(String);\n     const [ fotoTomaPreview, setFotoTomaPreview ] = useState(String);\n     //NOTE: Foto de la facha\n     const [ fotoFachadaEncode, setFotoFachadaEncode ] = useState(String);\n     const [ fotoFachadaPreview, setFotoFachadaPreview ] = useState(String);\n     //NOTE: Foto perspectiva amplia\n     const [ fotoCalleEncode, setFotoCalleEncode ] = useState(String);\n     const [ fotoCallePreview, setFotoCallePreview ] = useState(String);\n     //NOTE: Manejador de errores \n     const [ errorImagenes, setErrorImagenes ] = useState( String );\n     \n\n    const alertButtons = [\n        {\n            text: \"Reintentar\", handler: () => {\n                setMensaje(\"\");\n                setTipoMensaje(\"Error\");\n                setLoading(true);\n                extraerDatos();\n                \n            }\n        },\n        {\n            text: \"Cancelar\"\n        }]\n    const modoPruebas = false; //INDEV: modo de pruebas \n    const fecha = new Date();\n    useEffect(()=>{\n        extraerDatos();\n    },[]);\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\n    const listaEstados = [\"Activo\",\"Cortado\",\"Baja Temporal\",\"Baja Permanente\",\"Inactivo\",\"Nueva\",\"\",\"\",\"Sin toma\",\"Multada\"];\n    const extraerDatos = async () =>{\n        //NOTE: extraer datos del contrato\n        let dia = fecha.getDate();\n        let mes = fecha.getMonth();\n        let anio = fecha.getFullYear();\n        setEjercicio( modoPruebas ? 2020 : anio);\n        setFechaActual( formatoFecha(dia,mes,anio) );\n        await obtenerDatosCorte()\n        .then(( result )=>{\n            if(result != undefined ){\n                console.log(result[1]);\n                setDatosContrato(result[0]);\n                setDatosUsuario(result[1]);\n                //NOTE: verificamos si\n                setBloquearCorte(result[0].Estatus != 1);\n            }\n        })\n        .catch(( error )=>{\n            setErrorCarga(true);\n            setMensaje(error.message);\n            setTipoMensaje(\"ERROR\");\n\n        }).finally(()=>{\n            setLoading(false);\n        });\n    }\n    const formatoFecha = ( dia: number, mes: number, anio:number  ) =>{\n        let formatoFecha = \"\";\n        dia < 10 ? formatoFecha += (\"0\"+dia+\"/\") : formatoFecha += dia +\"/\";\n        mes < 10 ? formatoFecha += (\"0\"+mes+\"/\") :  formatoFecha += mes + \"/\";\n        formatoFecha += anio;\n        return formatoFecha;\n    }\n    const handleAbrirCamera = async (tipoFoto: number) =>{\n        setLoading(true);\n        asignarCalidad(50);\n        modificarTamanio(false);\n        await takePhoto()\n            .then(async (result) => {\n                setLoading(true);\n                agregarImagenEncode(result.webPath + \"\", tipoFoto);\n            })\n            .catch((err) => {\n                let errorType = err.message + \"\";\n                if (errorType.includes(\"denied\")) {\n                    setMensaje(\"La aplicación no tiene permisos para usar la cámara\")\n                }\n            }).finally(() => { setLoading(false) })\n    \n    }\n    const agregarImagenEncode = async ( imgDir: string, tipoFoto: number ) =>{\n        await obtenerBase64(imgDir).then((result) => {\n            switch (tipoFoto) {\n                case 1:\n                    setFotoTomaEncode(String(result));\n                    setFotoTomaPreview(imgDir);\n                    break;\n                case 2:\n                    setFotoFachadaEncode(String(result));\n                    setFotoFachadaPreview(imgDir);\n                    break;\n                case 3: \n                    setFotoCalleEncode(String(result));\n                    setFotoCallePreview(imgDir);\n                    break;\n            }\n\n        }).finally(() => { setLoading(false) })\n        \n    }\n                        <IonGrid>\n                                <IonRow>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Toma </IonLabel>\n                                        <IonCard>\n                                            <IonImg className=\"imagenViwer\"  src=\"https://media.istockphoto.com/vectors/vector-camera-icon-with-photo-button-on-a-white-background-vector-id1270930870?k=20&m=1270930870&s=170667a&w=0&h=kG9xDNMeLFQJeDrg-ik-HkvaHcOy2HjZe8xaDMB-dk0=\" >  </IonImg>\n                                        </IonCard>\n                                    </IonCol>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Facha </IonLabel>\n                                        <IonCard>\n                                            <IonImg className=\"imagenViwer\"  src=\"https://media.istockphoto.com/vectors/vector-camera-icon-with-photo-button-on-a-white-background-vector-id1270930870?k=20&m=1270930870&s=170667a&w=0&h=kG9xDNMeLFQJeDrg-ik-HkvaHcOy2HjZe8xaDMB-dk0=\" >  </IonImg>\n                                        </IonCard>\n                                    </IonCol>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Calle </IonLabel>\n                                        <IonCard>\n                                            <IonImg className=\"imagenViwer\"  src=\"https://media.istockphoto.com/vectors/vector-camera-icon-with-photo-button-on-a-white-background-vector-id1270930870?k=20&m=1270930870&s=170667a&w=0&h=kG9xDNMeLFQJeDrg-ik-HkvaHcOy2HjZe8xaDMB-dk0=\" >  </IonImg>\n                                        </IonCard>\n                                    </IonCol>\n                                </IonRow>\n                        </IonGrid>\n    const guardarInspeccion = async( Fotos: { \"Toma\": string, \"Fachada\": string , \"Calle\": string }  ) =>{\n        try {\n            setLoading(true);\n            setTimeout(() => {\n                if (loading) {\n                    throw 0;\n                }\n            }, 20000);\n            await obtenerCoordenadas()\n            .then( async ( coordenadas )=>{\n                //NOTE: damos formato a los datos que se enviaran\n                //INDEV: faltan las fotos {\\\"Estatus\\\":true,\\\"Code\\\":200,\\\"Mensaje\\\":\\\"Tomar cortada\\\",\\\"Corte\\\":6089}\n                let datos = {\n                    Motivo: motivoInspeccion,\n                    Padron: datosContrato.Padron,\n                    Persona: datosUsuario.Persona,\n                    Usuario: datosUsuario.Usuario,\n                    Estado: tipoInspeccion,\n                    Longitud: String(coordenadas.longitude),\n                    Latitud: String(coordenadas.latitude),\n                    Ejercicio: ejercicio,\n                    Evidencia:Fotos\n                };\n                console.log( datos );                \n                await EnviarCorte(datos)\n                .then(()=>{\n                    setErrorCarga(false);\n                    setTipoMensaje(\"Mensaje\");\n                    setMensaje(\"Corte realizado...\");\n                    setTimeout(()=>{\n                        history.goBack();\n                    }, 1000);\n                })\n                .catch((error)=>{\n                    setErrorCarga(false);\n                    setMensaje(error.message);\n                    setTipoMensaje(\"ERROR\");            \n                })\n                .finally(()=>{\n                    setLoading(false);\n                })\n            });\n        }catch(error){\n            console.log(error);\n            setLoading(false);\n            setTipoMensaje(\"Mensaje\");\n            setMensaje(`Tiempo de espera agotado.\n            Asegúrese de activar la ubicación del dispositivo`)\n        }\n    }\n    const validarCampos = async () =>{\n        //Validamos que las fotos no esten vacias\n        let error = \"\";\n        fotoTomaEncode == \"\" ? error += \"T,\" : error+=\"\";\n        fotoFachadaEncode == \"\" ? error += \"F,\" : error+=\"\";\n        fotoCalleEncode == \"\" ? error += \"C,\": error+=\"\"\n        if(error == \"\"){\n            if(motivoInspeccion != \"\"){\n                //NOTE: Creamosel objeto que se va a enviar\n                let jsonImagenes = {\n                    \"Toma\": fotoTomaEncode,\n                    \"Fachada\": fotoFachadaEncode,\n                    \"Calle\": fotoCalleEncode\n                };\n                setErrorCampos(false);\n                await guardarInspeccion(jsonImagenes);\n            }else{\n                setTipoMensaje(\"Mensaje\");\n                setMensaje(\"Favor de ingresar el motivo del corte\");\n                setErrorCampos(true);\n            }\n        }else{\n            //Lanzamos los errores de fotos\n            setErrorImagenes(error);\n        }\n    }   \n    const borrarFotoEvidencia = () => {\n        let fotosTemporal = new Array;\n        let fotosEncoded = new Array;\n        arregloFotos.map((item, index) => {\n            if (index != indexFoto) {\n                fotosTemporal.push(item);\n            }\n        });\n        arregloFotosVista.map((item, index) => {\n            if (index != indexFoto) {\n                fotosEncoded.push(item);\n            }\n        })\n        setArregloFotosVista(fotosTemporal);\n        setArregloFotos(fotosEncoded);\n        setFotoActiva('');\n        pressentToast({\n            message: \"Se elimino la foto de la lista\",\n            duration: 2000,\n            position: 'top',\n            buttons: [\n                {\n                    side: 'start',\n                    icon: checkmarkCircle,\n                }\n            ]\n        });\n        console.log(fotosTemporal.length + \" - \" + fotosEncoded.length);\n    }\n    const regresar = () =>{\n        history.replace('/buscar-contrato');\n    }\n    const limpiarPantalla = () =>{\n        setActivarGaleria(false);\n        setFotoActiva(\"\");\n        setArregloFotos([]);\n        setArregloFotosVista([]);\n        setIndexFoto(0);\n        setBloquearCorte(true);\n        setMensaje(\"\");\n        setTipoMensaje(\"\");\n        setErrorCampos(false);\n        setErrorCarga(false);\n    } \n    //INDEV: Bloque para lanzar la camara dependiendo del tipo de foto\n    const FotoToma = () =>{\n        //NOTE: lanzamos la camara con el tipo 1\n        handleAbrirCamera(1);\n    } \n    const FotoFachada = () =>{\n        handleAbrirCamera(2);\n    }\n    const FotoCalle = () =>{\n        handleAbrirCamera(3);\n    }\n    return (\n        <IonPage>\n            {\n                activarMenu ? <MenuLeft /> : <></>\n            }\n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                    <IonTitle>Cortar Toma</IonTitle>\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\n                        <IonMenuButton ></IonMenuButton>\n                    </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <IonCard>\n                    <IonCardHeader>\n                        <div className=\"datosContribuyete\">\n                            <h3>{ datosContrato.Nombre } </h3>\n                            <p> RFC: { datosContrato.Rfc } , Cuenta: {datosContrato.Cuenta}</p>\n                            <p>Contrato: { datosContrato.ContratoVigente }, &nbsp;&nbsp; Medidor: {datosContrato.Medidor}, &nbsp;&nbsp; Toma: {datosContrato.Toma}</p>\n                            <p>Municipio: {datosContrato.Municipio}, &nbsp;&nbsp; Localidad: { datosContrato.Localidad}</p>\n                            <p>Direccion: {datosContrato.Direccion}</p>\n                        </div>\n                    </IonCardHeader>\n                    <IonCardContent>\n                        <br />\n                        <IonItem >\n                            <IonLabel>{ `Inspector: ${datosUsuario.PersonaNombre} - ${ datosUsuario.Puesto } ` }</IonLabel>\n                        </IonItem>\n                        <br/>\n                        <IonItem >\n                            <IonLabel color = {bloquearCorte ? \"danger\" : \"primary\"} className = \"bloquearCorte\" > { ` Estado:  ${listaEstados[ parseInt(datosContrato.Estatus)-1 ]} ${modoPruebas ? \" Modo Pruebas \" :\"\" }` } </IonLabel>\n                        </IonItem>\n                        <br/>\n                        <IonItem>\n                            <IonLabel> {`Fecha: ${fechaActual} `} </IonLabel>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel> Tipo de inspección </IonLabel>\n                            <IonSelect disabled interface = \"action-sheet\" value = {tipoInspeccion} onIonChange = { ( e )=>{setTipoInspecion(e.detail.value)} } >\n                                <IonSelectOption value = {3} > Baja Temporal </IonSelectOption>\n                                <IonSelectOption value = {4} > Baja Permanente </IonSelectOption>\n                                <IonSelectOption value = {2} > Cortado </IonSelectOption>\n                                <IonSelectOption value = {5} > Inactivo </IonSelectOption>\n                                <IonSelectOption value = {9} > Sin Toma </IonSelectOption>\n                            </IonSelect>\n                        </IonItem>\n                        <IonItem>\n                            <IonTextarea disabled = {bloquearCorte} placeholder = \"Motivo del corte\" className = {errorCampos ? \"inputBorderError\":\"inputBorder\"} onIonChange = {e=>{setMotivoInspeccion(String(e.detail.value))}} > </IonTextarea>   \n                        </IonItem>\n                        <br/>\n                        <IonGrid>\n                                <IonRow>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Toma </IonLabel>\n                                        <IonCard onClick = { FotoToma } className = { errorImagenes.includes(\"T,\") ? \"errorInput\" : \"clearInput\" }  >\n                                            <IonImg className=\"imagenViwer\"  src = { fotoTomaPreview != \"\" ? fotoTomaPreview : foto } ></IonImg>\n                                            <IonRippleEffect></IonRippleEffect>\n                                        </IonCard>\n                                    </IonCol>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Facha </IonLabel>\n                                        <IonCard onClick = { FotoFachada } className = { errorImagenes.includes(\"F,\") ? \"errorInput\" : \"clearInput\" } >\n                                            <IonImg className=\"imagenViwer\"  src ={ fotoFachadaPreview != \"\" ? fotoFachadaPreview : foto } >  </IonImg>\n                                        </IonCard>\n                                        <IonRippleEffect></IonRippleEffect>\n                                    </IonCol>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Calle </IonLabel>\n                                        <IonCard onClick = { FotoCalle } className = { errorImagenes.includes(\"C,\") ? \"errorInput\" : \"clearInput\" } >\n                                            <IonImg className=\"imagenViwer\"  src ={ fotoCalleEncode != \"\" ? fotoCalleEncode : foto } >  </IonImg>\n                                        </IonCard>\n                                        <IonRippleEffect></IonRippleEffect>\n                                    </IonCol>\n                                </IonRow>\n                        </IonGrid>\n                        \n                        <br />\n                        {\n                            fotoActiva != '' ?\n                            <IonItem >\n                                <IonCard className = \"centrarCarousel\" >\n                                    <IonImg src={fotoActiva} />\n                                    <IonCardContent >\n                                        <IonButtons>\n                                            <IonButton color=\"secondary\" onClick={() => { setFotoActiva(''); }}>Cerrar</IonButton>\n                                            <IonButton color=\"danger\" onClick={() => { borrarFotoEvidencia(); }} >Eliminar</IonButton>\n                                        </IonButtons>\n                                    </IonCardContent>\n                                </IonCard>\n                            </IonItem> : <></>\n                        }\n                            <IonGrid>\n                                <IonRow>\n                                    <IonCol size=\"6\" className = \"center\" >\n                                        <IonButton expand = \"block\" color=\"secondary\" onClick = {regresar}>\n                                        <IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon>\n                                            Regresar\n                                        </IonButton>\n                                    </IonCol>\n                                    <IonCol size=\"6\" className = \"center\" >\n                                        <IonButton expand = \"block\" disabled = {bloquearCorte} color=\"danger\" onClick={validarCampos}>\n                                            Guardar\n                                            <IonIcon icon={saveOutline} slot=\"end\"></IonIcon>\n                                        </IonButton>\n                                    </IonCol>\n                                </IonRow>\n                            </IonGrid>\n                    </IonCardContent>\n                </IonCard>\n                <IonLoading \n                    cssClass=\"my-custom-class\"\n                    isOpen={loading}\n                    onDidDismiss={() => { setLoading(false); }}\n                    message=\"Por favor espere\"\n                />\n                <IonAlert\n                    cssClass=\"my-custom-class\"\n                    header={tipoMensaje}\n                    message={mensaje}\n\n                    isOpen={mensaje.length > 0}\n                    backdropDismiss={false}\n                    buttons={ errorCarga ? alertButtons : [{ text: 'Aceptar', \n                        handler: () => { \n                            if(mensaje == \"Corte realizado...\"){\n                                limpiarPantalla();\n                                extraerDatos();\n                            }\n                        setMensaje(\"\");\n                     } \n                }]}\n                />\n            </IonContent>\n        </IonPage>\n    );\n}\n\nexport default RealizarCorte;","import { IonButtons, \n    IonCard, \n    IonCardHeader, \n    IonCol, \n    IonContent, \n    IonHeader, \n    IonMenuButton, \n    IonPage, \n    IonRippleEffect, \n    IonRow, \n    IonText, \n    IonTitle, \n    IonToolbar, \n    useIonViewDidEnter, \n    useIonViewWillEnter,\n    IonSelect,\n    IonSelectOption, \n    IonItemDivider,\n    IonList,\n    IonItem,\n    IonLabel,\n    IonButton,\n    IonNote,\n    IonCardContent,\n    IonLoading,\n    IonAlert,\n    IonIcon} from \"@ionic/react\";\nimport { useEffect, useState } from \"react\";\nimport { generarFechas } from '../../utilities'; \nimport MenuLeft from '../../components/left-menu';\nimport { ListaCortes } from '../../controller/apiController';\nimport { useHistory } from  'react-router-dom'; \nimport './buscar-corte.css'\nimport { searchCircle } from \"ionicons/icons\";\nconst BuscarCorte: React.FC = () => {\n    const history = useHistory();\n    const [activarMenu , setActivarMenu ] = useState(true);\n    const [fechaActual, setFechaActual ] = useState(String);\n    const [ anios, setAnios ] = useState<any[]>([]);\n    const [ meses, setMeses ] = useState<any[]>([]);\n    const [ anioSeleccionado, setAnioSeleccionado ] = useState(11);\n    const [ mesSelecionado, setMesSeleccionado ] = useState(Number);\n    const [ arregloCortes , setArregloCortes ] = useState<any[]>([]);\n    const [ loading, setLoading ] = useState(false);\n    const [mensaje, setMensaje ] = useState(\"\");\n    const [ tipoMensaje, setTipoMensaje ] = useState( \"Mensaje\" );\n    const fecha = new Date();\n    const listaEstados = [\"Activo\",\"Cortado\",\"Baja Temporal\",\"Baja Permanente\",\"Inactivo\",\"Nueva\",\"\",\"\",\"Sin toma\",\"Multada\"];\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\n    useEffect(()=>{\n        setFechaActual(fecha.getFullYear() + \"-\" + (fecha.getMonth() + 1) + \"-\" + (fecha.getDate()  + 1 ));\n        preparaPantalla(String(fecha.getFullYear()));\n        \n    },[]);\n    const preparaPantalla = async (anio:string) =>{\n        let aniosMeses = await generarFechas(fecha.getFullYear());\n        setMeses(aniosMeses[0].Meses);\n        setAnios(aniosMeses[1].Anios);\n        setMesSeleccionado(fecha.getMonth() + 1);\n        //setAnioSeleccionado(fecha.getFullYear()); es mediante el id del arreglo\n    }\n    const obtenerCortes = async () =>{\n        setLoading(true);\n        await ListaCortes(mesSelecionado <= 9 ? (\"0\" + mesSelecionado ) : String(mesSelecionado),anios[anioSeleccionado-1].anio)\n        .then((result)=>{\n            setArregloCortes(result);\n        })\n        .catch((error)=>{\n            error.message == \"No se encontraron registros\" ? setTipoMensaje(\"MENSAJE\") : setTipoMensaje(\"ERROR\");\n            setMensaje(error.message);\n            setArregloCortes([]);\n        }).finally(()=>{\n            setLoading(false);\n        })\n    }\n    const regresarPantalla = ()=>{\n        history.goBack();\n    }\n    return(\n        <IonPage>\n            {\n                activarMenu ? \n                <MenuLeft /> : <></>\n            }\n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                    <IonTitle> Historial Cortes </IonTitle>\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\n                        <IonMenuButton ></IonMenuButton>\n                    </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <IonCard>\n                    <IonCardHeader>\n                        <IonRow className = \"bordeFecha\" >\n                            <IonCol size = \"6\" className = \"labelCalendario\" >\n                                <IonText > Seleccione el año: </IonText>\n                            </IonCol>    \n                            <IonCol size=\"6\" className = \"ion-activatable ripple-parent\">\n                                <div >\n                                    <IonSelect onIonCancel = { ()=>{setAnioSeleccionado(11)} }  interface = \"action-sheet\" value={ anioSeleccionado } onIonChange = {e=>{setAnioSeleccionado(e.detail.value)}} >\n                                        {\n                                            anios != null ?\n                                            anios.map((item,index)=>{\n                                                return <IonSelectOption value={ item.id } key = {index} >{ item.anio }</IonSelectOption>\n                                            }) : <></>\n                                        }\n                                    </IonSelect>\n                                    <IonRippleEffect></IonRippleEffect>\n                                </div>\n                            </IonCol>\n                        </IonRow>\n                        <IonRow className = \"bordeFecha\" >\n                            <IonCol size=\"6\" class=\"labelCalendario\">\n                                <IonText> Seleccione mes: </IonText>\n                            </IonCol>\n                            <IonCol>\n                                <div>\n                                    <IonSelect onIonCancel = { () => { setMesSeleccionado(fecha.getMonth() + 1) }} interface = \"action-sheet\" value = { mesSelecionado } onIonChange = {e => {setMesSeleccionado(e.detail.value)}} >\n                                        {\n                                            meses.map((mes,item)=>{\n                                                return <IonSelectOption value={mes.id} key = {mes.id} >{ mes.mes }</IonSelectOption>\n                                            })\n                                        }\n                                    </IonSelect>\n                                </div>\n                            </IonCol> \n                        </IonRow>\n                        <IonRow>\n                            <IonCol className = \"center margintop\" >\n                                <IonButton color=\"danger\" expand = \"block\" onClick = { obtenerCortes } >\n                                <IonIcon icon={searchCircle} slot=\"end\" size = \"large\" ></IonIcon>\n                                    <IonText> Buscar Historial </IonText> <IonRippleEffect></IonRippleEffect>\n                                    </IonButton>\n                            </IonCol>\n                        </IonRow>\n                    </IonCardHeader>\n                    <IonCardContent>\n                        {/*NOTE: contenedor lista*/ }\n                        <div style = {{flex:1,justifyContent:\"center\", borderWidth: 1, marginTop: 5 }} >\n                            <IonList className = \"borderList\" >\n                                {\n                                    arregloCortes.map((item,index)=>{\n                                        return <IonItem key = {index} >\n                                            <IonLabel>\n                                                <h2> {item.Nombre} </h2>\n                                                <p> Contrato: { item.ContratoVigente }, Fecha: { item.FechaCorte } </p>\n                                                <p> Motivo: { item.Motivo } </p>\n                                                <IonNote slot = \"end\" color = {item.Estatus == 2 ? \"danger\" : \"primary\"} > {listaEstados[item.Estatus-1]} </IonNote>\n                                            </IonLabel>\n                                            </IonItem>\n                                    })\n                                }\n                            </IonList>\n                        </div>\n                    </IonCardContent>\n                </IonCard>\n                <IonLoading\n                cssClass=\"my-custom-class\"\n                isOpen={loading}\n                onDidDismiss={() => { setLoading(false); }}\n                message=\"Por favor espere\"\n                />\n                <IonAlert\n                cssClass=\"my-custom-class\"\n                header={tipoMensaje}\n                message={mensaje}\n                isOpen={mensaje.length > 0}\n                onDidDismiss = {()=>{setMensaje(\"\")}}\n                buttons ={[{\n                    text:\"Aceptar\",\n                    handler:()=>{setMensaje(\"\")}\n                }]}\n                />\n            </IonContent>\n        </IonPage>\n    );\n}\n\nexport default BuscarCorte;","import { IonAlert, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonCol, IonContent, IonDatetime, IonGrid, IonHeader, IonIcon, IonInput, IonItem, IonItemOption, IonItemOptions, IonItemSliding, IonLabel, IonList, IonLoading, IonMenuButton, IonNote, IonPage, IonRow, IonSelect, IonSelectOption, IonTitle, IonToolbar, useIonViewDidLeave, useIonViewWillEnter } from '@ionic/react';\nimport React, { useState, useEffect } from 'react';\nimport { buscarMedidorSinFiltro, ContratosListaContratoReporte } from '../../controller/apiController';\nimport { searchCircle } from 'ionicons/icons';\nimport { verifyingSession, cerrarSesion, setContratoMulta } from '../../controller/storageController'\nimport { useHistory } from 'react-router-dom';\nimport MenuLeft from '../../components/left-menu';\nimport { zeroFill } from '../../utilities';\n\nconst MultarToma: React.FC = () => {\n    //NOTE: navegador \n    const history = useHistory();\n    const [ activarMenu, setActivarMenu ] = useState( false );\n    const [ listaContratos, setListaContratos ] = useState<any[]>([]);\n    const [ mensaje, setMensaje ] = useState(String);\n    //NOTE: manejadores de alertas y mensajes\n    const [ tipoMensaje, setTipoMensaje ] = useState( String );\n    const [ cargando, setCargando ] = useState(false);\n    //NOTE: manejadores de la pantalla principal\n    const [ tipoFiltro, setTipoFiltro ] = useState( 1 );\n    const [ placeHolderFiltro, setPlaceHolderFiltro ] = useState(\"Buscar por Contrato\");\n    const [ palabraClave, setPalabraClave ] = useState(String);\n    //NOTE: controladores de session\n    const [ tokenExpirado , setTokenExpirado ] = useState( false );\n    const listaEstatus = [\"Activo\",\"Cortado\",\"Baja Temporal\",\"Baja Permanente\",\"Inactivo\",\"Nueva\",\"\",\"\",\"Sin Toma\",\"Multada\"];\n    useIonViewWillEnter(()=>{setActivarMenu( true )});\n    useIonViewDidLeave(()=>{setActivarMenu( false )});\n    useEffect(()=>{ verificarSession() },[]);\n    useEffect(()=>{\n        if(tokenExpirado){\n            logOut( tokenExpirado )\n        }\n    },[tokenExpirado])\n    //NOTE: verificamos los datos de la session\n\n    //NOTE: manejadores de pantalla\n    const cambiarFiltro = ( filtro:number ) =>{\n        setTipoFiltro(filtro);\n        filtro == 2 ? setPlaceHolderFiltro(\"Buscar por Medidor\") : setPlaceHolderFiltro(\"Buscar por Contrato\");\n    }\n    const buscarPadron = async () =>{\n        //NOTE: damos formato al contrato\n        setCargando(true);\n        if( tipoFiltro == 1 ){ //NOTE: 1 Contrato, 2 = Medidor\n            await ContratosListaContratoReporte(zeroFill( palabraClave ))\n            .then(( result )=>{\n                if(result.length == 0){\n                    setMensaje(\"Sin resultados\");\n                }\n                setListaContratos(result);\n            })\n            .catch((error)=>{ console.log(error) })\n            .finally(()=>{ setCargando(false) });\n        }else{\n            await buscarMedidorSinFiltro(zeroFill(palabraClave))\n            .then((result)=>{\n                if(result.length == 0){\n                    setTipoMensaje(\"Mensaje\");\n                    setMensaje(\"Sin resultados\");\n                }\n                setListaContratos(result);\n            })\n            .catch((error)=>{\n                let mensaje = String(error.message);\n                setTipoMensaje(\"Mensaje\");\n                setMensaje(mensaje);\n            }).finally(()=>{ setCargando(false) });\n        }\n    }\n    const abrirContrato = (padron: string ) => {        \n        console.log(padron);\n        setContratoMulta(padron);\n        history.push(\"/RealizarMulta\");\n    }\n    //NOTE: metodos para verificar la session\n    const verificarSession = async () =>{\n        //INDEV: obtenemos el token y lo verificamos\n        setTokenExpirado(!verifyingSession());\n    }\n    const logOut = async(valido:Boolean) =>{\n        if (valido) {\n            setTipoMensaje(\"Sesión no valida\");\n            setMensaje(\"Inicie sesión por favor\\nRegresando...\");\n            setTimeout(async () => {\n              setTipoMensaje('Error');\n              setMensaje('');\n              await cerrarSesion()\n                .then((result) => {\n                  history.replace(\"/home\")\n                })\n            }, 2500);\n          }\n    }\n    return (\n        <IonPage>\n        {\n          activarMenu ? \n          <MenuLeft />: <></>\n        }\n        <IonHeader>\n          <IonToolbar color=\"danger\" >\n            <IonTitle>{` Multar Contrato `}</IonTitle>\n            <IonButtons slot=\"start\" className=\"btnMenu\">\n              <IonMenuButton ></IonMenuButton>\n            </IonButtons>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n          <IonCard class=\"ion-text-center\" className=\"box\">\n            <IonCardHeader>\n              <div>\n                <h3> Buscar contrato </h3>\n                <IonLabel>Puedes realizar busquedas por:</IonLabel>\n                <p>Contrato o Medidor</p>\n                <br />\n              </div>\n              <IonGrid>\n              <IonRow>\n                  <IonCol>\n                  <IonItem>\n                    <IonLabel>Filtrar Por:</IonLabel>\n                  <IonSelect onIonCancel = {()=>{ setTipoFiltro(1) }} value = { tipoFiltro } placeholder = \"Seleccione el filtro\" interface = \"action-sheet\" onIonChange = {e => { cambiarFiltro(parseInt(String(e.detail.value)))}}>\n                      <IonSelectOption value={1} >Contrato</IonSelectOption>\n                      <IonSelectOption value={2} >Medidor</IonSelectOption>\n                    </IonSelect>\n                  </IonItem>\n                  </IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol size=\"12\">\n                    <IonItem>\n                      <IonInput type=\"number\" placeholder = { placeHolderFiltro } onIonChange={ e => { setPalabraClave(String(e.detail.value))} } ></IonInput>\n                    </IonItem>\n                  </IonCol>\n                </IonRow>\n                <IonRow>\n                    <IonCol size=\"12\" > \n                        <IonButton color=\"danger\" expand=\"block\" onClick={ buscarPadron } > Buscar Toma <IonIcon slot = \"end\" icon={ searchCircle } color=\"light\" size=\"large\" ></IonIcon></IonButton>\n                    </IonCol>\n                </IonRow>\n              </IonGrid>\n            </IonCardHeader>\n            <IonCardContent>\n                {/*NOTE: contenedor lista*/ }\n                <div style = {{flex:1,justifyContent:\"center\", borderWidth: 1, marginTop: 5 }} >\n                    <IonList className = \"borderList\" >\n                        {\n                            listaContratos.map((item,index)=>{\n                                return <IonItem key = {index} onClick = { ()=>{ abrirContrato( item.id )}} >\n                                    <IonLabel>\n                                        <h2> {item.Contribuyente} </h2>\n                                        <p> Contrato: { item.ContratoVigente }, Toma: { item.Toma } </p>\n                                        <p> Medidor: { item.Medidor }</p>\n                                        <IonNote color=\"primary\">Estado: {listaEstatus[item.Estatus - 1] }</IonNote>\n                                    </IonLabel>\n                                    \n                                    </IonItem>\n                            })\n                        }\n                    </IonList>\n                </div>\n            </IonCardContent>\n          </IonCard>\n          <IonAlert\n            cssClass=\"my-custom-class\"\n            header={tipoMensaje}\n            message={mensaje}\n            isOpen={mensaje.length > 0}\n            backdropDismiss={false}\n            buttons={ [{ text: \"Aceptar\", handler: () => { setMensaje(\"\") } }] }\n          />\n          <IonLoading\n            cssClass=\"my-custom-class\"\n            isOpen={cargando}\n            onDidDismiss={() => { setCargando( false ); }}\n            message=\"Por favor espere\"\n          />\n        </IonContent>\n      </IonPage>\n    \n    )\n}\nexport default MultarToma;","import { IonModal,IonAlert, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonImg, IonItem, IonLabel, IonLoading, IonMenuButton, IonPage, IonRow, IonSelect, IonSelectOption, IonTextarea, IonTitle, IonToolbar, useIonToast, useIonViewDidEnter, useIonViewWillEnter } from \"@ionic/react\";\nimport { checkmarkCircle, chevronBackCircleOutline, saveOutline, cameraOutline,arrowBackCircle, arrowForwardCircle, arrowBackCircleOutline } from \"ionicons/icons\";\nimport { useEffect,useRef,useState } from 'react';\nimport MenuLeft from '../../components/left-menu';\nimport { obtenerDatosCorte, MultarToma } from '../../controller/apiController';\nimport { useTakePhoto, obtenerBase64, obtenerCoordenadas,asignarCalidad,modificarTamanio } from '../../utilities';\nimport './realizar-multa.page.css';\nimport foto from '../../assets/icon/sinFoto.jpg';\nimport { useHistory } from 'react-router';\nimport { cerrarSesion } from \"../../controller/storageController\";\n\nconst RealizarMulta: React.FC = () => {\n    //NOTE: referencias\n    const referenciaModal = useRef<HTMLIonModalElement>(null);\n\n    const history = useHistory();\n    const [ activarMenu, setActivarMenu ] = useState(true);\n    const [ datosContrato, setDatosContrato ] = useState(Object);\n    const [ datosUsuario, setDatosUsuario ] = useState(Object);\n    const [ loading, setLoading ] = useState(true);\n    const [ fechaActual, setFechaActual ] = useState(\"\");\n    const [ tipoInspeccion, setTipoInspecion ] = useState(1);\n    /**NOTE: Manejadores de fotos */\n    const [ mostrarSlide, setMostrarSlide ] = useState(Boolean);\n    const [ arregloFotos, setArregloFotos ] = useState<string[]>([]);\n    const [ arregloFotosVista, setArregloFotosVista ] = useState<string[]>([]);\n    const [ fotoActiva, setFotoActiva ] = useState(String);\n    const [ indexFoto, setIndexFoto ] = useState(Number);\n    const { takePhoto } = useTakePhoto();\n    //NOTE: contradores de la base de datos\n    const [ motivoInspeccion, setMotivoInspeccion ] = useState(String);\n    const [ ejercicio, setEjercicio ] = useState(2020);\n    //NOTE: Validacion de toma si esta cortado\n    const [ bloquearCorte, setBloquearCorte ] = useState(true); //REVIEW: Preguntar si se puede tener mas de una multa sin pagar \n    /**NOTE: Manejador de mensajes de error y advertencias */\n    const [ tipoMensaje, setTipoMensaje ] = useState(String);   \n    const [ mensaje, setMensaje ] = useState( String );\n    const [ errorCarga, setErrorCarga ] = useState(false);\n    const [ errorCampos, setErrorCampos ] = useState(false);\n    const sinFoto = \"https://media.istockphoto.com/vectors/vector-camera-icon-with-photo-button-on-a-white-background-vector-id1270930870?k=20&m=1270930870&s=170667a&w=0&h=kG9xDNMeLFQJeDrg-ik-HkvaHcOy2HjZe8xaDMB-dk0=\";\n    const [ monto, setMonto ] = useState(4481);\n\n    const modoPruebas = false; //INDEV: modo de pruebas \n    const fecha = new Date();\n    useEffect(()=>{\n        extraerDatos();\n    },[]);\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\n    const listaEstados = [\"Activo\",\"Cortado\",\"Baja Temporal\",\"Baja Permanente\",\"Inactivo\",\"Nueva\",\"\",\"\",\"Sin toma\",\"Multada\"];\n    const extraerDatos = async () =>{\n        //NOTE: extraer datos del contrato\n        let dia = fecha.getDate();\n        let mes = fecha.getMonth();\n        let anio = fecha.getFullYear();\n        setEjercicio( modoPruebas ? 2020 : anio);\n        setFechaActual( formatoFecha(dia,mes,anio) );\n        await obtenerDatosCorte(true) //NOTE: False para cortes y true para multas\n        .then(( result )=>{\n            if(result != undefined ){\n                console.log(result);\n                setDatosContrato(result[0]);\n                setDatosUsuario(result[1]);\n                //NOTE: verificamos si\n                setBloquearCorte(result[0].Estatus != 1);\n            }\n        })\n        .catch(( error )=>{\n            setErrorCarga(true);\n            setMensaje(error.message);\n            setTipoMensaje(\"ERROR\");\n\n        }).finally(()=>{\n            setLoading(false);\n        });\n    }\n    const formatoFecha = ( dia: number, mes: number, anio:number  ) =>{\n        let formatoFecha = \"\";\n        dia < 10 ? formatoFecha += (\"0\"+dia+\"/\") : formatoFecha += dia +\"/\";\n        mes < 10 ? formatoFecha += (\"0\"+mes+\"/\") :  formatoFecha += mes + \"/\";\n        formatoFecha += anio;\n        return formatoFecha;\n    }\n    const handleAbrirCamera = async (tipoFoto: number) =>{\n        setLoading(true);\n        asignarCalidad(50);\n        modificarTamanio(false);\n        await takePhoto()\n            .then(async (result) => {\n                setLoading(true);\n                agregarImagenEncode(result.webPath + \"\", tipoFoto);\n            })\n            .catch((err) => {\n                let errorType = err.message + \"\";\n                if (errorType.includes(\"denied\")) {\n                    setMensaje(\"La aplicación no tiene permisos para usar la cámara\")\n                }                \n            }).finally(() => { setLoading(false) })\n    }\n    const agregarImagenEncode = async ( imgDir: string, tipoFoto: number ) =>{\n        await obtenerBase64(imgDir).then((result) => {\n            console.log(String(result).slice(50));\n            //FIXME: se cambia por encode universal            \n            setIndexFoto(arregloFotos.length);\n            setFotoActiva(imgDir);\n            setArregloFotos([...arregloFotos,String(result)]);\n            setArregloFotosVista([...arregloFotosVista,imgDir]);\n        }).finally(() => { setLoading(false) })\n        \n    }\n    const guardarMulta = async( ) =>{\n        //NOTE: Mandamo a Generar y cotizar la multa\n        try{\n            setLoading(true);\n            setTimeout(()=>{\n                if(loading){\n                    throw 0;\n                }\n            },20000);\n            //NOTE: Obtenemos la ubicacion del dispositivo\n            await obtenerCoordenadas().then( async ( coordenadas ) => {\n                //NOTE: damos formato a las coordenadas a enviar\n                let coords = {\n                    latitude: coordenadas.latitude,\n                    longitude: coordenadas.longitude\n                }\n                await MultarToma(parseInt(datosContrato.Padron),monto,motivoInspeccion,coords, arregloFotos/*Fotos*/)\n                .then(()=>{\n                    setTipoMensaje(\"Mensaje\");\n                    setMensaje(\"Multa guardada\");\n                })\n                .catch(( error )=>{\n                    setTipoMensaje(\"Mensaje\");\n                    setMensaje(error.message);\n                }).finally(()=>{\n                    setLoading(false);\n                });\n            }).catch((error)=>{\n                console.log(error);\n                setLoading(false);\n                setTipoMensaje(\"Mensaje\");\n                setMensaje(`Tiempo de espera agotado.\n                Asegúrese de activar la ubicación del dispositivo`);\n            });\n        }catch( error ){\n            console.log(error);\n            setLoading(false);\n            setTipoMensaje(\"Mensaje\");\n            setMensaje(`Tiempo de espera agotado.\n            Asegúrese de activar la ubicación del dispositivo`);\n        }\n    }\n    const validarCampos = async () =>{\n        //Validamos que las fotos no esten vacias\n        let error = \"\";\n        (monto < 1 || monto >= 5000) ? error +=\"M,\" : error+=\"\";\n        console.log(\"Errores encontrados: \" + error );\n        if( error == \"\" ){\n            if(monto >= 5000 ){\n                setTipoMensaje(\"Mensaje\");\n                setMensaje(\"El monto excede el máximo permitido\");\n                setErrorCampos(true);\n                return;\n            }\n            if(motivoInspeccion != \"\"){\n                //NOTE: Creamosel objeto que se va a enviar\n                setErrorCampos(false);\n                await guardarMulta(/* FIXME: las imagenes*/);\n            }else{\n                setTipoMensaje(\"Mensaje\");\n                setMensaje(\"Favor de ingresar el motivo del corte\");\n                setErrorCampos(true);\n            }\n        }else{\n            //Lanzamos los errores de fotos\n        }\n    }\n    const regresar = () =>{\n        history.replace('/Multas');\n    }\n    const limpiarPantalla = () =>{\n        setFotoActiva(\"\");\n        setArregloFotos([]);\n        setArregloFotosVista([]);\n        setIndexFoto(0);\n        setBloquearCorte(true);\n        setMensaje(\"\");\n        setTipoMensaje(\"\");\n        setErrorCampos(false);\n        setErrorCarga(false);\n    } \n    //INDEV: Bloque para lanzar la camara dependiendo del tipo de foto\n    const CapturarEvidencia = () =>{\n        //NOTE: Lanzamos la camara para capturar la imagen\n        handleAbrirCamera(1);\n    } \n    const logOut = async(valido:Boolean) =>{\n        if (valido) {\n            setTipoMensaje(\"Sesión no valida\");\n            setMensaje(\"Inicie sesión por favor\\nRegresando...\");\n            setTimeout(async () => {\n              setTipoMensaje('Error');\n              setMensaje('');\n              await cerrarSesion()\n                .then((result) => {\n                  history.replace(\"/home\")\n                })\n            }, 2500);\n          }\n    }\n    const siguienteFoto = () =>{\n        if((indexFoto + 1) < arregloFotos.length  ){\n            //INDEV: pasamos a la siguiente \n            setFotoActiva( arregloFotosVista[indexFoto + 1] );\n            setIndexFoto(indexFoto + 1);\n        }\n    }\n    const fotoAnterior = () => {\n        if( (indexFoto - 1) >= 0 ){\n            setFotoActiva( arregloFotosVista[indexFoto - 1] );\n            setIndexFoto(indexFoto - 1);\n        }\n    }\n    return (\n        <IonPage>\n            {\n                activarMenu ? <MenuLeft /> : <></>\n            }\n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                    <IonTitle>Multar Toma</IonTitle>\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\n                        <IonMenuButton ></IonMenuButton>\n                    </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <IonCard>\n                    <IonCardHeader>\n                        <div className=\"datosContribuyete\">\n                            <h3>{ datosContrato.Nombre } </h3>\n                            <p> RFC: { datosContrato.Rfc } , Cuenta: {datosContrato.Cuenta}</p>\n                            <p>Contrato: { datosContrato.ContratoVigente }, &nbsp;&nbsp; Medidor: {datosContrato.Medidor}, &nbsp;&nbsp; Toma: {datosContrato.Toma}</p>\n                            <p>Municipio: {datosContrato.Municipio}, &nbsp;&nbsp; Localidad: { datosContrato.Localidad}</p>\n                            <p>Direccion: {datosContrato.Direccion}</p>\n                        </div>\n                    </IonCardHeader>\n                    <IonCardContent>\n                        <br />\n                        <IonItem >\n                            <IonLabel>{ `Inspector: ${datosUsuario.PersonaNombre} - ${ datosUsuario.Puesto } ` }</IonLabel>\n                        </IonItem>\n                        <br/>\n                        <IonItem >\n                            <IonLabel color = {bloquearCorte ? \"danger\" : \"primary\"} className = \"bloquearCorte\" > { ` Estado:  ${listaEstados[ parseInt(datosContrato.Estatus)-1 ]} ${modoPruebas ? \" Modo Pruebas \" :\"\" }` } </IonLabel>\n                        </IonItem>\n                        <br/>\n                        <IonItem>\n                            <IonLabel> {`Fecha: ${fechaActual} `} </IonLabel>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>{`Monto: $ 4,481.00`}</IonLabel>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel> Tipo de inspección </IonLabel>\n                            <IonSelect disabled interface = \"action-sheet\" value = {tipoInspeccion} onIonChange = { ( e )=>{ }} >\n                                <IonSelectOption value = {1} > Multa </IonSelectOption>\n                            </IonSelect>\n                        </IonItem>\n                        <IonItem>\n                            <IonTextarea disabled = {false} placeholder = \"Motivo de la Multa\" className = {errorCampos ? \"inputBorderError\":\"inputBorder\"} onIonChange = {e=>{setMotivoInspeccion(String(e.detail.value))}} > </IonTextarea>   \n                        </IonItem>\n                        {\n                        /*<IonItem>\n                            <IonInput type=\"number\" disabled = {true} value={monto} placeholder = \"$ 4,481.00\" className = { String(errorImagenes).includes(\"M,\") ? \"inputBorderError\" : \"inputBorder\" } onIonChange = { e =>{setMonto(parseInt(String(e.detail.value)))} } ></IonInput>\n                        </IonItem>*/\n                        }\n                        <br/>\n                        <IonGrid>\n                            {/**INDEV: Se cambio por un boton */}\n                    <IonButton expand=\"block\" color=\"danger\" onClick={() => { setMostrarSlide(true) }} > Evidencias <IonIcon slot=\"end\" icon={cameraOutline} ></IonIcon> </IonButton>\n                    </IonGrid>\n                        <IonGrid>\n                            <IonRow>\n                                <IonCol size=\"6\" className = \"center\" >\n                                    <IonButton expand = \"block\" color=\"secondary\" onClick = {regresar}>\n                                    <IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon>\n                                        Regresar\n                                    </IonButton>\n                                </IonCol>\n                                <IonCol size=\"6\" className = \"center\" >\n                                    <IonButton expand = \"block\" disabled = { false/** NOTE: default permite guardar varias multas */ } color=\"danger\" onClick={validarCampos}>\n                                        Guardar\n                                        <IonIcon icon={saveOutline} slot=\"end\"></IonIcon>\n                                    </IonButton>\n                                </IonCol>\n                            </IonRow>\n                        </IonGrid>\n                </IonCardContent>\n                </IonCard>\n                {/**INDEV: Parte del modal de evidencias */}\n                <IonModal ref={referenciaModal} isOpen={mostrarSlide} >\n                    <IonHeader>\n                        <IonToolbar>\n                            <IonTitle className=\"center\" > Evidencias </IonTitle>\n                        </IonToolbar>\n                    </IonHeader>\n                    <IonContent >\n                        <IonGrid fixed = { true } >\n                            <IonRow className = \"centrarImagen cabecera\" >\n                                <IonCol className= \"centrarIconos\" > Lista de imagenes </IonCol>\n                            </IonRow>\n                            <IonRow className=\"media\" >\n                                <IonCol size=\"2\" className= \"centrarIconosTest\" >\n                                    <IonIcon onClick={ fotoAnterior } size=\"large\" icon={arrowBackCircle} ></IonIcon></IonCol>\n                                <IonCol size=\"8\" className=\"centrarIconos\" >\n                                    <IonImg className=\"imgTotal\" src = { fotoActiva == \"\" ? foto : fotoActiva } ></IonImg>\n                                </IonCol>\n                                <IonCol size=\"2\" className= \" centrarIconos\" >\n                                    <IonIcon onClick={  siguienteFoto } size=\"large\" icon={arrowForwardCircle} ></IonIcon>\n                                </IonCol>\n                            </IonRow>\n                            <IonRow className = \"centrarImagen cabecera\">\n                                <IonCol className= \"centrarIconos centrarDatos\" >\n                                    <IonButton expand=\"block\" color=\"danger\" >Borrar</IonButton>\n                                </IonCol>\n                                <IonCol className= \"centrarIconos centrarDatos\" >\n                                    <IonButton expand=\"block\" color=\"success\" onClick={CapturarEvidencia} >Capturar</IonButton>\n                                </IonCol>\n                            </IonRow>\n                        </IonGrid>\n                    </IonContent>\n                    <IonButton expand=\"block\" className = \"bottom\" onClick={ ()=>{setMostrarSlide(false)} } > <IonIcon icon={arrowBackCircleOutline} size = \"large\" slot=\"start\"></IonIcon> Regresar</IonButton>\n                </IonModal>\n                <IonLoading \n                    cssClass=\"my-custom-class\"\n                    isOpen={ loading }\n                    onDidDismiss={() => { setLoading(false); }}\n                    message=\"Por favor espere\"\n                />\n                <IonAlert\n                    cssClass=\"my-custom-class\"\n                    header={tipoMensaje}\n                    message={mensaje}\n\n                    isOpen={mensaje.length > 0}\n                    backdropDismiss={false}\n                    buttons={[{ text: 'Aceptar', \n                        handler: () => { \n                            if(mensaje == \"Multa guardada\"){\n                                limpiarPantalla();\n                                extraerDatos();\n                            }else if( mensaje == \"La sesion del usuario a caducado\" ){ //NOTE: regresamos a la pantalla de inicio\n                                //FIXED: cerramos la sesion y regresamos a el login\n                                logOut(true);\n                            }\n                        setMensaje(\"\");\n                    }}]}\n                />\n            </IonContent>\n        </IonPage>\n    );\n}\n\nexport default RealizarMulta;","import { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport Home from './pages/Home';\nimport TomaDatos from './pages/form-datos-toma/form-datos-toma.page'\nimport CapturaLectura from './pages/captura-de-lectura/captura-de-lectura.page'\nimport HistorialLecturas from './pages/historial-lecturas/historial-lecturas.page'\nimport EditarLectura from './pages/editar-lecturas-agua/editar-lecturas-agua.page'\nimport Reportes from './pages/reportes/reportes.page';\nimport ReportesContrato from './pages/buscar-contrato-reporte/buscar-contrato-reporte';\n//import HistorialReportes from './pages/historial-reportes/historial-reportes.page';\n//import DetallesHistorial from './pages/detalle-reporte/detalle-reporte.page';\nimport DatosContribuyente from './pages/datos-contribuyente/datos-del-contribuyente';\nimport PrincipalCortes from './pages/captura-cortes/buscar-contrato';\nimport RealizarCorte from './pages/realizar-corte/realizar-corte';\nimport BuscarCorte from './pages/buscar-corte/buscar-corte';\nimport MultarToma from './pages/multar-toma/multar-toma.page';\nimport RealizarMulta from './pages/Realizar-multa/realizar-multa.page';\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nconst App: React.FC = () => (\n  <IonApp>\n    <IonReactRouter>\n      <IonRouterOutlet>\n        <Route exact path=\"/home\">\n          <Home />\n        </Route>\n        <Route exact path=\"/\">\n          <Redirect to=\"/home\" />\n        </Route>\n        <Route exact path = \"/form-datos-toma.page\">\n          <TomaDatos />\n        </Route>\n        <Route exact path = \"/captura-de-lectura.page\">\n          <CapturaLectura/>\n        </Route>\n        <Route exact path = \"/historial-lecturas.page\">\n          <HistorialLecturas/>\n        </Route>\n        <Route exact path = \"/editar-lecturas-agua.page\">\n          <EditarLectura/>\n        </Route>\n        <Route exact path = \"/datos-contribuyente.page\">\n          <DatosContribuyente/>\n        </Route>\n        <Route exact path = \"/buscar-contrato\">\n          <PrincipalCortes/>\n        </Route>\n        <Route exact path = \"/realizar-corte\">\n          <RealizarCorte />\n        </Route>\n        <Route exact path = \"/buscar-corte\" >\n          <BuscarCorte />\n        </Route>\n        <Route exact path = \"/reportes.page\">\n          <Reportes />\n        </Route>\n        <Route exact path = \"/ContratosReportes\" >\n          <ReportesContrato />\n        </Route>\n        <Route exact path = \"/Multas\" >\n          <MultarToma />\n        </Route>\n        <Route exact path = \"/RealizarMulta\" >\n          <RealizarMulta />\n        </Route>\n      </IonRouterOutlet>\n    </IonReactRouter>\n  </IonApp>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t142,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t143,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t144,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t145,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t146,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t147,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t148,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t149,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t150,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t151,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t152,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t153,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t154,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t155,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t156,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t157,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t158,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t159,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t160,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t161,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t162,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t163,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t164,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t165,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t166,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t167,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t168,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t169,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t170,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t171,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t172,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t173,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t174,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t175,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t176,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t177,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t178,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t179,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t180,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t181,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t182,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t183,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t184,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 92;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t185,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 94;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}