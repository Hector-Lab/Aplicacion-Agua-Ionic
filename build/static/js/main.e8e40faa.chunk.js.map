{"version":3,"sources":["controller/storageController.ts","controller/apiController.ts","api/api-laravel.service.ts","pages/Home.tsx","components/left-menu.tsx","pages/form-datos-toma/form-datos-toma.page.tsx","utilities.ts","pages/captura-de-lectura/captura-de-lectura.page.tsx","pages/historial-lecturas/historial-lecturas.page.tsx","pages/editar-lecturas-agua/editar-lecturas-agua.page.tsx","pages/reportes/reportes.page.tsx","pages/buscar-contrato-reporte/buscar-contrato-reporte.tsx","pages/datos-contribuyente/datos-del-contribuyente.tsx","pages/captura-cortes/buscar-contrato.tsx","pages/realizar-corte/realizar-corte.tsx","pages/buscar-corte/buscar-corte.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object"],"names":["restoreUser","remenberMe","localStorage","getItem","value","pass","user","remember","removeItem","guardarDatosCliente","basicData","recordar","setItem","contrasenia","usuario","String","idUsuario","cliente","token","userName","console","log","getUsuario","obtenerDatosCliente","guardarContratos","contratos","guardarDatosLectura","idLectura","contribuyente","contratoVigente","medidor","getDatosLecturaStorage","nCliente","extraerDatosEditarLectura","contrato","obtenerDatosClienteEditar","datosLectura","idConsulta","cerrarSesion","a","verifyingSession","setContribuyenteBuscado","setPuntero","getPuntero","cursor","puntero","Number","isNaN","setNumeroPaginas","getNumeroPaginas","noPages","pages","getLogoStorage","setLogoStorage","logoEncode","setClienteNombreCorto","clienteNombreCorto","getClienteNombreCorto","setContribuyente","getContribuyente","clearState","setPunteroBusqueda","getPunteroBusqueda","data","getPaginasBusqueda","setCuentasPapas","papas","getCuentasPapas","setContratoCorte","item","getContratoCorte","getIdUsuario","service","axios","post","headers","date","Date","netwokError","Error","sesionNotValidError","failedLoginError","userNotValidError","lecturaCodeError","noRowSelect","LecturaNull","LecturaMenor","mesMayor","mesRegistrado","anioMayor","anioRegistrado","mesIgual","API223","APIError","errorCarga","errorImagenes","ErrorInsertar","Login","password","remerber","acceso","passwd","getAuth","result","Status","datosUsuario","NombreCompleto","verificarUsuarioLecturista","verified","conectionError","userData","datos","buscarSectores","datosConsulta","Sectores","extraerDatosLectura","keyLectura","extraesDatosLectura","tipoLectura","ValorLectura","Valor","guardarCaptura","datosCaptura","validarDatosLectura","enviarDatosLectura","anomalia","parseInt","lectura","arrayAnios","mesActual","getMonth","isInteger","NaN","lecturaActual","consumo","consumoFinal","anioSeleccionado","indexAnio","anio","comparaMes","mesCaptura","comparaAnio","mesLectura","anhioSeleccionado","anhioCaptura","anhioActual","getFullYear","idToma","lecturaAnterior","fechaCaptura","latitud","Latidude","longitud","Longitude","tipoCoordenada","fotos","arregloFotos","ruta","route","guardarDatosLecturaV2","code","Mensaje","message","getDatosLecturaEditar","extraerDatoseditar","obtenerContribuyente","busqueda","offset","sector","mes","datoBusqueda","a_no","Offset","obtenerDatosSectorPalabraClave","extraerContribuyente","mensaje","Array","isArray","obtenerTotalDatosSectores","extraerNumeroItems","length","items","cantidad","lecturasPorSectorPage","Sector","buscarLecturasPorSector","Papas","JSON","stringify","legth","obtenerPromedioConsumo","extraerPromedioContribuyente","Math","round","obtenerLogo","obtenerLogoCliente","logo","Data","obtenerDatosContribuyente","idBusqueda","extraerContactoContribuyente","Code","Contribuyente","actualizarContribuyente","contacto","id","telefono","email","guardarContribuyente","error","errorMessage","errorCode","typeError","includes","verifyCameraPermission","AndroidPermissions","checkPermission","PERMISSION","CAMERA","hasPermission","verifyGPSPermission","ACCESS_COARSE_LOCATION","solicitarPermisos","requestPermissions","obtenerPromedioEditar","padron","Cliente","Padron","Lectura","buscarContrato","Contrato","buscarPorContrato","buscarPorMedidor","verificarDatosCoutaFija","consumoData","guardarCuotaFija","Consumo","guardarCoutaFijaV2","obtenerDatosCorte","Usuario","obtenerDatosContratoCorte","DatosContrato","push","ListaCortes","Mes","Anio","listarCortesUsuario","cortes","ContratosListaContratoReporte","buscarContratoReporte","guardarReporteV2","Reporte","Calle","Colonia","Numero","Descripcion","Latitud","Longitud","Fotos","FallaAdministrativa","Estatus","guardarReporte","buscarMedidorSinFiltro","clave","realizarReporteMedidor","configuracionCuotaFija","obtenerConfiguracion","rawConfiguracion","Configuracion","EnviarCorte","datosCorte","Motivo","Persona","Estado","Ejercicio","Evidencia","RealizarCorteV2","resultCorte","jsonError","parse","historialLecturas","datosFecha","ObtenerHistorialLecturas","resultHistorial","SplashScreen","Plugins","Home","history","useHistory","useState","User","setUserName","passwors","setPassword","loading","setLoading","setMessage","setRemember","useEffect","hide","handleRequestPermissions","recordarCredenciales","useIonViewWillEnter","validateUserData","setTimeout","then","replace","catch","err","finally","color","fullscreen","class","className","src","type","placeholder","onIonChange","e","detail","slot","checked","onClick","cssClass","isOpen","onDidDismiss","header","MenuLeft","selectedIndex","setSelectedIndex","setLogo","appPages","title","selects","icon","water","path","reader","construct","cutOutline","timerOutline","logOut","itemSelected","cargarLogo","dir","window","location","pathname","toString","split","selected","undefined","map","pageIndex","index","side","menuId","contentId","name","button","ios","md","FormDatosTomaPage","setUser","sectores","setSectores","idSector","setIdSector","lecturas","setLecuras","typeErro","setTypeError","permissions","hideAlertButons","setHideAlertbuttons","block","setBlock","tipoMessage","setTipoMessage","tokenExpired","setTokenExpired","textoBusqueda","setTextoBusqueda","serched","setSerched","paginas","setPaginas","showPagination","setShowPagination","nombreCliente","setNombreCliente","setBusqueda","filtro","setFiltro","placeHolder","setPlaceHolder","alertButtons","text","handler","cargarSectores","buscarPorSector","handle","activarMenu","setActivarMenu","isSessionValid","valid","nombreCorto","prepararPantalla","camera","gps","storageUser","sessionValid","useIonViewWillLeave","expired","abrirCapturaDatos","metodo","esPapa","punteroBuscarPorSector","handleSector","setSector","punteroBuscarPorClave","porContrato","zeroFill","porMedidor","number","width","onIonCancel","interface","filter","size","texto","shape","searchCircle","disabled","cancelText","itemIndex","arrowBackOutline","arrowForwardOutline","arrayData","estatus","cobro","leyendaCobro","functionValidarLectura","M_etodoCobro","cuentaPapa","ContratoVigente","Medidor","Toma","style","fontsize","backdropDismiss","buttons","useTakePhoto","getPhoto","useCamera","takePhoto","resultType","CameraResultType","Uri","source","CameraSource","Camera","quality","cameraPhoto","generarFechas","listaMeses","listaAnios","generarAnios","obtenerBase64","leerArchivo","fetch","file","blob","blobFile","convertBase64","imgEncode","Promise","resolve","reject","FileReader","onerror","onloadend","baseSplit","readAsDataURL","defaultAnio","menorAnio","anioMaximo","idAnio","obtenerCoordenadas","Geolocation","getCurrentPosition","coords","CapturaDeLectura","Object","datosContribuyente","setDatosContribuyente","setLecturaAnterior","anomalias","setAnomalias","setConsumo","useIonToast","setlistaMeses","mesDefautl","setMesDefault","indexMes","setIndexMes","anioActual","setAnioActual","indexAnioActual","setIndexAnioActual","setAnioLectura","setListaAnios","bloquearCampos","setBloquearcampos","btnInactivo","setComparaMes","setComparaAnio","seleccionAnomalia","setSeleccionAnomalia","setLecturaActual","setTipoLectura","setMesLectura","refreshControl","setRefreshControl","defaultLectura","setDefaultLectura","defaultAnomalia","setDefaultAnomalia","enbleButtons","setEnbleButtons","promedioLectura","setPromedioLectura","toma","setToma","municipio","setMunicipio","localidad","setLocalidad","direccion","setDireccion","bloqueoAnomalias","setBloqueoAnomalias","consumoMinimo","setConsumoMinimo","fija","setFija","sinFoto","fotoMedidorEncode","setFotoMedidorEncode","fotoMedidorPreview","setFotoMedidorPreview","fotoFachadaEncode","setFotoFachadaEncode","fotoFachadaPreview","setFotoFachadaPreview","fotoCalleEncode","setFotoCalleEncode","setFotoCallePreview","errorFotoUI","setErrorFotosU","fecha","cargarContribuyente","useIonViewDidEnter","extraerLectura","promedio","parseFloat","toFixed","Municipio","Localidad","Direccion","cargarFechas","LecturaActual","BloquearCampos","Anomalias","anioDefault","Meses","Anios","lecturaCasoUno","lecturaCasoDos","lecturaCasoTres","anioResult","meses","anhioLista","esteMes","anios","generarAniosPosterior","mesResult","mesComparacion","anioComparar","mensajeConsumoCero","handleBtnGuardar","validarConsumo","procesoConsumo","datosCapturados","latitude","longitude","guardarDatosCuotaFija","LecturaAnterior","handleAbrirCamera","tipoFoto","agregarImagenEncode","webPath","imgDir","formatindex","numIndex","consumoProcesado","pencil","consumido","calcularConsumo","displayFormat","min","max","ActualizarAdelante","ActualizarAtras","Minima","handleSelectAnomalia","descripci_on","selectedText","chevronBackCircleOutline","errorFotos","saveOutline","HistorialLecturas","setAnios","setMeses","setAnioSeleccionado","mesSeleccionado","setMesSeleccionado","listaReportes","setListaReportes","setMensaje","tipoMensaje","setTipoMensaje","aniosMeses","extraerHistorial","fechaAnio","fechas","expand","flex","justifyContent","borderWidth","marginTop","Nombre","Fecha","EditarLecturaAgua","setBloquearDatos","anhioLectura","setAnhioLectura","validarAnhio","setValidarAnhio","validarMes","setValidarMes","listaAnhios","setListaAnhios","setListaMeses","tipoAnomalia","setTipoAnomalia","fechaLectura","setFechaLectura","showToast","setShowToast","connectionError","setConnectionError","setTokenExpered","traceError","setTraceError","lecturaRegistrada","setLecturaRegistrada","alertRetriButtons","cargarDatos","guardarLectura","generarFechasAnhios","A_no","filtrarLectura","bloqueoCampos","goBack","Observaci_on","FechaLectura","handleCalcularconsumo","Padr_onAgua","consumoCalculado","idPadron","regresarPantalla","Exterior","Interior","selectAnomalia","duration","position","checkmarkCircleOutline","Reportes","setContrato","setArregloFotos","setFotoActiva","setFotosCodificadas","setActivarGaleria","ErrorUI","setErrorUI","colonia","setColonia","calle","setCalle","numero","setNumero","descripcion","setDescripcion","fotoCallePreview","buttonsErrorConnection","enviarReporte","jsonImagenes","coordenadas","limpiarPantalla","lanzarMensaje","paddingLeft","paddingRight","trim","ListaContratoReportes","tokenExpirado","setTokenExpirado","setClienteNombre","setUsuario","tipoFiltro","setTipoFiltro","placeHolderFiltro","setPlaceHolderFiltro","palabraClave","setPalabraClave","botonReintentar","setBotonReintentar","setTipoError","cargando","setCargando","listaContratos","setListaContratos","listaEstatus","useIonViewDidLeave","verificarSession","valido","irReportar","idContrato","pablabraClave","buscarMedidor","realizarBusqueda","DatosContribuyente","setTelefono","setEmail","typeMessage","setTypeMessage","hideButtons","setHideButtons","handleBtnGuardarContacto","Celular","Email","sesionValid","saveSharp","PrincipalCortes","sesionValida","setSessionValida","PorContrato","mostrarDatosContrato","RealizarCorte","datosContrato","setDatosContrato","setDatosUsuario","fechaActual","setFechaActual","tipoInspeccion","setTipoInspecion","arregloFotosVista","setArregloFotosVista","fotoActiva","indexFoto","setIndexFoto","motivoInspeccion","setMotivoInspeccion","ejercicio","setEjercicio","bloquearCorte","setBloquearCorte","setErrorCarga","errorCampos","setErrorCampos","pressentToast","fotoTomaEncode","setFotoTomaEncode","fotoTomaPreview","setFotoTomaPreview","setErrorImagenes","extraerDatos","dia","getDate","formatoFecha","guardarInspeccion","validarCampos","Rfc","Cuenta","PersonaNombre","Puesto","fotosTemporal","fotosEncoded","checkmarkCircle","borrarFotoEvidencia","BuscarCorte","mesSelecionado","arregloCortes","setArregloCortes","listaEstados","preparaPantalla","obtenerCortes","FechaCorte","App","exact","to","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackAsyncContext","req","__webpack_require__","o","ids","keys","module","exports"],"mappings":"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","file":"static/js/main.e8e40faa.chunk.js","sourcesContent":["import { lockClosed } from \"ionicons/icons\";\n\n//controlador del LocalStorage\nexport function restoreUser() {\n    let remenberMe = localStorage.getItem(\"@Storage:recordarUsuario\");\n    if (remenberMe != null) {\n        let value = remenberMe == \"true\";\n        if (value) {\n            let user = {\n                pass: localStorage.getItem(\"@Storage:contraseniaX\"),\n                user: localStorage.getItem(\"@Storage:usuario\"),\n                remember: value\n            }\n            return user;\n        } else {\n            localStorage.removeItem('@Storage:contraseniaX');\n            localStorage.removeItem('\"@Storage:usuario\"');\n            let user = {\n                pass: '',\n                user: '',\n                remember: value\n            }\n            return user;\n        }\n    } else {\n        let user = {\n            pass: '',\n            user: '',\n            remember: false\n        }\n        return user;\n    }\n}\nexport function guardarDatosCliente(basicData: { usuario: string, idUsuario: Number, cliente: Number, token: string, recordar: boolean, contrasenia: string, userName: string }) {\n    basicData.recordar ? localStorage.setItem(\"@Storage:contraseniaX\", basicData.contrasenia) : localStorage.removeItem(\"@Storage:contraseniaX\");\n    localStorage.setItem(\"@Storage:usuario\", basicData.usuario);\n    localStorage.setItem(\"@Storage:idUsuario\", String(basicData.idUsuario));\n    localStorage.setItem(\"@Storage:cliente\", String(basicData.cliente));\n    localStorage.setItem(\"@Storage::userToken\", basicData.token);\n    localStorage.setItem(\"@Storage:recordarUsuario\", String(basicData.recordar));\n    localStorage.setItem(\"@Storage:userName\", basicData.userName);\n    console.log(basicData.userName)\n}\nexport function getUsuario() {\n    return localStorage.getItem(\"@Storage:usuario\");\n}\nexport function obtenerDatosCliente() {\n    let result = {\n        cliente: localStorage.getItem(\"@Storage:cliente\"),\n        idUsuario: localStorage.getItem(\"@Storage:idUsuario\"),\n        token: localStorage.getItem(\"@Storage::userToken\")\n    }\n    return result;\n}\nexport function guardarContratos(contratos: string) {\n    localStorage.setItem(\"@Storage:contratos\", contratos);\n}\nexport function guardarDatosLectura(idLectura: string, contribuyente: string, contratoVigente: string, medidor: string) {\n    localStorage.setItem('@Storage:idLectura', idLectura);\n    localStorage.setItem('@Storage:nContribuyente', contribuyente);\n    localStorage.setItem('@Storage:contratoVigente', contratoVigente);\n    localStorage.setItem('@Storage:medidor', medidor);\n    return true;\n}\nexport function getDatosLecturaStorage() {\n    let lectura = {\n        idLectura: localStorage.getItem('@Storage:idLectura'),\n        contribuyente: localStorage.getItem('@Storage:nContribuyente'),\n        contratoVigente: localStorage.getItem('@Storage:contratoVigente'),\n        medidor: localStorage.getItem('@Storage:medidor'),\n        //NOTE: TESTING: datos para el guardado de la lectura\n        nCliente: localStorage.getItem(\"@Storage:cliente\"),\n        token: localStorage.getItem(\"@Storage::userToken\"),\n        idUsuario: localStorage.getItem(\"@Storage:idUsuario\")\n    }\n    return lectura;\n}\nexport function getContratos() {\n    let datos = localStorage.getItem(\"@Storage:contratos\");\n    return datos;\n}\nexport function guardarDatosEditarLectura(idLectua: string, contrato: string, contribuyente: string, medidor: string) {\n    localStorage.setItem('@Storage:editarIdLectura', idLectua);\n    localStorage.setItem('@Storage:editarContratoVigente', contrato);\n    localStorage.setItem('@Storage:editarNContribuyente', contribuyente);\n    localStorage.setItem('@Storage:editarMedidor', medidor);\n    return true;\n}\nexport function extraerDatosEditarLectura() {\n    let result = {\n        idLectura: localStorage.getItem('@Storage:editarIdLectura'),\n        contrato: localStorage.getItem('@Storage:editarContratoVigente'),\n        contribuyente: localStorage.getItem('@Storage:editarNContribuyente'),\n        medidor: localStorage.getItem('@Storage:editarMedidor')\n    }\n    return result;\n}\nexport function obtenerDatosClienteEditar() {\n    let lecturaData = {\n        idConsulta: localStorage.getItem('@Storage:editarIdLectura'),\n        nCliente: localStorage.getItem('@Storage:cliente'),\n    }\n    return { datosLectura: lecturaData, token: localStorage.getItem('@Storage::userToken') };\n}\nexport async function cerrarSesion() {\n    //Olvidando credenciales\n    let remenber = localStorage.getItem(\"@Storage:recordarUsuario\");\n    if (remenber == \"false\") {\n        localStorage.removeItem(\"@Storage:usuario\");\n        localStorage.removeItem(\"@Storage:idUsuario\");\n        localStorage.removeItem(\"@Storage:cliente\");\n        localStorage.removeItem(\"@Storage::userToken\");\n        localStorage.removeItem(\"@Storage:contraseniaX\");\n    } else {\n        localStorage.removeItem(\"@Storage:idUsuario\");\n        localStorage.removeItem(\"@Storage:cliente\");\n        localStorage.removeItem(\"@Storage::userToken\");\n    }\n    return true\n}\nexport function verifyingSession() {\n    /* localStorage.setItem(\"@Storage::userToken\",\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczpcL1wvYXBpLnNlcnZpY2lvZW5saW5lYS5teFwvYXBpLW1vdmlsXC9sb2dpbi1wcmVzaWRlbnRlUHJ1ZWJhIiwiaWF0IjoxNjIxMzY1OTk0LCJleHAiOjE2MjE0MDE5OTQsIm5iZiI6MTYyMTM2NTk5NCwianRpIjoiV0w3VE9EeUZpQkhWZzZqRSIsInN1YiI6MzgwMCwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.5aG5sSnugBRIPvmj0QcbhHuqxPfBRkwrxN74bGz1uho\");\n     */let token = localStorage.getItem(\"@Storage::userToken\");\n    return token != null;\n}\nexport function obtenerIdReporte() {\n    let reporte = {\n        userName: localStorage.getItem(\"@Storage:userName\"),\n        id: localStorage.getItem(\"@Storage:idReporte\")\n    }\n    return reporte;\n\n}\nexport function obtenerToken() {\n    return String(localStorage.getItem(\"@Storage::userToken\"));\n}\nexport function guardarIdReporte(id: number) {\n    localStorage.setItem(\"@Storage:idReporte\", String(id));\n}\nexport function contribuyenteBuscado() {\n    let data = localStorage.getItem(\"@Storage:serched\");\n    if (data == null) {\n        return false;\n    } else {\n        return data === \"true\";\n    }\n}\nexport function setContribuyenteBuscado(value: Boolean) {\n    localStorage.setItem(\"@Storage:serched\", String(value));\n}\nexport function setPuntero(value: number){\n    localStorage.setItem(\"@Storage:cursor\",String(value))\n}\nexport function getPuntero(){\n    let cursor =  localStorage.getItem(\"@Storage:cursor\");\n    let puntero = Number(cursor);\n    if(isNaN(puntero)){\n        return 0;\n    }else{\n        return puntero\n    }\n}\nexport function setNumeroPaginas(value: number){\n    localStorage.setItem(\"@Storage:pages\",String(value));\n}\nexport function getNumeroPaginas(){\n    let noPages = localStorage.getItem(\"@Storage:pages\");\n    let pages = Number(noPages);\n    if(isNaN(pages)){\n        return 0\n    }else{\n        return pages;\n    }\n}\nexport function deleteContratos(){\n    localStorage.removeItem(\"@Storage:contratos\");\n}\nexport async function getLogoStorage(){\n    return localStorage.getItem(\"@Storage:logoCliente\");\n}\nexport async function setLogoStorage(logoEncode: string){\n    localStorage.setItem(\"@Storage:logoCliente\",logoEncode);\n}\nexport  function setClienteNombreCorto(clienteNombreCorto: string){\n    localStorage.setItem(\"@Storage:clienteNombreCorto\",clienteNombreCorto)\n}\nexport  function getClienteNombreCorto() {\n    return localStorage.getItem(\"@Storage:clienteNombreCorto\");\n}\nexport  function setContribuyente(contribuyente: string) {\n    localStorage.setItem(\"@Storage:idContribuyente\",contribuyente);\n}\nexport  function getContribuyente() {\n    return localStorage.getItem(\"@Storage:idContribuyente\");\n}\nexport function setSector(sector: string) {\n    localStorage.setItem(\"@Storage:idSector\",sector);\n}\nexport function getSector() {\n    return localStorage.getItem(\"@Storage:idSector\");\n}\nexport function clearState(){\n    localStorage.removeItem(\"@Storage:idSector\");\n    localStorage.removeItem(\"@Storage:cursor\");\n    localStorage.removeItem(\"@Storage:pages\");\n    localStorage.removeItem(\"@Storage:lecturaDesde\");\n    localStorage.removeItem(\"@Storage:lecturaHasta\");\n    localStorage.removeItem(\"@Storage:reporteDesde\");\n    localStorage.removeItem(\"@Storage:reporteHasta\");\n}\nexport function setFechasHistorialLectura (desde: string, hasta: string) {\n    localStorage.setItem(\"@Storage:lecturaDesde\",desde);\n    localStorage.setItem(\"@Storage:lecturaHasta\",hasta);\n}\nexport function getFechasHistorialLectura(){\n    let datos = localStorage.getItem(\"@Storage:lecturaDesde\");\n    if(datos != null){\n        let data = {\n            desde: localStorage.getItem(\"@Storage:lecturaDesde\"),\n            hasta: localStorage.getItem(\"@Storage:lecturaHasta\")\n        }\n        return data;\n    }else{\n        return null;\n    }\n}\nexport function setFechasHistorialReportes(desde: string, hasta: string){\n    localStorage.setItem(\"@Storage:reporteDesde\",desde);\n    localStorage.setItem(\"@Storage:reporteHasta\",hasta);\n}\nexport function getFechasHistorialReportes(){\n    let dato = localStorage.getItem(\"@Storage:reporteDesde\");\n    if(dato!=null){\n        let data = {\n            desde: localStorage.getItem(\"@Storage:reporteDesde\"),\n            hasta: localStorage.getItem(\"@Storage:reporteHasta\")\n        }\n        return data;\n    }else{\n        return null;\n    }\n}\nexport function setPunteroBusqueda(puntero: number){\n    console.log(puntero)\n    localStorage.setItem(\"@Storage:punteroBusqueda\",String(puntero));\n}\nexport function getPunteroBusqueda(){\n    let data = localStorage.getItem(\"@Storage:punteroBusqueda\");\n    let puntero = Number(data);\n    if(isNaN(puntero)){\n        return 0;\n    }else{\n        return puntero;\n    }\n}\nexport function setPaginasBusqueda(paginas: number){\n    localStorage.setItem(\"@Storage:paginasBusqueda\",String(paginas));\n}\nexport function getPaginasBusqueda(){\n   let data = localStorage.getItem(\"@Storage:paginasBusqueda\");\n   let pages = Number(data);\n   if(isNaN(pages)){\n       return 0;\n   }else{\n        return pages;\n   }\n}\nexport function setInspeccionPadronAgua(contribuyente: string){\n    localStorage.setItem(\"@Storage:inspeccionPadron\",contribuyente);\n}\nexport function getInspeccionPadronAgua(){\n    return localStorage.getItem(\"@Storage:inspeccionPadron\");\n}\nexport function obtnerCliente(){\n    return localStorage.getItem(\"@Storage:cliente\")\n}\nexport function setCuentasPapas(papas:String){\n    localStorage.setItem(\"@Storage:CuentasPapas\",String(papas));\n}\nexport function getCuentasPapas(){\n    return localStorage.getItem(\"@Storage:CuentasPapas\") != null ? localStorage.getItem(\"@Storage:CuentasPapas\"): \"\";\n}\nexport function setContratoCorte(item:string){\n    localStorage.setItem(\"@Storage:ContratoCorte\",item);\n}\nexport function getContratoCorte(){\n    return localStorage.getItem(\"@Storage:ContratoCorte\") != null ? localStorage.getItem(\"@Storage:ContratoCorte\") : \"\";\n}\nexport function getIdUsuario(){\n    return localStorage.getItem(\"@Storage:idUsuario\") != null ? localStorage.getItem(\"@Storage:idUsuario\") : 0;\n}\nexport function setContratoReporte(idContrato:string){\n    localStorage.setItem(\"@Storage:reporteContrato\", idContrato );\n}\nexport function getContratoReporte( ){\n    return localStorage.getItem(\"@Storage:reporteContrato\");\n}","import { Motion } from '@capacitor/core';\nimport { AndroidPermissions } from '@ionic-native/android-permissions';\nimport { server, thermometer } from 'ionicons/icons';\nimport { Console } from 'node:console';\nimport { _private } from 'workbox-core';\nimport { APIservice } from '../api/api-laravel.service';\nimport {\n    guardarDatosCliente,\n    obtenerDatosCliente,\n    guardarContratos,\n    guardarDatosLectura,\n    getContratos,\n    obtenerDatosClienteEditar,\n    getDatosLecturaStorage,\n    setLogoStorage,\n    setClienteNombreCorto,\n    getContribuyente,\n    setContribuyente,\n    obtnerCliente,\n    obtenerToken,\n    extraerDatosEditarLectura,\n    setCuentasPapas,\n    getContratoCorte,\n    getIdUsuario,\n} from '../controller/storageController';\nimport DatosContribuyente from '../pages/datos-contribuyente/datos-del-contribuyente';\nconst service = new APIservice();\nconst date = new Date();\n//INDEV: Errores del sistema\nconst netwokError = new Error(\"Error al intentar comunicarse con la API. Verifique que su dispositivo se encuentre conectado a la red\");\nconst sesionNotValidError = new Error(\"Sesion no valida\");\nconst failedLoginError = new Error(\"Usuario y/o contraseña incorrectos\");\nconst userNotValidError = new Error(\"No puedes iniciar sesión con este usuario\");\nconst lecturaCodeError = new Error('Consulte con su administrador que el código de lecturas de agua se encuentre en el rango de 1-3');\nconst noRowSelect = new Error(\"No se encontraron registros\");\nconst LecturaNull = new Error(\"No se ha calculado el consumo\");\nconst LecturaMenor = new Error(\"La lectura actual no puede ser menor a la anterior\");\nconst mesMayor = new Error(\"Aun no puedes realizar registros para el mes seleccionado\");\nconst mesRegistrado = new Error(\"El mes seleccionado ya fue registrado\");\nconst anioMayor = new Error(\"Aun no puedes realizar registros para este año\");\nconst anioRegistrado = new Error(\"Ya no puedes realizar registros para este año\");\nconst mesIgual = new Error(\"este mes ya fue registrado\");\nconst API223 = new Error(\"Revisa que los campos esten rellenados de forma correcta\");\nconst APIError = new Error(\"Error del servidor\");\nconst atrasError = new Error(\"El mes seleccionada debe se mayor a la actual\");\nconst adelanteError = new Error(\"El mes de la lectura debe ser menor al actual\");\nconst PermissionsError = new Error(\"Para poder hacer uso de todas las funciones de la aplicaciòn por favor acepta los permisos solicitados por la misma\");\nconst errorCarga = new Error(\"Error al obtener los datos del contrato 403\");\nconst errorImagenes = new Error(\"Corte realizado\\nHubo un error al subir las imagenes\");\nconst ErrorInsertar = new Error(\"Error al insertar el registro\");\nexport async function Login(user: string, password: string, remerber: boolean) {\n    const acceso = {\n        usuario: user,\n        passwd: password\n    }\n    try {\n        let result = await service.getAuth(acceso);\n        //Verificanos si el inicio de session es valido\n        let sessionValida = result.data.Status;\n        if (sessionValida == true) {\n            let data = {\n                usuario: user,\n                cliente: result.data.cliente,\n                idUsuario: result.data.idUsuario,\n                token: result.data.token,\n                recordar: remerber,\n                contrasenia: password,\n                userName: result.data.datosUsuario.NombreCompleto\n            }\n            console.log(data.token);\n            let verified = await verificarUsuarioLecturista(data);\n            if (verified === true) {\n                return verified;\n            } else {\n                throw verified;\n            }\n        } else {\n            throw failedLoginError;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n\n}\nasync function verificarUsuarioLecturista(userData: any) {\n    try {\n        let datos = {\n            usuario: userData.idUsuario,\n            cliente: userData.cliente\n        }\n        if (datos.cliente === \"-1\") {\n            throw userNotValidError;\n        }\n        let result = await service.verificarUsuarioLecturista(datos, userData.token);\n        let esLecturista = result.data.Status;\n        if (esLecturista) {\n            guardarDatosCliente(userData);\n            return true;\n        } else {\n            throw userNotValidError;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function buscarSectores() {\n    try {\n        let basicData = obtenerDatosCliente();\n        const datosConsulta = {\n            nCliente: basicData.cliente,\n            idUsuario: basicData.idUsuario,\n        }\n        let result = await service.buscarSectores(datosConsulta, basicData.token + \"\");\n        return result.data.Sectores;\n    } catch (error) {\n        throw conectionError(error)\n    }\n}\nexport async function lecturasPorSector(sector: string) {\n    try {\n        let basicData = obtenerDatosCliente();\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        const datosConsulta = {\n            nCliente: basicData.cliente,\n            Sector: sector,\n            mes: mes,\n            a_no: anio\n        }\n        let result = await service.buscarLecturasPorSector(datosConsulta, basicData.token + \"\");\n        let mensaje = result.data.mensaje;\n        guardarContratos(JSON.stringify(mensaje));\n        if (mensaje.legth === 0 || mensaje === \"No se encontraron registros\") {\n            throw noRowSelect;\n        } else {\n            return mensaje;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function ConfiguracionEvidencias(){\n    try{\n    let{cliente,token}= obtenerDatosCliente();\n    const datosConsulta = {\n        Cliente: cliente \n    }\n    let result = await service.obtenerConfiguracionFotografia(datosConsulta,  String(token));\n    let mensaje = result.data.Mensaje;\n    if (mensaje.length === 0 || mensaje === \"No se encontraron registros\"){\n        throw noRowSelect;\n    }else {\n        return mensaje;\n    }\n    }catch (error){\n        throw conectionError(error);\n    }\n}\n\nexport async function extraerDatosLectura(keyLectura: string) {\n    try {\n        //Extrallendo los datos de la lectura\n        let basicData = obtenerDatosCliente();\n        let datos = {\n            nCliente: basicData.cliente,\n            idLectura: keyLectura\n        }\n        let result = await service.extraesDatosLectura(datos, basicData.token + \"\");\n        console.log(result);\n        let tipoLectura = result.data.ValorLectura[0].Valor;\n        if (tipoLectura != '1' && tipoLectura != '2' && tipoLectura != '3') {\n            throw lecturaCodeError\n        } else {\n            return result.data;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function guardarCaptura(datosCaptura: any) {\n    try {\n        let result = await validarDatosLectura(datosCaptura);\n        console.log(result);\n        if (result === true) {\n            //NOTE: se manda a llamar al metodo de guardado\n            let result = await enviarDatosLectura(datosCaptura);\n            return result;\n        } else {\n            throw result;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\n/**\n * Funcion para verificar los datos de al guardar la captura del agua\n */\nasync function validarDatosLectura(data: any) {\n    let anomalia = parseInt(data.anomalia);\n    let tipoLectura = data.lectura;\n    let arrayAnios = data.arrayAnios;\n    let mesActual = date.getMonth() + 2;\n    if (!Number.isInteger(anomalia)) {\n        anomalia = NaN;\n    }\n    //Validamos que la lectura no este vacia\n    if (data.lecturaActual == null) {\n        throw LecturaNull;\n    }\n    //Validamos que el consumo no sea menor a 0 \n    let consumo = parseInt(data.consumoFinal);\n    if (!isNaN(anomalia)) {\n        if (consumo < 0) {\n            throw LecturaMenor;\n        }\n    } else {\n        if (consumo <= 0) {\n            throw LecturaMenor;\n        }\n    }\n    //REVIEW: Esto creo que no es necesario\n    if (tipoLectura == 3) {\n        let anioSeleccionado = arrayAnios[data.indexAnio - 1].anio;\n        //mayor \n        if (data.comparaMes < data.mesCaptura) {\n            throw mesMayor;\n        }\n        if (data.comparaAnio < anioSeleccionado) {\n            throw anioMayor\n        }\n        //menor\n        if (data.comparaMes > data.mesCaptura) {\n            throw mesRegistrado\n        }\n        if (data.comparaAnio > anioSeleccionado) {\n            throw anioRegistrado\n        }\n        if (mesActual == 13) {\n            mesActual = 1;\n        }\n        if (mesActual == data.mesLectura) {\n            throw mesIgual\n        }\n    } else\n        if (tipoLectura == 2) {\n            let anhioSeleccionado = arrayAnios[data.indexAnio - 1].anio;\n\n            if (data.comparaMes < data.mesCaptura) {\n                throw mesMayor;\n            }\n            if (data.comparaMes > data.mesCaptura) {\n                throw mesRegistrado\n            }\n            if (data.comparaAnio < anhioSeleccionado) {\n                throw anioMayor\n            }\n            if (data.comparaAnio > anhioSeleccionado) {\n                throw anioRegistrado\n            }\n            if (data.mesCaptura >= data.comparaAnio && data.anhioCaptura >= data.comparaAnio) {\n                throw mesIgual\n            }\n\n        } else\n            if (tipoLectura == 1) {\n                let anhioSeleccionado = arrayAnios[data.indexAnio - 1].anio;\n                let mesActual, anhioActual;\n                if (data.mesCaptura > data.comparaMes) {\n                    throw mesMayor\n                }\n                if (anhioSeleccionado > data.comparaAnio) {\n                    throw anioMayor\n                }\n                if (data.mesCaptura < data.comparaMes) {\n                    throw mesRegistrado\n                }\n                if (anhioSeleccionado < data.comparaAnio) {\n                    throw anioRegistrado\n                }\n                mesActual = date.getMonth() + 2;\n                anhioActual = date.getFullYear();\n                if (mesActual == 13) {\n                    mesActual = 1;\n                    anhioActual = date.getFullYear() + 1;\n                }\n                if (mesActual == data.mesCaptura && anhioActual == data.comparaAnio) {\n                    throw mesMayor\n                }\n            }\n    return true;\n\n}\nasync function enviarDatosLectura(data: any) {\n    const datos = {\n        idToma: data.idToma,\n        cliente: data.nCliente,\n        lecturaAnterior: data.lecturaAnterior,\n        lecturaActual: data.lecturaActual,\n        consumoFinal: data.consumoFinal,\n        mesCaptura: data.mesCaptura,\n        anhioCaptura: data.anhioCaptura,\n        fechaCaptura: data.fechaCaptura,\n        anomalia: data.anomalia,\n        idUsuario: data.idUsuario,\n        latitud: data.Latidude,\n        longitud: data.Longitude,\n        tipoCoordenada: 1,\n        fotos: [],\n        arregloFotos: data.arregloFotos,\n        ruta: data.route\n    }\n    let result = await service.guardarDatosLecturaV2(datos, data.token);\n    console.log(result);\n    let code = result.data.Mensaje;\n    console.log(code);\n    let message = \"\";\n    switch (code) {\n        case 200:\n            message = \"Ok\";\n            break;\n        case 224:\n            throw new Error(\"No se pudo realizar el registro\");\n            break;\n        case 223:\n            throw API223;\n        case 400:\n            throw new Error(\"El mes ya fue capturado\");\n            break;\n        default:\n            throw APIError;\n            break;\n    }\n    return message;\n}\nexport async function obtenerSiguienteIndice(idLectura: number) {\n    let contratos = getContratos();\n    let arrayContratos = new Array;\n    let indice = -1;\n    if (contratos != null) {\n        arrayContratos = JSON.parse(contratos);\n        arrayContratos.map((item, index) => {\n            if (item.id == idLectura)\n                indice = index + 1;\n        })\n    }\n    let result = false;\n    if (indice < arrayContratos.length) {\n        let lecturaSiguiente = arrayContratos[indice];\n        result = guardarDatosLectura(lecturaSiguiente.id, lecturaSiguiente.Contribuyente, lecturaSiguiente.ContratoVigente, lecturaSiguiente.Medidor)\n    }\n    return result;\n}\n//INDEV: dando soporte a los errores\nexport async function historialFechas(fechaInicio: string, fechaFin: string) {\n    try {\n        //Obteniedo los datos para la consulta\n        let basicData = obtenerDatosCliente();\n        let data = {\n            idUsuario: basicData.idUsuario,\n            nCliente: basicData.cliente,\n            fechaInicioH: fechaInicio,\n            fechaFinH: fechaFin\n        }\n        let result = await service.extraerHistorial(data, basicData.token + \"\");\n        if (result.data.Status) {\n            return result.data;\n        } else {\n            throw noRowSelect;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function getDatosLecturaEditar() {\n    try {\n        let { datosLectura, token } = obtenerDatosClienteEditar()\n        if (token != null) {\n            let result = await service.extraerDatoseditar(datosLectura, token);\n            return result.data\n        } else {\n            throw null;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function validorDatosEditarLectura(lecturaDatos: any) {\n    if (lecturaDatos.lecturaActual == \"\" || lecturaDatos.lecturaActual == null)\n        throw LecturaNull;\n    else if (lecturaDatos.consumo < 0)\n        throw LecturaMenor;\n    else if (lecturaDatos.validarAnhio < lecturaDatos.anhioLectura)\n        throw anioMayor;\n    else if (lecturaDatos.validarAnhio > lecturaDatos.anhioLectura)\n        throw anioRegistrado;\n    else if (lecturaDatos.mesLectura < lecturaDatos.validarMes)\n        throw mesRegistrado\n    else if (lecturaDatos.mesLectura > lecturaDatos.validarMes)\n        throw mesMayor;\n    else\n        return null\n\n}\nexport async function actualizarLectura(lecturaDatos: any) {\n    try {\n        let result = await validorDatosEditarLectura(lecturaDatos);\n        let { datosLectura, token } = obtenerDatosClienteEditar();\n        if (result == null) {\n            let data = {\n                idPadronLetura: datosLectura.idConsulta,\n                idToma: lecturaDatos.idPadron,\n                cliente: datosLectura.nCliente,\n                anhioCaptura: lecturaDatos.anhioLectura,\n                consumoFinal: lecturaDatos.consumo,\n                fechaCaptura: lecturaDatos.fechaLectura,\n                lecturaActual: lecturaDatos.lecturaActual,\n                lecturaAnterior: lecturaDatos.lecturaAnterior,\n                mesCaptura: lecturaDatos.mesLectura,\n                anomalia: lecturaDatos.tipoAnomalia\n            }\n            let result = await service.actualizarDatosLectura(data, token + \"\")\n            return result.data;\n        } else {\n            throw result;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function crearReporte(data: { colonia: String, calle: String, numero: String, descripcion: String, contrato: string, fallaAdministrativa: number }) {\n    try {\n        let valid = validarDatosReporte(data);\n        if (valid) {\n            //Llamada a la API\n            let basicData = obtenerDatosCliente();\n            let datosreporte = {\n                cliente: basicData.cliente,\n                usuario: basicData.idUsuario,\n                colonia: data.colonia,\n                calle: data.calle,\n                numero: data.numero,\n                descripcion: data.descripcion,\n                contrato: data.contrato,\n                fallaAdministrativa: data.fallaAdministrativa,\n            }\n            let result = await service.crearReporte(datosreporte, basicData.token + \"\")\n            if (result.data.Status)\n                return result.data.Mensaje\n            else\n                throw new Error(result.data.Mensaje);\n        } else {\n            throw new Error(\"Los campos que presentan * son obligatorios\");\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nfunction validarDatosReporte(data: { colonia: String, calle: String, numero: String, descripcion: String, contrato: string }) {\n    if (data.colonia == \"\" || data.calle == \"\" || data.descripcion == \"\") {\n        return false\n    } else {\n        return true;\n    }\n}\nexport async function historialReportes(fechaInicio: string, fechaFin: string) {\n    try {\n        let basicData = obtenerDatosCliente();\n        let data = {\n            idUsuario: basicData.idUsuario,\n            cliente: basicData.cliente,\n            fechaInicio: fechaInicio,\n            fechaFin: fechaFin\n        }\n        let result = await service.extraerHistorialReportes(data, basicData.token + \"\");\n        if (result.data.Mensaje.length <= 0) {\n            throw noRowSelect;\n        } else {\n            return result.data.Mensaje;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function extraerReporte(id: String) {\n    try {\n        //Obteniendo datos basicos para la consulta;\n        let basicData = obtenerDatosCliente();\n        let data = {\n            cliente: basicData.cliente,\n            idUsuario: basicData.idUsuario,\n            id: id\n        }\n        let result = await service.extraerReporte(data, String(basicData.token));\n        if (result.data.Mensaje.length <= 0) {\n            throw noRowSelect;\n        } else {\n            return result.data.Mensaje;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function obtenerContribuyente(busqueda: string,offset: number,sector: String) {\n    try {\n        let { token, cliente } = obtenerDatosCliente();\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        let datos = {\n            nCliente: cliente,\n            datoBusqueda: busqueda,\n            mes: mes,\n            a_no: anio,\n            Offset: offset,\n            sector:sector\n        }\n        let result = null;\n        if(sector != \"-1\"){\n            result = await service.obtenerDatosSectorPalabraClave(datos,String(token));\n            console.log(\"Se utiliso el sector: \" + sector);\n        }else{\n            result = await service.extraerContribuyente(datos, String(token));\n        }\n        //Mensaje \"Campos vacios\", \"No se encontraron registros\"\n        let data = result.data.mensaje;\n        let isArray = Array.isArray(data);\n        if (isArray) {\n            return data;\n        } else {\n            let message = String(data);\n            throw new Error(message);\n        }\n    } catch (err) {\n        throw conectionError(err);\n    }\n}\nexport async function obtenerTotalDatosSectores(sector: string) {\n    try {\n        let basicData = obtenerDatosCliente();\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        const datosConsulta = {\n            cliente: basicData.cliente,\n            sector: sector,\n            mes: mes,\n            anio: anio\n        }\n        let result = await service.extraerNumeroItems(datosConsulta, String(basicData.token));\n        let exist = result.data.Mensaje.length;\n        if (exist >= 1) {\n            let items = result.data.Mensaje[0].cantidad;\n            let pages = items / 20;\n            let resid = pages % 1;\n            if (resid > 0) {\n                pages++;\n            }\n            return pages;\n        } else {\n            return 0;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function lecturasPorSectorPage(sector: string, offset: number,) {\n    try {\n        let basicData = obtenerDatosCliente();\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        const datosConsulta = {\n            nCliente: basicData.cliente,\n            Sector: sector,\n            mes: mes,\n            a_no: anio,\n            Offset: offset\n        }\n        let result = await service.buscarLecturasPorSector(datosConsulta, basicData.token + \"\");\n        let mensaje = result.data.mensaje;        \n        setCuentasPapas(result.data.Papas);\n        guardarContratos(JSON.stringify(mensaje));\n        if (mensaje.legth === 0 || mensaje === \"No se encontraron registros\") {\n            throw noRowSelect;\n        } else {\n            return mensaje;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function obtenerPromedioConsumo() {\n    try {\n        let { idLectura, token, nCliente } = getDatosLecturaStorage();\n        let datos = {\n            idLectura: idLectura,\n            nCliente: nCliente,\n        }\n        let result = await service.extraerPromedioContribuyente(datos, String(token));\n        let data = result.data.Mensaje;\n        data = Math.round(data);\n        return data;\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function obtenerLogo() {\n    try {\n        let { cliente, token } = obtenerDatosCliente();\n        let data = {\n            nCliente: cliente\n        }\n        let logo = await service.obtenerLogoCliente(data, String(token));\n        setClienteNombreCorto(String(logo.data.Data));\n        setLogoStorage(String(logo.data.Mensaje));\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function obtenerDatosContribuyente() {\n    try {\n        let { idLectura, token } = getDatosLecturaStorage();\n        let { cliente } = obtenerDatosCliente();\n        let datos = {\n            nCliente: cliente,\n            idBusqueda: idLectura\n        }\n        let data = await service.extraerContactoContribuyente(datos, String(token));\n        let result = data.data.Mensaje[0];\n        if( data.data.Code == 200 ){\n            if(data.data.Mensaje.length > 0){\n                setContribuyente(result.Contribuyente);\n            }else{\n                console.log(\"Mensaje de prueba\");\n                throw noRowSelect;\n            }\n        }else{\n\n        }\n        \n        return result;\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function actualizarContribuyente(contacto: { telefono: String, email: String }) {\n    try {\n        let { nCliente, token } = getDatosLecturaStorage();\n        let contribuyente = getContribuyente();\n        let data = {\n            cliente: nCliente,\n            id: contribuyente,\n            telefono: contacto.telefono,\n            email: contacto.email\n        }\n        let result = await service.guardarContribuyente(data, String(token));\n        return result.data.Mensaje;\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function obtenerTotalDatosBusqueda(clave: string, sector: string) {\n    try {\n        let { cliente, token } = obtenerDatosCliente()\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        let data = {\n            cliente: cliente,\n            mes: mes,\n            anio: anio,\n            busqueda: clave,\n            sector: sector\n        }\n        let result = null;\n        if(sector != \"-1\"){\n            console.log(data);\n            result = await service.obtenerNumeroItemsBusquedaSector(data, String(token));\n        }else{\n            result = await service.extraerNumeroItemsBusqueda(data, String(token));\n        }\n        /* return result.data.Mensaje.length; */\n        let exist = result.data.Mensaje.length;\n        if(exist >= 1){\n            let items = result.data.Mensaje[0].Total;\n            let pages = items / 20;\n            let resid = pages % 1;\n            if(resid > 0){\n                pages++;\n            }\n            return pages\n        }else{\n            return 0;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }   \n}\nfunction conectionError(error: any) {\n    let errorMessage = String(error.message);\n    let errorCode = String(error.code);\n    let typeError = error;\n    if (errorMessage.includes(\"Network Error\")) {\n        typeError = netwokError;\n    } else if (errorMessage.includes(\"400\")) {\n        typeError = sesionNotValidError;\n    } else if (errorCode.includes(\"ECONNABORTED\")) {\n        typeError = netwokError;\n    }\n    return typeError;\n}\nexport async function verifyPermissions() {\n    let list = [\n        AndroidPermissions.PERMISSION.CAMERA,\n        AndroidPermissions.PERMISSION.ACCESS_COARSE_LOCATION,\n    ]\n    let validPermissions = \"Salida:\";\n    list.map((item, index) => {\n        let data = AndroidPermissions.checkPermission(item);\n        validPermissions += data + \"\";\n    })\n    return validPermissions;\n}\nexport async function verifyCameraPermission() {\n    let value = await AndroidPermissions.checkPermission(AndroidPermissions.PERMISSION.CAMERA);\n    return value.hasPermission;\n}\nexport async function verifyGPSPermission() {\n    let value = await AndroidPermissions.checkPermission(AndroidPermissions.PERMISSION.ACCESS_COARSE_LOCATION);\n    return value.hasPermission;\n}\nexport async function obtenerContribuyenteInspeccion(busqueda: String){\n    try{\n        let { cliente, token } = obtenerDatosCliente();\n        let data = {\n            Cliente: cliente,\n            Busqueda: busqueda\n        }\n        let result = await service.obtenerContribuyenteInspeccion(data,String(token));\n        let listaDatos =  result.data.mensaje;\n        if(listaDatos instanceof Array){\n            return listaDatos;\n        }else{\n            throw noRowSelect;\n        }\n    }catch(error){\n        throw conectionError(error);\n    }   \n}\n/**\n * Funcion para pedir permisos Camara, gps, storage\n * Si se utilza en web marca un error (Cordova_web_notabiable) solo se utilza en dispisitivos fisicos y emuladoress\n */\nexport async function solicitarPermisos() {\n    let result = await AndroidPermissions.requestPermissions([\n        AndroidPermissions.PERMISSION.CAMERA,\n        AndroidPermissions.PERMISSION.ACCESS_COARSE_LOCATION,\n    ]);\n    return result;\n}\nexport async function obtnerContribuyenteInspeccion(id:String){\n    try{\n        let datos = {\n            Cliente: obtnerCliente(),\n            Padron: id\n        };\n        let result = await service.obtenerDatosContribuyentePorPadron(datos,obtenerToken());\n        console.log(result.data.mensaje.length);\n        let datosContribuyente = result.data.mensaje;\n        if(datosContribuyente.length > 0){\n            return datosContribuyente[0];\n        }else{\n            throw noRowSelect;\n        }\n    }catch(error){\n        throw conectionError(error);\n    }\n}\nexport async function  obtenerPromedioEditar(padron: number){\n    try {\n        let { token, nCliente } = getDatosLecturaStorage();\n        let datosLectura = extraerDatosEditarLectura();\n        let datos = {\n            Cliente: nCliente,\n            Padron: padron,\n            Lectura: datosLectura.idLectura //Esta es la lectura que se va a editar\n        }\n        let result = await service.obtenerPromedioEditar(datos, String(token));\n        let data = result.data.Mensaje;\n        data = Math.round(data);\n        return data;\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\n\nexport async function buscarContrato(busqueda:string){\n    try{\n        let { cliente,token } = obtenerDatosCliente();\n        let idUsuario = getIdUsuario();\n        console.log(idUsuario);\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        let datos = {\n            Cliente: cliente,\n            Contrato: busqueda,\n            mes: mes,\n            a_no: anio,\n            usuario: idUsuario\n        };\n        let result = await service.buscarPorContrato(datos,String(token));\n        let data = result.data.Mensaje;\n        setCuentasPapas(result.data.Papas);\n        let isArray = Array.isArray(data);\n        if (isArray) {\n            return data;\n        } else {\n            let message = String(data);\n            throw new Error(message);\n        }\n    }catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function buscarPorMedidor(busqueda:string){\n    try{\n        let { cliente,token } = obtenerDatosCliente();\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        let idUsuario = getIdUsuario();\n        let datos = {\n            Cliente: cliente,\n            Contrato: busqueda,\n            mes: mes,\n            a_no: anio,\n            usuario: idUsuario\n        };\n        let result = await service.buscarPorMedidor(datos,String(token));\n        let data = result.data.Mensaje;\n        setCuentasPapas(result.data.Papas);\n        console.log(result.data.Papas);\n        let isArray = Array.isArray(data);\n        if (isArray) {\n            return data;\n        } else {\n            let message = String(data);\n            throw new Error(message);\n        }\n    }catch(error){\n        throw conectionError(error);\n    }\n}\nfunction verificarDatosCoutaFija( consumoData: string ){\n    //NOTE: Verificamos que el consumo sea valido\n    let consumo = parseInt(consumoData);\n    if(!isNaN(consumo)){\n        if(consumo < 0 ){\n            throw LecturaMenor;\n        }else{\n            return true;\n        }\n    }else{\n        throw LecturaNull;\n    }\n}\nexport async function guardarCuotaFija(data:any){\n    try{\n        //NOTE: Verificamos los datos del consumo\n        if( verificarDatosCoutaFija(data.Consumo)){\n            //Enviamo los datoa a la API\n            let basicData = obtenerDatosCliente();\n            let token = basicData.token;\n            //NOTE: damos formato a los datos en la interfaz\n            let result = await service.guardarCoutaFijaV2(data,String(token));\n            console.log(result.data.Mensaje);\n            if(result.data.Code == 200){\n                return true;\n            }else if(result.data.Code == 404){\n                throw noRowSelect;\n            }else if(result.data.Code == 423){\n                throw mesMayor;\n            }else if(result.data.Code == 424){\n                throw mesRegistrado;\n            }\n        }\n    }catch(error){\n        throw conectionError(error);\n    }\n\n}\nexport async function obtenerDatosCorte(){\n    try {\n        let { cliente,token } = obtenerDatosCliente(); \n        let padron = getContratoCorte();\n        let Usuario = getIdUsuario();\n        let datos = {\n            'Padron': padron,\n            'Cliente': cliente,\n            'Usuario': Usuario\n        };\n        let result = await service.obtenerDatosContratoCorte(datos,String(token));\n        let DatosContrato = [];\n        if( result.data.code == 200 ){\n            DatosContrato.push(result.data.Mensaje[0]);\n            DatosContrato.push(result.data.Usuario[0]);\n            console.log(DatosContrato);\n            return DatosContrato;\n        }else if ( result.data.code == 403 ){\n            throw errorCarga;\n        }else if ( result.data.code == 404 ){\n            throw noRowSelect;\n        }\n    }catch(error){\n        throw conectionError(error);\n    }\n}\nexport async function RealizarCorteAPI( datos: {Evidencia:any,Motivo:string, Padron: number, Persona:number, Estado: number, Usuario: number, Longitud:string, Latitud: string, Ejercicio: number} ){\n    try {\n        let { cliente, token } = obtenerDatosCliente();\n        let datosCorte = {\n            Cliente: cliente,\n            Motivo: datos.Motivo,\n            Padron: datos.Padron,\n            Persona: datos.Persona,\n            Usuario: datos.Usuario,\n            Estado: datos.Estado,\n            Longitud:datos.Longitud,\n            Latitud: datos.Latitud,\n            Ejercicio: datos.Ejercicio,\n            Evidencia:datos.Evidencia\n        };\n        let resultCorte = await service.realizarCorteTomaSuinpac( datosCorte, String(token));\n        if(resultCorte.data.Code == 200){\n            return (\"OK\");\n        }else if(resultCorte.data.Code == 206){\n            throw errorImagenes;\n        }else if(resultCorte.data.Code == 400){\n            let jsonError = JSON.parse(resultCorte.data.Mensaje);\n            throw new Error(`Error ${jsonError.Code}:\\n${jsonError.Mensaje}`);\n        }\n    }catch( error ){\n        throw conectionError(error);\n    }\n}\nexport async function ListaCortes(Mes: string, Anio: number){\n    try{\n        let { cliente ,idUsuario, token } = obtenerDatosCliente();\n        let data = {\n            \"Cliente\": cliente,\n            \"Usuario\": idUsuario,\n            \"Ejercicio\": Anio,\n            \"Mes\": Mes\n        };\n        let cortes = await service.listarCortesUsuario( data,String(token) );\n        if(cortes.data.Code == 200){\n            return cortes.data.Mensaje;\n        }else if(cortes.data.Code == 404){\n            throw noRowSelect;\n        }\n    }catch(error){\n        throw conectionError(error);\n    }\n}\nexport async function ContratosListaContratoReporte( contrato: string ){\n    try{\n        let { cliente, token } = obtenerDatosCliente();\n        let datos = {\n            Cliente: cliente,\n            Contrato: contrato \n        };\n        let result = await service.buscarContratoReporte(datos,String(token));\n        if(result.data.Code == 200){\n            //NOTE: retornamos la lista de los contratos\n            return result.data.Mensaje;\n        }else{\n            //Error del servidor\n        }\n    }catch(error){\n        console.log(error);\n    }\n}\nexport async function guardarReporteV2(Reporte:any){\n    try{\n        let { cliente , token, idUsuario } = obtenerDatosCliente();\n        console.log(token);\n        let datos = {\n            'Padron': Reporte.Padron,\n            'Cliente':cliente,\n            'Calle':Reporte.Calle,\n            'Colonia':Reporte.Colonia,\n            'Numero':Reporte.Numero,\n            'Descripcion':Reporte.Descripcion,\n            'Latitud':Reporte.Latitud,\n            'Longitud':Reporte.Longitud,\n            'Usuario':idUsuario,\n            'Fotos':Reporte.Fotos,\n            'FallaAdministrativa':Reporte.FallaAdministrativa,\n            'Estatus':Reporte.Estatus\n        }\n        let result = await service.guardarReporte(datos, String(token));\n        console.log(result);\n        if( result.data.Mensaje.Code == 200 ){\n            return true;\n        }else if( result.data.Mensaje.Code == 423 ){\n            throw errorImagenes;\n        }else if( result.data.Mensaje.Code == 403 ){\n            throw ErrorInsertar;\n        }\n        return result.data.Mensaje;\n    }catch(error){\n        throw conectionError(error);\n    }\n}\nexport async function buscarMedidorSinFiltro( clave:string ){\n    try{\n        let { cliente,token } = obtenerDatosCliente();\n        let datos = {\n            'Cliente': cliente,\n            'Contrato': clave\n        };\n        let result = await service.realizarReporteMedidor(datos,String(token));\n        console.log(result.data);\n        if( result.data.Code == 200 ){\n            return result.data.Mensaje;\n        }else{\n            //NOTE: manejador de errores\n            \n        }\n    }catch( error ){\n        throw conectionError(error);\n    }\n}\nexport async function configuracionCuotaFija(  ){\n    try{\n        let { cliente, token } = obtenerDatosCliente();\n        let datos = {\n            'Cliente':cliente\n        };\n        let rawConfiguracion = await service.obtenerConfiguracion(datos,String(token));\n        console.log(rawConfiguracion.data);\n        return rawConfiguracion.data.Configuracion;\n    }catch(error){\n        throw conectionError( error );\n    }\n}\nexport async function EnviarCorte( datos: {Evidencia:any,Motivo:string, Padron: number, Persona:number, Estado: number, Usuario: number, Longitud:string, Latitud: string, Ejercicio: number} ) {\n    try{\n        let { cliente, token } = obtenerDatosCliente();       \n        //NOTE: creamos el objeto que vamos a enviar\n        let datosCorte = {\n            'Longitud': datos.Longitud,\n            'Latitud': datos.Latitud,\n            'Cliente':  cliente,\n            'Motivo': datos.Motivo,\n            'Padron': datos.Padron,\n            'Persona': datos.Persona,\n            'Usuario': datos.Usuario,\n            'Estado': datos.Estado,\n            'Ejercicio': datos.Ejercicio,\n            'Evidencia': datos.Evidencia\n        };\n        let resultCorte = await service.RealizarCorteV2( datosCorte, String( token ));\n        if(resultCorte.data.Code == 200){\n            return (\"OK\");\n        }else if(resultCorte.data.Code == 206){\n            throw errorImagenes;\n        }else if(resultCorte.data.Code == 400){\n            let jsonError = JSON.parse(resultCorte.data.Mensaje);\n            throw new Error(`Error ${jsonError.Code}:\\n${jsonError.Mensaje}`);\n        }\n        \n\n    }catch(error){\n        throw conectionError(error);\n    }\n}\nexport async function historialLecturas( datos:{ anio:number, mes: number } ){\n    try{ \n        let { cliente,idUsuario,token } = obtenerDatosCliente();\n        let datosFecha = {\n            Usuario: idUsuario,\n            Cliente: cliente,\n            Anio: datos.anio,\n            Mes: datos.mes,\n        };\n        let resultHistorial = await service.ObtenerHistorialLecturas( datosFecha, String( token ) );\n        if(resultHistorial.data.Status){\n            return resultHistorial.data.Mensaje;\n        }else{\n            throw noRowSelect;\n        }\n    }catch( error )\n    {\n        throw verificarDatosCoutaFija(error);\n    }\n\n\n}","import axios from 'axios'\nimport { returnUpBackOutline } from 'ionicons/icons';\nexport class APIservice {\n    //llamada a la api en la\n    getAuth(data: object) {\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/login-presidentePrueba`, data)\n    }\n    verificarUsuarioLecturista(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/verificarUsuarioLecturistaPrueba`, data, { headers });\n    }\n    buscarSectores(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post('https://api.servicioenlinea.mx/api-movil/buscarSectores', data, { headers })\n    }\n    buscarLecturasPorSector(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/datosLecturaPorSector`, data, { headers });\n    }\n    extraesDatosLectura(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post('https://api.servicioenlinea.mx/api-movil/extrarDatosLecturaPrueba', data, { headers })\n    }\n    //FIXME: esta es una vercion vieja para enviar los datos de la captura \n    guardarDatosLectura(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/guardarDatosLecturaPrueba`, data, { headers })\n    }\n    extraerHistorial(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerHistorialPrueba`, data, { headers });\n    }\n    extraerDatoseditar(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerDatosEditarPrueba`, data, { headers });\n    }\n    actualizarDatosLectura(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/actualizarRegistroPrueba`, data, { headers });\n    }\n    crearReporte(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/crearReportePrueba`, data, { headers });\n    }\n    extraerHistorialReportes(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/listaReportes`, data, { headers });\n    }\n    extraerReporte(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerReporte`, data, { headers });\n    }\n    extraerContribuyente(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/datosLecturaAguaPrueba`, data, { headers });\n    }\n    extraerNumeroItems(data: object, token: String) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/paginas`, data, { headers });\n    }\n    extraerPromedioContribuyente(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/obtenerConsumoPromedio`, data, { headers });\n    }\n    obtenerLogoCliente(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerLogo`, data, { headers });\n    }\n    extraerContactoContribuyente(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerContribuyente`, data, { headers });\n    }\n    guardarContribuyente(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/guardarContribuyente`,data,{headers});\n    }\n    extraerNumeroItemsBusqueda(data: object,token:string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/paginasBusqueda`,data,{headers});\n    }\n    obtenerContribuyenteInspeccion(data:object, token:string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/inspeccionContribuyente`,data,{headers});\n    }\n    obtenerDatosContribuyentePorPadron(data: object,token:String){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/obtenerPadronContribyenteDatos`,data,{headers})\n    }\n    obtenerDatosSectorPalabraClave(data: object,token: String){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(\"https://api.servicioenlinea.mx/api-movil/buscarSectorPalabraClave\",data,{headers});\n    }\n    obtenerNumeroItemsBusquedaSector(data:object,token: String){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(\"https://api.servicioenlinea.mx/api-movil/paginasBusqueaSector\",data,{headers});\n    }\n    obtenerPromedioEditar(data:object,token:String){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(\"https://api.servicioenlinea.mx/api-movil/ObtenerPromedioEditar\",data,{headers});\n    }\n    buscarPorContrato(data:object,token:string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/buscarPorContrato`,data,{headers})\n    }\n    buscarPorMedidor(data:object,token:string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/buscarPorMedidor`,data,{headers})\n    }\n    capturarCoutaFija(data:object,token:string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/consumo`,data,{headers})\n    }\n    obtenerDatosContratoCorte( data: object, token: string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/DatosTomaCorte`,data,{headers});\n    }\n    realizarCorteTomaSuinpac( data: object ,token: string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/RealizarCorte`,data,{headers});\n    }\n    listarCortesUsuario( data:object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/listaCortes`,data,{headers});\n    }\n    //NOTE: Rutas con nuevo controlador\n    buscarContratoReporte( data:object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/ReporteBuscarContrato`,data,{headers});\n    }\n    realizarReporteContrato( data: object, token:string ) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/crearReporteV2`,data,{headers});\n    }\n    realizarReporteMedidor( data:object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/ReporteBuscarMedidor`, data , {headers});\n    }\n    obtenerConfiguracion( data:object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        };\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/ConfiguracionCoutaFija`,data,{headers});\n    }\n    obtenerConfiguracionFotografia( data:object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        };\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/ConfiguracionEvidencia`,data,{headers});\n    }\n    //INDEV: metodos para guardar las fotos de forma ordenada\n    guardarDatosLecturaV2(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/GuardarLecturaV3`, data, { headers })\n    }\n    guardarCoutaFijaV2( data: object, token: string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/GuardarCoutaFija`,data,{headers})\n    }\n    guardarReporte( data:object, token: string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/GuardarReporteAgua`,data,{headers});\n    }\n    RealizarCorteV2( data: object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/RealizarCorte`,data,{ headers });\n    }\n    ObtenerHistorialLecturas( data:object, token: string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/HistorialLecturas`,data,{headers});\n    }\n}\n\n","import { IonAlert, IonButton, IonCard, IonCheckbox, IonContent, IonHeader, IonImg, IonInput, IonItem, IonLabel, IonLoading, IonPage, IonTitle, IonToolbar, useIonViewWillEnter } from '@ionic/react';\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport { Plugins } from '@capacitor/core'\nimport './Home.css';\nimport { Login, obtenerLogo, solicitarPermisos, } from '../controller/apiController';\nimport { restoreUser,clearState } from '../controller/storageController';\nconst { SplashScreen } = Plugins\nconst Home: React.FC = () => {\n  const history = useHistory();\n  const [User, setUserName] = useState('');\n  const [passwors, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [remember, setRemember] = useState(false);\n  useEffect(() => {\n    SplashScreen.hide();\n    handleRequestPermissions();\n    recordarCredenciales();\n  }, [])\n  useIonViewWillEnter(clearState)\n  const recordarCredenciales = async () => {\n    let user = restoreUser();\n    if (user.pass != null && user.user != null) {\n      setUserName(user.user);\n      setPassword(user.pass);\n      setRemember(user.remember);\n    }\n  }\n  const handleBtnLoginPress = () => {\n    setLoading(true)\n    validateUserData();\n  }\n  const validateUserData = async () => {    \n    if (User != \"\" && passwors != \"\" && User != null && passwors != null) {\n      try {\n        setTimeout(() => {\n          if (loading) {\n            throw new Error(\"Tiempo de espera agotado.\");\n          }\n        }, 8000)\n        await Login(User, passwors, remember)\n          .then(async (result) => {\n            await obtenerLogo();\n            history.replace('./form-datos-toma.page');\n          })\n          .catch((err) => {\n            setMessage(err.message);\n          })\n          .finally(() => { setLoading(false) })\n      } catch (err) {\n        setMessage(err.message);\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n      setMessage(\"Campos vacios\")\n    }\n  }\n  const handleRequestPermissions = async () => {\n    await solicitarPermisos().then((result) => {\n      console.log(result)\n    })\n  }\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"danger\" >\n          <IonTitle>Inicio de sessión</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonCard class=\"ion-text-center\" className=\"box\">\n          <IonImg src={\"../assets/Imagenes/Logo_suinpac.jpeg\"}></IonImg>\n          <IonItem className=\"input\">\n            <IonInput type=\"text\" placeholder=\"Usuario\" onIonChange={e => setUserName(e.detail.value!)} value={User}>\n            </IonInput>\n          </IonItem>\n          <IonItem className=\"input\">\n            <IonInput type=\"password\" placeholder=\"Contraseña\" onIonChange={e => setPassword(e.detail.value!)} value={passwors}>\n            </IonInput>\n          </IonItem>\n          <IonItem class=\"ion-text-center\">\n            <IonCheckbox slot=\"start\" color=\"primary\" checked={remember} onIonChange={e => setRemember(e.detail.checked)}></IonCheckbox>\n            <IonLabel>Recordar Usuario y Contraseña</IonLabel>\n          </IonItem>\n          <IonButton color=\"danger\" onClick={handleBtnLoginPress} className=\"input button\">INICIAR SESSIÓN</IonButton>\n        </IonCard>\n        <IonLoading\n          cssClass=\"my-custom-class\"\n          isOpen={loading}\n          onDidDismiss={() => setLoading(false)}\n          message=\"Por favor espere\"\n        />\n        <IonAlert\n          cssClass=\"my-custom-class\"\n          header={\"ERROR\"}\n          message={message}\n          isOpen={message.length > 0}\n          onDidDismiss={() => { setMessage('') }}\n        />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Home;","\nimport './left-menu.css';\nimport { create, logOut, reader, water, cutOutline, timerOutline, construct } from 'ionicons/icons'\nimport { IonMenu, IonContent, IonImg, IonItemDivider, IonMenuToggle, IonRouterOutlet, IonItem, IonLabel, IonIcon, IonSpinner } from '@ionic/react'\nimport { useEffect, useState } from 'react';\nimport { RouteComponentProps, useHistory } from 'react-router-dom'\nimport { cerrarSesion, getLogoStorage} from '../controller/storageController'\ninterface ContainerProps { }\n\nconst MenuLeft: React.FC<ContainerProps> = () => {\n    const history = useHistory();\n    let [selectedIndex, setSelectedIndex] = useState(-1);\n    const [logo,setLogo] = useState(\"\");\n    useEffect(()=>{\n\n    },[])\n    const appPages = [\n        {\n            title: 'Toma de agua',\n            selects: ['form-datos-toma.page','datos-contribuyente.page'],\n            icon: water,\n            path: '/form-datos-toma.page'\n        }, {\n            title: 'Historial de lecturas',\n            selects: ['historial-lecturas.page','editar-lecturas-agua.page'],\n            icon: reader,\n            path: '/historial-lecturas.page'\n        }, {\n\n            title: 'Reportes',\n            selects: ['ContratosReportes','reportes.page'],\n            path: '/ContratosReportes',\n            icon: construct\n        },\n        /*{\n            title: 'Historial reportes',\n            selects: ['historial-reportes.page', 'detalles-reportes.page'],\n            path: '/historial-reportes.page',\n            icon: newspaper\n        },*/\n        {\n            title: 'Cortes',\n            selects: ['buscar-contrato','realizar-corte'],\n            path: '/buscar-contrato',\n            icon: cutOutline\n        },\n        {\n            title: 'Historial Cortes',\n            selects: ['buscar-corte'],\n            path: '/buscar-corte',\n            icon: timerOutline\n        },\n        /*{\n            title: 'Inspecciones',\n            selects: ['inspeccciones.page'],\n            path: '/inspeccciones.page',\n            icon: newspaper\n        },*/\n        {\n            title: 'Salir',\n            selects: ['inicio-de-sesion.page'],\n            icon: logOut\n        },\n    ];\n    useEffect(() => {\n        itemSelected();\n        cargarLogo();\n    });\n    \n    const itemSelected = () => {\n        let dir = window.location.pathname.toString().split(\"/\")[1];\n        let selected = false;\n        if (dir != undefined) {\n            appPages.map((item, pageIndex) => {\n                item.selects.map((item, index) => {\n                    if (item == dir) {\n                        console.log(item);\n                        setSelectedIndex(pageIndex);\n                        selected = true;\n                    }\n                })\n            })\n            if (!selected) {\n                setSelectedIndex(0);\n            }\n        }\n    }\n    const btnSelected = (dir: any) => {\n        if (dir.title == 'Salir') {\n            cerrarSesion()\n                .then((result) => {\n                    history.replace(\"/home\")\n                })\n        } else {\n            history.replace(dir.path);\n        }\n    }\n    const cargarLogo = async ()=>{\n        if(logo == \"\"){\n            await getLogoStorage().then((result)=>{\n                setLogo(String(result));\n            });\n        }\n    }\n    return (\n        <div>\n            <IonMenu side=\"start\" menuId=\"first\" contentId=\"main-content\" >\n            <IonContent >\n                    <div className = \"center\">\n                        {   logo != \"\" ? \n                            <IonImg  src= {\"data:image/png;base64,\"+logo}/* \"../assets/Imagenes/Logo recortado.png\" */></IonImg> : \n                            <IonSpinner className = \"spinerItem\" color = \"danger\" name = \"lines\"></IonSpinner>}\n                    </div>\n                    <IonItemDivider className=\"menuLeft\" />\n                    <IonMenuToggle  >\n                        {\n                            appPages.map((item, index) => {\n                                return <IonItem key={index} button={true} className={index == selectedIndex ? \"selected\" : \"\"} onClick={() => { btnSelected(item) }}>\n                                    <IonLabel>{item.title}</IonLabel>\n                                    <IonIcon slot=\"start\" ios={item.icon + \"-outline\"} md={item.icon + \"-sharp\"} color=\"blue\"></IonIcon>\n                                </IonItem>\n                            })\n                        }\n                    </IonMenuToggle>\n                    <IonItemDivider />\n                </IonContent>\n            </IonMenu>\n            <IonRouterOutlet id = \"main-content\"></IonRouterOutlet>\n        </div>\n    )\n}\n\nexport default MenuLeft;","import React, { useEffect, useState } from \"react\";\nimport {\n  IonPage,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonContent,\n  IonItem,\n  IonButtons,\n  IonMenuButton,\n  IonCard,\n  IonCardHeader,\n  IonLabel,\n  IonSelect,\n  IonAlert,\n  IonSelectOption,\n  IonCardContent,\n  IonItemDivider,\n  IonList,\n  IonLoading,\n  IonButton,\n  IonInput,\n  IonIcon,\n  IonGrid,\n  IonRow,\n  IonCol,\n  useIonViewWillEnter,\n  IonNote,\n  useIonViewWillLeave,\n  \n} from \"@ionic/react\";\nimport { useHistory } from 'react-router-dom'\nimport \"./form-datos-toma.page.css\";\nimport MenuLeft from '../../components/left-menu';\nimport { buscarSectores, lecturasPorSectorPage, solicitarPermisos, verifyCameraPermission, verifyGPSPermission, obtenerContribuyente, obtenerTotalDatosSectores, obtenerTotalDatosBusqueda,buscarContrato,buscarPorMedidor, configuracionCuotaFija} from '../../controller/apiController';\nimport { getUsuario, guardarDatosLectura, cerrarSesion, verifyingSession, setContribuyenteBuscado, setPuntero, getPuntero, getNumeroPaginas, setNumeroPaginas, getClienteNombreCorto, setSector, getSector, getPunteroBusqueda, getPaginasBusqueda, setPunteroBusqueda, setPaginasBusqueda,getCuentasPapas } from '../../controller/storageController';\nimport { searchCircle, arrowForwardOutline, arrowBackOutline, cogSharp, server } from 'ionicons/icons'\nimport { Console } from \"node:console\";\nconst FormDatosTomaPage: React.FC = () => {\n  const history = useHistory();\n  const [user, setUser] = useState('');\n  const [sectores, setSectores] = useState<any[]>([]);\n  const [message, setMessage] = useState('');\n  const [idSector, setIdSector] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [lecturas, setLecuras] = useState<any[]>([])\n  const [typeErro, setTypeError] = useState('');\n  const [permissions, setPermissons] = useState(true);\n  const [hideAlertButons, setHideAlertbuttons] = useState(false);\n  const [block, setBlock] = useState(false);\n  const [tipoMessage, setTipoMessage] = useState(\"Mensaje\");\n  const [tokenExpired, setTokenExpired] = useState(false);\n  const [textoBusqueda, setTextoBusqueda] = useState(String);\n  const [serched, setSerched] = useState(false);\n  const [paginas, setPaginas] = useState(Number);\n  const [showPagination, setShowPagination] = useState(false);\n  const [nombreCliente, setNombreCliente] = useState(String);\n  const [busqueda, setBusqueda] = useState(false);\n  const [filtro,setFiltro] = useState(1);\n  const [placeHolder,setPlaceHolder] = useState(\"Buscar por contrato\");\n  const alertButtons = [\n    {\n      text: \"Reintentar\", handler: () => {\n        setMessage(\"\");\n        typeErro == \"sectores\" ? cargarSectores() : buscarPorSector(idSector);\n      }\n    },\n    {\n      text: \"Cancelar\", handle: () => {\n        setMessage(\"\");\n      }\n    }\n  ]\n  const [activarMenu,setActivarMenu] = useState(true);\n  const isSessionValid = async () => {\n    let valid = verifyingSession();\n    setTokenExpired(!valid);\n    setBlock(!valid);\n    let nombreCorto = await getClienteNombreCorto();\n    setNombreCliente(String(nombreCorto));\n  }\n\n  useEffect(() => { isSessionValid() }, []);\n  useEffect(() => { tokenExpired ? logOut(tokenExpired) : prepararPantalla() }, [tokenExpired])\n\n  const logOut = (valid: boolean) => {\n    if (valid) {\n      setTipoMessage(\"Sesión no valida\");\n      setMessage(\"Inicie sesión por favor\\nRegresando...\");\n      setHideAlertbuttons(true);\n      setTimeout(async () => {\n        setTipoMessage('Error');\n        setMessage('');\n        await cerrarSesion()\n          .then((result) => {\n            history.replace(\"/home\")\n          })\n      }, 2500);\n    }\n  }\n  const prepararPantalla = async () => {\n    await solicitarPermisos()\n      .then(async (err) => {\n        let camera = await verifyCameraPermission();\n        let gps = await verifyGPSPermission();\n        if (camera && gps) {\n          let storageUser = getUsuario();\n          setUser(storageUser + \"\");\n          cargarSectores();\n        } else {\n          setHideAlertbuttons(true);\n          setMessage(\"Debe otorgar permisos para usar la aplicación\");\n          setBlock(true)\n          setTimeout(() => {\n            history.replace(\"/home\")\n          }, 2500)\n        }\n      }).catch(() => {\n        //Quitar antes de la vercion final (solo sirve en web)\n        let storageUser = getUsuario();\n        setUser(storageUser + \"\");\n        cargarSectores()\n      })\n    /**\n   * Activar el metodo solo para la version web de prueba\n   */\n\n    //setMessage(\"EL IOIOA\")\n  }\n  const cargarSectores = async () => {\n    await buscarSectores()\n      .then(result => setSectores(result))\n      .catch(err => {\n        let errorMessage = String(err.message);\n        let sessionValid = errorMessage.includes(\"Sesion no valida\");\n        setTokenExpired(sessionValid);\n        setIdSector(\"\");\n        if (!sessionValid) {\n          setMessage(err.message)\n          setTypeError(\"sectores\")\n        }\n      })\n  }\n  useIonViewWillEnter(()=>{setActivarMenu(true)});\n  useIonViewWillLeave(()=>{setActivarMenu(false)});\n  const buscarPorSector = async (idSector:string) => {\n    setBusqueda(false)\n    setLoading(true);\n    await obtenerTotalDatosSectores(idSector).then((result) => {\n      console.log(result);\n      setNumeroPaginas(parseInt(result + \"\"))\n      setPaginas(parseInt(result + \"\"));\n      setPuntero(0)\n    })\n    await lecturasPorSectorPage(idSector, 0)\n      .then((result) => {\n        setShowPagination(true);\n        setLecuras(result);\n        setSerched(false)\n        setPuntero(0);\n      })\n      .catch((err) => {\n        setLecuras([]);\n        let errorMessage = String(err.message);\n        let expired = errorMessage.includes(\"Sesion no valida\");\n        setTokenExpired(expired);\n        if (!expired) {\n          setHideAlertbuttons(true)\n          setTypeError(\"Mensaje\");\n          setMessage(err.message)\n        }\n      })\n      .finally(() => { setLoading(false) })\n  }\n  const abrirCapturaDatos = async (idLectura: string, contribuyente: string, contratoVigente: string, medidor: string,metodo:number,esPapa:boolean) => {\n    if(!esPapa){\n      if( metodo != 1 ){\n        setContribuyenteBuscado(serched);\n        let result = guardarDatosLectura(idLectura, contribuyente, contratoVigente, medidor);\n        if (result === true) {\n          //Redireccion a toma de lectura\n          history.push('/captura-de-lectura.page');\n          setHideAlertbuttons(true);\n        }\n      }else{\n        //INDEV: obtenemo la configuracion de los clie \n        await configuracionCuotaFija()\n        .then((result)=>{\n            //NOTE: si el valor del result es 1 se inserta\n            if(result == \"1\"){\n              let result = guardarDatosLectura(idLectura, contribuyente, contratoVigente, medidor);\n              if(result === true){\n                history.push('/captura-de-lectura.page');\n                setHideAlertbuttons(true);\n              }\n            }else{              \n              setHideAlertbuttons(true);\n              setTipoMessage(\"Mensaje\");\n              setMessage(\"Temporalmente deshabilitado\");   \n            }\n        })\n        .catch((error)=>{\n          //Mandamos un error al usuario\n        })\n      }\n     }\n  }\n  const buscarPalabraClave = async () => {\n\n    if(idSector == \"\"){\n      setBusqueda(true);\n      setLecuras([]);\n      setShowPagination(true);\n      setLoading(true);\n      await obtenerTotalDatosBusqueda(textoBusqueda,\"-1\").then((result) => {\n        let paginas = parseInt(String(result));\n        setPunteroBusqueda(0);\n        setPaginasBusqueda(paginas);\n        setPaginas(paginas);\n      });\n      await obtenerContribuyente(textoBusqueda,0,\"-1\").then((result) => {\n        console.log(result);\n        setSerched(true);\n        setLecuras(result);\n      }).catch((err) => {\n        setLecuras([]);\n        let errorMessage = String(err.message);\n        let sessionValid = errorMessage.includes(\"Sesion no valida\");\n        if (!sessionValid) {\n          setHideAlertbuttons(true);\n          setTipoMessage(\"ERROR\");\n          setMessage(errorMessage);\n        } else {\n          setTokenExpired(true);\n        }\n      }).finally(() => { setLoading(false) });\n    }else{\n      console.log(\"Busqueda por sector\");\n      handleBuscarSectorParablaClave();\n    }\n  }\n  const handleInputSerh = (texto: string) => {\n    setTextoBusqueda(texto);\n  }\n  const handleNextPage = () => {\n    setLoading(true);\n    let puntero = getPuntero();\n    setPuntero(puntero + 1);\n    puntero++;\n    let pages = getNumeroPaginas();\n    let itemIndex = 0;\n    if (puntero >= pages) {\n      setPuntero(0);\n      puntero = 0;\n      itemIndex = puntero * 20;\n    } else {\n      itemIndex = puntero * 20;\n    }\n    console.log(itemIndex, idSector);\n    punteroBuscarPorSector(itemIndex, idSector);\n  }\n  const handlePreviousPage = () => {\n    let puntero = getPuntero();\n    if (puntero - 1 < 0) {\n      puntero = getNumeroPaginas() - 1;\n      setPuntero(puntero);\n    } else {\n      setPuntero(puntero - 1);\n      puntero--;\n    }\n    let pages = getNumeroPaginas();\n    let itemIndex = (puntero * 20);\n    punteroBuscarPorSector(itemIndex, idSector);\n  }\n  const punteroBuscarPorSector = async (offset: number, sector: string) => {\n    setBusqueda(false);\n    setLoading(true);\n    await lecturasPorSectorPage(sector, offset)\n      .then((result) => {\n        setLecuras(result);\n        setSerched(false)\n      })\n      .catch((err) => {\n        console.log(err)\n        setLecuras([]);\n        let errorMessage = String(err.message);\n        let expired = errorMessage.includes(\"Sesion no valida\");\n        setTokenExpired(expired);\n        if (!expired) {\n          setHideAlertbuttons(true)\n          setTypeError(\"Mensaje\");\n          setMessage(err.message)\n        }\n      })\n      .finally(() => { setLoading(false) })\n  }\n  const handleSector = (sector: string) => {\n    setIdSector(sector);\n    setSector(sector);\n    buscarPorSector(sector);\n\n  }\n  const handleNextPageBusqueda = () => {\n    setLoading(true); \n    let puntero = getPunteroBusqueda();\n    setPunteroBusqueda(puntero + 1);\n    puntero++;\n    let pages = getPaginasBusqueda()\n    let itemIndex = 0;\n    if (puntero >= pages) {\n      setPunteroBusqueda(0);\n      puntero = 0;\n      itemIndex = puntero * 20;\n    } else {\n      itemIndex = puntero * 20;\n    }\n    console.log(itemIndex, textoBusqueda);\n    punteroBuscarPorClave(itemIndex);\n  }\n  const handlePreviousPageBusqueda = () => {\n    setLoading(true);\n    let puntero = getPunteroBusqueda();\n    if (puntero - 1 < 0) {\n      puntero = getPaginasBusqueda() - 1;\n      setPunteroBusqueda(puntero);\n    } else {\n      setPunteroBusqueda(puntero - 1);\n      puntero--;\n    }\n    let itemIndex = (puntero * 20);\n    console.log(itemIndex, textoBusqueda);\n    punteroBuscarPorClave(itemIndex);\n  }\n  const punteroBuscarPorClave = async (offset: number) => {\n      setBusqueda(true);\n      await obtenerContribuyente(textoBusqueda,offset,\"-1\").then((result) => {\n        setSerched(true);\n        setLecuras(result);\n      }).catch((err) => {\n        let errorMessage = String(err.message);\n        let sessionValid = errorMessage.includes(\"Sesion no valida\");\n        if (!sessionValid) {\n          setHideAlertbuttons(true);\n          setTipoMessage(\"Mensaje\");\n          setMessage(errorMessage);\n        } else {\n          setTokenExpired(true);\n        }\n      }).finally(() => { setLoading(false) });\n  }\n  const handleCancelSector = () =>{\n    setIdSector(\"\");\n  }\n  const handleBuscarSectorParablaClave = async () =>{\n    setBusqueda(true);\n    setLecuras([]);\n    setShowPagination(true);\n    setLoading(true);\n    await obtenerTotalDatosBusqueda(textoBusqueda,idSector).then((result) => {\n      let paginas = parseInt(String(result));\n      setPunteroBusqueda(0);\n      setPaginasBusqueda(paginas);\n      setPaginas(paginas);\n    });\n    await obtenerContribuyente(textoBusqueda,0,idSector).then((result) => {\n      console.log(result);\n      setSerched(true);\n      setLecuras(result);\n    }).catch((err) => {\n      setLecuras([]);\n      let errorMessage = String(err.message);\n      let sessionValid = errorMessage.includes(\"Sesion no valida\");\n      if (!sessionValid) {\n        setHideAlertbuttons(true);\n        setShowPagination(false);\n        setTipoMessage(\"Mensaje\");\n        setMessage(errorMessage);\n      } else {\n        setTokenExpired(true);\n      }\n    }).finally(() => { setLoading(false) });\n  }  \n  const handleCancelFiltro = () =>{\n    setFiltro(1);\n  }\n  const buscarFiltro = () =>{\n    if(filtro == 1){\n      porContrato();\n    }\n    if(filtro == 2){\n      porMedidor();\n    }\n    if(filtro == 3){\n    }\n  }\n  const porContrato = async () =>{\n    setBusqueda(true);\n    setLecuras([]);\n    setShowPagination(false);\n    setLoading(true);\n    console.log(zeroFill(textoBusqueda));\n    await buscarContrato(zeroFill(textoBusqueda))\n    .then(result =>{\n      setLecuras(result);\n    }).catch(err=>{\n      setLecuras([]);\n      let errorMessage = String(err.message);\n      let expired = errorMessage.includes(\"Sesion no valida\");\n      setTokenExpired(expired);\n      if (!expired) {\n        setHideAlertbuttons(true)\n        setTypeError(\"Mensaje\");\n        setMessage(err.message)\n      }\n    }).finally(\n     ()=>{setLoading(false);} \n    )\n  }\n  const porMedidor = async () =>{ \n    setBusqueda(true);\n    setLecuras([]);\n    setShowPagination(false);\n    setLoading(true);\n    console.log(zeroFill(textoBusqueda,10));\n    await buscarPorMedidor(zeroFill(textoBusqueda,10))\n    .then(result =>{\n      setLecuras(result);\n    }).catch(err=>{\n      setLecuras([]);\n      let errorMessage = String(err.message);\n      let expired = errorMessage.includes(\"Sesion no valida\");\n      setTokenExpired(expired);\n      if (!expired) {\n        setHideAlertbuttons(true)\n        setTypeError(\"Mensaje\");\n        setMessage(err.message)\n      }\n    }).finally(\n     ()=>{setLoading(false);} \n    )\n  }\n  const functionValidarLectura = (estatus: number, cobro:number) =>{\n    let leyendaCobro = \"\";\n    let result = [\"\",false];\n    if(cobro == 1){\n      leyendaCobro = \"Cuota Fija \";\n    }\n  switch(estatus){\n    case 1:\n      result = [ leyendaCobro + \"\",cobro == 1];\n    break;\n    case 2:\n     result = [leyendaCobro + \"\",cobro == 1];\n    break;\n    case 3:\n      result = [ leyendaCobro + \"Baja Temporal\",true];\n    break;\n    case 4:\n      result = [ leyendaCobro +  \"Baja Permanente\",true];\n    break;\n    case 5:\n      result = [ leyendaCobro + \"Inactivo\",true];\n    break;\n    case 6:\n      result = [ leyendaCobro +  \"Nueva\",true];\n    break;    \n    case 9:\n      result = [ leyendaCobro +  \"Sin Toma\",true];\n    break;\n    case 10:\n      result = [ leyendaCobro +  \"Multada\",true]\n    break;\n  }\n  return result;\n  }\n  function zeroFill( number:string,width:number = 9)\n{\n  while(number.length < width){\n    number = \"0\"+number;\n  }\n  return number;\n  }\n  const handleSelectFiltro = (filter: number) => {\n  setFiltro(filter); \n  if(filtro == 1){\n    setPlaceHolder(\"Buscar por Medidor\");\n  }\n  if(filtro == 2){\n    setPlaceHolder(\"Buscar por Contrato\");\n  }\n  }\n  return (\n    <IonPage>\n      {\n        activarMenu ? \n        <MenuLeft />: <></>\n      }\n      <IonHeader>\n        <IonToolbar color=\"danger\" >\n          <IonTitle>{`${user} - ${nombreCliente}`}</IonTitle>\n          <IonButtons slot=\"start\" className=\"btnMenu\">\n            <IonMenuButton ></IonMenuButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonCard class=\"ion-text-center\" className=\"box\">\n          <IonCardHeader>\n            <div>\n              <h3>Lectura de agua potable</h3>\n              <IonLabel>Puedes realizar busquedas por:</IonLabel>\n              <p>Contrato y Medidor</p>\n              <br />\n            </div>\n            <IonGrid>\n            <IonRow>\n                <IonCol>\n                <IonItem>\n                  <IonLabel>Filtrar Por:</IonLabel>\n                <IonSelect onIonCancel = {handleCancelFiltro} value = {filtro} placeholder = \"Seleccione el filtro\" interface = \"action-sheet\" onIonChange = {e => {handleSelectFiltro(parseInt(e.detail.value+\"\"))}}>\n                    <IonSelectOption value={1} >Contrato</IonSelectOption>\n                    <IonSelectOption value={2} >Medidor</IonSelectOption>\n                  </IonSelect>\n                </IonItem>\n                </IonCol>\n              </IonRow>\n              <IonRow>\n                <IonCol size=\"9\">\n                  <IonItem>\n                    <IonInput type=\"number\" placeholder = {placeHolder} onIonChange={e => { handleInputSerh(String(e.detail.value)) }}></IonInput>\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"2\" class=\"btnSerch\">\n                  <IonButton color=\"danger\" size=\"large\" shape=\"round\" onClick={buscarFiltro}><IonIcon icon={searchCircle} color=\"light\" size=\"large\"></IonIcon></IonButton>\n                </IonCol>\n              </IonRow>\n              <IonItem>\n                <IonLabel className=\"center\" color=\"\">o seleccione un sector</IonLabel>\n              </IonItem>\n            </IonGrid>\n            <IonItem>\n              <IonLabel>Sectores</IonLabel>\n              <IonSelect\n                placeholder=\"Seleccionar uno\"\n                onIonChange={e => { handleSector(e.detail.value) }}\n                interface=\"action-sheet\"\n                disabled={block}\n                cancelText=\"Cancelar\"\n                value={idSector}\n              >\n                {\n                  sectores != null  ?\n                    sectores.map(function (item, index) {\n                      return <IonSelectOption key={index} value={item.id}>{item.Sector}</IonSelectOption>\n                    }) :\n                    <IonSelectOption disabled>\n                      Sin Sectores\n                    </IonSelectOption>\n                }\n              </IonSelect>\n            </IonItem>\n          </IonCardHeader>\n          <IonCardContent >\n            <IonItemDivider >\n              {showPagination ? <IonGrid>\n                <IonRow>\n                  <IonCol size=\"2\">\n                    <IonButton shape=\"round\" color=\"danger\" size=\"small\" onClick={busqueda ? handlePreviousPageBusqueda : handlePreviousPage} /* disabled={getPuntero() == 0} */>\n                      <IonIcon icon={arrowBackOutline} size=\"small\" ></IonIcon>\n                    </IonButton></IonCol>\n                  <IonCol size=\"8\"><IonLabel>Resultados: Pagina {busqueda ? getPunteroBusqueda() + 1 : getPuntero() + 1} de {paginas}</IonLabel></IonCol>\n                  <IonCol size=\"2\">\n                    <IonButton shape=\"round\" color=\"danger\" onClick={busqueda ? handleNextPageBusqueda : handleNextPage} /* disabled = {getPuntero()+1==getNumeroPaginas()} */>\n                      <IonIcon icon={arrowForwardOutline} size=\"small\" ></IonIcon>\n                    </IonButton>\n                  </IonCol>\n                </IonRow>\n              </IonGrid> : <IonLabel className=\"center\" class=\"ion-text-center\" >Mostrando Resultados</IonLabel>\n              }\n            </IonItemDivider>\n            <IonList >\n              {\n                lecturas.map(function (item, index) {\n                  let papas = getCuentasPapas();\n                  let arrayData = functionValidarLectura(parseInt(item.Estatus),parseInt(item.M_etodoCobro));\n                  let cuentaPapa = String(papas).includes(item.id);\n                  if(cuentaPapa){\n                    arrayData[0] += \"Desarrollo\";  \n                  }\n                  return <div className = { ( cuentaPapa || arrayData[1]) ? 'cuotaFija':''} key={index} onClick={() => {  abrirCapturaDatos(item.id, item.Contribuyente, item.ContratoVigente, item.Medidor,item.M_etodoCobro,cuentaPapa) }}>\n                    <IonItem detail={true} >\n                      <IonList>\n                        <IonLabel>{item.Contribuyente}</IonLabel>\n                        <p>Contrato: {item.ContratoVigente},\n                           Medidor: {item.Medidor}, \n                           Toma: {item.Toma}\n                           &nbsp;&nbsp;&nbsp;&nbsp;\n                           {\n                             (cuentaPapa || arrayData[1]) ? <IonNote style ={{fontsize: 20}} color=\"danger\">{arrayData[0]}</IonNote> :\"\"\n                           }\n                        </p>\n                      </IonList>\n                    </IonItem>\n                  </div>\n                })\n              }\n            </IonList>\n          </IonCardContent>\n        </IonCard>\n        <IonAlert\n          cssClass=\"my-custom-class\"\n          header={tipoMessage}\n          message={message}\n          isOpen={message.length > 0}\n          backdropDismiss={false}\n          buttons={hideAlertButons ? [{ text: \"Aceptar\", handler: () => { setMessage(\"\") } }] : alertButtons}\n        />\n        <IonLoading\n          cssClass=\"my-custom-class\"\n          isOpen={loading}\n          onDidDismiss={() => { setLoading(false); }}\n          message=\"Por favor espere\"\n        />\n        <IonAlert\n          cssClass=\"my-custom-class\"\n          header={\"ERROR\"}\n          message={'Para poder hacer uso de todas las funciones de la aplicaciòn por favor acepta los permisos solicitados por la misma'}\n          isOpen={!permissions}\n        />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default FormDatosTomaPage;","import { useCamera, } from '@capacitor-community/react-hooks/camera';\nimport { CameraResultType, CameraSource} from '@capacitor/core';\nimport { Geolocation, Geoposition } from '@ionic-native/geolocation';\nexport function useTakePhoto( ) {\n  const { getPhoto } = useCamera();\n  const takePhoto = async () => {\n    const cameraPhoto = await getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 50,\n    });\n    return cameraPhoto;\n  }\n  return {\n    takePhoto\n  }\n}\nexport async function generarFechas(anio: number) {\n  let result = new Array;\n  let listaMeses = new Array;\n  listaMeses = [\n    {\n      id: 1,\n      mes: \"Enero\"\n    }, {\n      id: 2,\n      mes: \"Febrero\"\n    },\n    {\n      id: 3,\n      mes: \"Marzo\"\n    },\n    {\n      id: 4,\n      mes: \"Abril\"\n    }, {\n      id: 5,\n      mes: \"Mayo\"\n    }, {\n      id: 6,\n      mes: \"Junio\"\n    }, {\n      id: 7,\n      mes: \"Julio\"\n    }, {\n      id: 8,\n      mes: \"Agosto\"\n    }, {\n      id: 9,\n      mes: \"Septiembre\"\n    }, {\n      id: 10,\n      mes: \"Octubre\"\n    }, {\n      id: 11,\n      mes: \"Noviembre\"\n    }, {\n      id: 12,\n      mes: \"Diciembre\"\n    }]\n  let listaAnios = generarAnios(anio);\n  result.push({ 'Meses': listaMeses });\n  result.push({ 'Anios': listaAnios });\n  return result;\n}\nexport function generarAniosPosterior(anio: number) {\n  let listaAnios = new Array;\n  let anioActual = new Date().getFullYear() + 1;\n  let idAnio = 1;\n  for (let anios = anio; anios <= anioActual; anios++) {\n    listaAnios.push({ 'id': idAnio, anio: anios });\n    idAnio++;\n  }\n  return listaAnios;\n}\nexport function obtenerBase64(path: string) {\n  let imgEncode = leerArchivo(path);\n  return imgEncode;\n}\nasync function leerArchivo(path: string) {\n  let file = await fetch(path);\n  let blobFile = await file.blob();\n  let imgEncode = await convertBase64(blobFile);\n  return imgEncode;\n}\nasync function convertBase64(blobFile: Blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader;\n    reader.onerror = reject;\n    reader.onloadend = () => {\n      let baseSplit  = reader.result;/* ?.toString().split(',')[1] */\n      resolve(baseSplit);\n    }\n    reader.readAsDataURL(blobFile);\n  })\n}\nexport function generarAnios(defaultAnio: number) {\n  let listaAnios = new Array;\n  let menorAnio = (defaultAnio - 10);\n  let anioMaximo = (defaultAnio + 3);\n  let idAnio = 1;\n  for (menorAnio; menorAnio <= anioMaximo; menorAnio++) {\n    listaAnios.push({ 'id': idAnio, anio: menorAnio });\n    idAnio++;\n  }\n  return listaAnios;\n\n}\nexport async function obtenerCoordenadas() {\n  try {\n    let coords = await Geolocation.getCurrentPosition();\n  return coords.coords;\n  } catch (err) {\n    throw err;\n  }\n}\nexport function zeroFill( number:string,width:number = 9){\n  while(number.length < width){\n    number = \"0\"+number;\n  }\n  return number;\n}","import React, { useEffect, useState } from \"react\";\nimport {\n    IonAlert,\n    IonButton,\n    IonButtons,\n    IonCard,\n    IonCardContent,\n    IonCardHeader,\n    IonCol,\n    IonContent,\n    IonDatetime,\n    IonGrid,\n    IonHeader,\n    IonIcon,\n    IonImg,\n    IonInput,\n    IonItem,\n    IonLabel,\n    IonLoading,\n    IonMenuButton,\n    IonPage,\n    IonRow,\n    IonSelect,\n    IonSelectOption,\n    IonTitle,\n    IonToolbar,\n    useIonToast,\n    IonChip,\n    useIonViewWillEnter,\n    useIonViewDidEnter,\n    IonRippleEffect\n} from '@ionic/react'\nimport { camera, checkmarkCircle, saveOutline, pencil, chevronBackCircleOutline } from 'ionicons/icons';\nimport './captura-de-lectura.page.css';\nimport MenuLeft from '../../components/left-menu';\nimport { extraerDatosLectura, guardarCaptura, obtenerSiguienteIndice, obtenerPromedioConsumo, guardarCuotaFija, ConfiguracionEvidencias} from '../../controller/apiController';\nimport { useTakePhoto, generarFechas, obtenerBase64, generarAniosPosterior, generarAnios, obtenerCoordenadas } from '../../utilities';\nimport { getDatosLecturaStorage, verifyingSession, contribuyenteBuscado, setContribuyenteBuscado, setPuntero, setNumeroPaginas, deleteContratos } from '../../controller/storageController';\nimport { useHistory } from 'react-router';\nimport './captura-de-lectura.page.css';\nconst CapturaDeLectura: React.FC = () => {\n    const history = useHistory();\n    const [datosContribuyente, setDatosContribuyente] = useState(Object);\n    const [lecturaAnterior, setLecturaAnterior] = useState(Number);\n    const [message, setMessage] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [anomalias, setAnomalias] = useState<any[]>([])\n    const [consumo, setConsumo] = useState(Number);\n    const [pressentToast, dismissToast] = useIonToast();\n    const [listaMeses, setlistaMeses] = useState<any[]>([]);\n    const [mesDefautl, setMesDefault] = useState('');\n    const [indexMes, setIndexMes] = useState(Number);\n    const [anioActual, setAnioActual] = useState(Number);\n    const [indexAnioActual, setIndexAnioActual] = useState(11);\n    const [anioLectura, setAnioLectura] = useState(Number);\n    const [listaAnios, setListaAnios] = useState<any[]>([]);\n    const { takePhoto } = useTakePhoto();\n    const [bloquearCampos, setBloquearcampos] = useState(false);\n    const [btnInactivo, setBtnInactivo] = useState(false);\n    const [comparaMes, setComparaMes] = useState(Number)\n    const [comparaAnio, setComparaAnio] = useState(Number)\n    const [seleccionAnomalia, setSeleccionAnomalia] = useState(Number);\n    const [lecturaActual, setLecturaActual] = useState(Number);\n    const [tipoLectura, setTipoLectura] = useState(Number);\n    const [mesLectura, setMesLectura] = useState(Number);\n    const [refreshControl, setRefreshControl] = useState(false);\n    const [defaultLectura, setDefaultLectura] = useState(Number);\n    const [defaultAnomalia, setDefaultAnomalia] = useState(Number);\n    const [enbleButtons, setEnbleButtons] = useState(false);\n    const [tipoMessage, setTipoMessage] = useState(\"MENSAJE\");\n    const [promedioLectura, setPromedioLectura] = useState(Number);\n    const [toma, setToma] = useState(String);\n    const [municipio, setMunicipio] = useState(String);\n    const [localidad, setLocalidad] = useState(String);\n    const [direccion, setDireccion] = useState(String);\n    const [bloqueoAnomalias, setBloqueoAnomalias] = useState(false);\n    const [consumoMinimo,setConsumoMinimo] = useState(20);\n    const [activarMenu,setActivarMenu] = useState(true);\n    const [ fija, setFija ] = useState(false);\n    const sinFoto = \"https://media.istockphoto.com/vectors/vector-camera-icon-with-photo-button-on-a-white-background-vector-id1270930870?k=20&m=1270930870&s=170667a&w=0&h=kG9xDNMeLFQJeDrg-ik-HkvaHcOy2HjZe8xaDMB-dk0=\";\n\n    //INDEV: Bloque de fotos para tomas\n    const [ fotoMedidorEncode, setFotoMedidorEncode ] =  useState(String);\n    const [ fotoMedidorPreview, setFotoMedidorPreview ] = useState(String);\n    //NOTE: Foto de la facha\n    const [ fotoFachadaEncode, setFotoFachadaEncode ] = useState(String);\n    const [ fotoFachadaPreview, setFotoFachadaPreview ] = useState(String);\n    //NOTE: Foto perspectiva amplia\n    const [ fotoCalleEncode, setFotoCalleEncode ] = useState(String);\n    const [ fotoCallePreview, setFotoCallePreview ] = useState(String);\n    //NOTE: Error de las fotos\n    const [ errorFotoUI, setErrorFotosU ] = useState(\"\");\n\n\n    const alertButtons = [\n        {\n            text: \"Reintentar\", handler: () => {\n                setMessage(\"\");\n                setTipoMessage(\"Error\");\n                isSessionValid();\n            }\n        },\n        {\n            text: \"Cancelar\"\n        }];\n    const fecha = new Date();\n    const isSessionValid = () => {\n        let valid = verifyingSession();\n        logOut(valid)\n    }\n    useEffect(() => { isSessionValid(); }, [refreshControl])\n    useEffect(() => {\n        //FIXME: obtenemos los datos actuales\n        if (refreshControl) {\n            setConsumo(0)\n        }\n    }, [defaultLectura])\n    useEffect(() => { console.log(promedioLectura) }, [promedioLectura])\n    const logOut = (valid: boolean) => {\n        if (!valid) {\n            setTipoMessage(\"Sesión no valida\");\n            setMessage(\"Inicie sesión por favor\\nRegresando...\");\n            setTimeout(() => {\n                setTipoMessage(\"ERROR\");\n                setMessage('');\n                history.replace(\"/home\");\n            }, 2500)\n        } else {\n            setLoading(true);\n            cargarContribuyente();\n            setDefaultLectura(0);\n        }\n    }\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\n    const cargarContribuyente = async () => {\n        let result = getDatosLecturaStorage();\n        if(result.contribuyente == \"null\"){\n            result.contribuyente = \"\";\n        }\n        setDatosContribuyente(result);\n        extraerLectura(result.idLectura);\n        setRefreshControl(false);\n    }\n    const extraerLectura = async (idLectura: any) => {\n        await obtenerPromedioConsumo().then( async (promedio)=>{\n            promedio = parseFloat(promedio).toFixed(2);\n            setPromedioLectura(parseInt(String(promedio)));\n            await extraerDatosLectura(idLectura)\n            .then((result) => {\n                setFija(result.Mensaje[0].M_etodoCobro == \"1\");\n                if(result.Mensaje != 300){\n                    setToma(result.Mensaje[0].Toma)\n                    setMunicipio(result.Mensaje[0].Municipio);\n                    setLocalidad(result.Mensaje[0].Localidad);\n                    setDireccion(result.Mensaje[0].Direccion);\n                    //FIXED: hay un bug para los contraros sin lecturas y estatus de letura 1\n                    let data = parseInt(result.Mensaje[0]['A_no']);\n                    let mesLectura = parseInt(result.Mensaje[0].Mes);\n                    //NOTE: si todo es NaN seleccionamos la fecha actual\n                    isNaN(data) ? data = fecha.getFullYear() : data = data;\n                    isNaN( mesLectura ) ? mesLectura = fecha.getMonth() : mesLectura = mesLectura;\n                    setMesLectura(mesLectura);\n                    setAnioLectura(data);\n                    cargarFechas(data, result.ValorLectura[0].Valor, mesLectura);\n                    setLecturaAnterior(result.Mensaje[0].LecturaActual != null ? parseInt(result.Mensaje[0].LecturaActual) : 0 );\n                }else{\n                    cargarFechas(fecha.getFullYear(), \"1\" , fecha.getMonth());\n                }\n                setBloquearcampos(result.BloquearCampos[0].Valor == 1);\n                setAnomalias(result.Anomalias);\n                setTipoLectura(result.ValorLectura[0].Valor)\n                setConsumo(0);\n            })\n            .catch((err) => {\n                console.log(\"aqui esta el error\");\n                let errorMessage = err.message + \"\";\n                if (errorMessage.includes(\"API\")) {\n                    setEnbleButtons(true);\n                }\n                setMessage(err.message);\n            })\n            .finally(() => { setLoading(false) });\n        }).catch((error)=>{\n\n        }).finally(()=>{setLoading(false)})\n        //Fin de extraer Consumo promedio del contribuyente\n    }\n    const cargarFechas = async (anioDefault: number, tipoLectura: string, mes: number) => {\n        const mesActual = (parseInt(fecha.getMonth().toString()));\n        await generarFechas(anioDefault).then((result) => {\n            setMesDefault(result[0].Meses[mesActual].mes);\n            setIndexMes(result[0].Meses[mesActual].id);\n            setlistaMeses(result[0].Meses);\n            setListaAnios(result[1].Anios);\n            // Se debe separar por casos\n            switch (tipoLectura) {\n                case '1':\n                    lecturaCasoUno(anioDefault, mes, result[0].Meses);\n                    break;\n                case '2':\n                    lecturaCasoDos(anioDefault, result[0].Meses[mesActual].id, result[0].Meses, result[1].Anios);\n                    break;\n                case '3':\n                    lecturaCasoTres(result[0].Meses);\n                    break;\n            }\n        })\n    }\n    const calcularConsumo = (consumido: number) => {\n        let result = consumido - lecturaAnterior;\n        setLecturaActual(consumido);\n        setDefaultLectura(consumido)\n        isNaN(result) ? setConsumo(0) : setConsumo(result)\n    }\n    const lecturaCasoUno = (anioResult: number, mes: number, meses: any[]) => {\n        let anhioLista = anioResult;\n        let esteMes = mes + 1;\n        setComparaAnio(anhioLista); //NOTE: se envia este compara anio al metodo de verificacion\n        let listaAnios = generarAniosPosterior(anioResult);\n        setListaAnios(listaAnios);\n        if (esteMes == 13) {\n            anhioLista = anioResult + 1;\n            esteMes = meses[0].id;\n            setMesDefault(meses[0].mes);\n            setComparaAnio(anioResult + 1);\n        }\n        setComparaMes(esteMes); //NOTE: se envia este compara anio al metodo de verificacion\n        setIndexMes(esteMes);\n\n        listaAnios.map((item, index) => {\n            if (item.anio == anhioLista) {\n                setIndexAnioActual(item.id);\n                setAnioActual(item.anio)\n            }\n        })\n        if (lecturaAnterior == null) {\n            setLecturaAnterior(0);\n        }\n    }\n    const lecturaCasoDos = (anioResult: number, mesResult: number, meses: any[], anios: any[]) => {\n        // se tomara la fecha actual para generar la lectura\n        let anhioLista = fecha.getFullYear();\n        let esteMes = fecha.getMonth();\n        meses.map((item, index) => {\n            if (item.id == esteMes) {\n                setIndexMes(item.id);\n                setMesDefault(item.mes);\n            }\n        })\n        setComparaMes(fecha.getMonth());    //NOTE: se envia este compara anio al metodo de verificacion\n        setComparaAnio(fecha.getFullYear());    //NOTE: se envia este compara anio al metodo de verificacion\n        //Generar lista de los años\n        let listaAnios = generarAnios(anhioLista);\n        setListaAnios(listaAnios);\n        listaAnios.map((item, index) => {\n            if (anhioLista == item.anio) {\n                setIndexAnioActual(item.id);\n                setAnioActual(item.anio);\n            }\n        })\n        if (lecturaAnterior == null) {\n            setLecturaAnterior(0);\n        }\n    }\n    const lecturaCasoTres = (meses: any[]) => {\n        // se Obtienen las fechas actuales\n        let mesComparacion = fecha.getMonth() + 1\n        setComparaMes(mesComparacion);  //NOTE: se envia este compara anio al metodo de verificacion\n        let anioComparar = fecha.getFullYear()\n        let esteMes = fecha.getMonth() + 1\n\n        if (esteMes == 13) {\n            anioComparar = fecha.getFullYear() + 1\n            esteMes = meses[0].id;\n            setMesDefault(meses[0].mes);\n            setComparaAnio(anioComparar);\n            setComparaMes(meses[0].id);\n        }\n\n        setAnioActual(anioComparar);\n        setComparaAnio(anioComparar);     //NOTE: se envia este compara anio al metodo de verificacion\n        setIndexMes(esteMes);\n        let listaAnios = generarAnios(anioComparar);\n        setListaAnios(listaAnios);\n        listaAnios.map((item, index) => {\n            if (item.anio == anioComparar) {\n                setIndexAnioActual(item.id);\n            }\n        })\n        if (lecturaAnterior == null) {\n            setLecturaAnterior(0);\n        }\n    }\n    const siguienteLectura = async () => {\n        await obtenerSiguienteIndice(datosContribuyente.idLectura)\n            .then((result) => {\n                if (result) {\n                    /*setTipoMessage(\"Mensaje\");\n                    setMessage(\"Lectura guardada\\nPasando a siguiente lectura...\");\n                    setTimeout(() => {\n                        setLoading(false);\n                        //Limpiando Componentes\n                        setActivarGaleria(false)\n                        setDefaultLectura(0)\n                        setFotoActiva('');\n                        setFotosCodificadas([]);\n                        setFotosEvidencia([]);\n                        setIndexFoto(0);\n                        setSeleccionAnomalia(-1)\n                        setDefaultAnomalia(-1)\n                        setRefreshControl(true);\n                        handleCancelAnomalia();\n                    }, 1000);*/\n                    setTipoMessage(\"Mensaje\");\n                    setMessage(\"Final de los datos en la pagina\\nRegresado...\");\n                    setPuntero(0);\n                    setNumeroPaginas(0);\n                    deleteContratos();\n                    setTimeout(() => {\n                        history.replace(\"/form-datos-toma.page\");\n                    }, 2500);\n                } else {\n                    setTipoMessage(\"Mensaje\");\n                    setMessage(\"Final de los datos en la pagina\\nRegresado...\");\n                    setPuntero(0);\n                    setNumeroPaginas(0);\n                    deleteContratos();\n                    setTimeout(() => {\n                        history.replace(\"/form-datos-toma.page\");\n                    }, 2500);\n                }\n\n            }).catch(err => {\n                setMessage(err.message);\n            }).finally(() => {\n                setLoading(false);\n            })\n    }\n    const mensajeConsumoCero = async () => {\n        //let value = contribuyenteBuscado();\n        /*if (!value) {\n            if (consumo <= 0) {\n                setEnbleButtons(false);\n                setTipoMessage(\"Mensaje\");\n                setMessage(\"El Consumo se calculo como el promedio de 12 meses\");\n                setTimeout(() => {\n                    setMessage(\"\");\n                    siguienteLectura();\n                }, 2000);\n            } else {\n                siguienteLectura();\n            }\n        } else {\n\n        }*/\n        setLoading(false);\n        setTipoMessage(\"Mensaje\");\n        setMessage(\"Lectura guardada\\nRegresado...\");\n        setTimeout(() => {\n            setContribuyenteBuscado(false);\n            history.replace(\"/form-datos-toma.page\");\n        }, 2500);\n    }\n    //Manejadores de la interfaz\n    const handleBtnGuardar = async ( fotos:any  ) => {\n        try {\n            setLoading(true);\n            setTimeout(() => {\n                if (loading) {\n                    throw 0;\n                }\n            }, 20000);\n            let mes = fecha.getMonth() + 1;\n                let anio = fecha.getFullYear();\n                let coords = await obtenerCoordenadas();\n                let validarConsumo = procesoConsumo(); // Falta la validacion del consumo\n                console.log(lecturaActual);\n                //NOTE: Verificamos la cuotafija\n                if( !fija ){\n                    let datosCapturados = {\n                        route: anio + \"\" + mes + \"/\",\n                        lecturaAnterior:  lecturaAnterior,\n                        lecturaActual: bloqueoAnomalias ? lecturaAnterior : lecturaActual,\n                        consumoFinal: validarConsumo,\n                        mesCaptura: indexMes,\n                        anhioCaptura: anioActual,\n                        fechaCaptura: fecha,\n                        anomalia: seleccionAnomalia == 0 ? \"\" : seleccionAnomalia,\n                        tipoCoordenada: 1,\n                        arregloFotos: fotos,\n                        comparaMes: comparaMes,\n                        comparaAnio: comparaAnio,\n                        lectura: 1,\n                        arrayAnios: listaAnios,\n                        indexAnio: indexAnioActual,\n                        mesLectura: mesLectura,\n                        nCliente: datosContribuyente.nCliente,\n                        token: datosContribuyente.token,\n                        idUsuario: datosContribuyente.idUsuario,\n                        idToma: datosContribuyente.idLectura,\n                        Latidude:  String(coords.latitude) ,\n                        Longitude: String(coords.longitude),\n                    }\n                    console.log(datosCapturados);\n                    await guardarCaptura(datosCapturados)\n                        .then((result) => { mensajeConsumoCero(); })\n                        .catch((err) => { setLoading(false); setMessage(err.message) });\n                }else{\n                    guardarDatosCuotaFija(validarConsumo,coords,fotos);\n                }\n        } catch (err) {\n            console.log(err);\n            setLoading(false);\n            setMessage(`Tiempo de espera agotado.\n            Asegúrese de activar la ubicación del dispositivo`)\n        }\n    }\n    //NOTE: metodo para enviar los datos de la cuotafija\n    const guardarDatosCuotaFija = async ( consumo:Number, coords: any, fotos:any ) => {\n        //NOTE: creamos el formato de los datos\n        let datos = {\n            LecturaActual: lecturaActual,\n            LecturaAnterior: lecturaAnterior,\n            Cliente: datosContribuyente.nCliente,\n            Consumo: consumo,\n            Anio: anioActual,\n            padron: datosContribuyente.idLectura,\n            mes: indexMes,\n            anomalia: seleccionAnomalia == 0 ? \"\" : seleccionAnomalia,\n            idUsuario: datosContribuyente.idUsuario,\n            Fotos: fotos,\n            tipoCoordenada: 1,\n            Latidude:  String(coords.latitude),\n            Longitude: String(coords.longitude),\n        };\n        await guardarCuotaFija(datos)\n        .then(()=>{\n            mensajeConsumoCero();\n        }) \n        .catch(( error )=>{\n            setLoading(false); setMessage(error.message);\n        }).finally(()=>{\n            setLoading(false);\n        })\n    }\n    const handleSelectAnio = (value: number) => {\n        listaAnios.map((item, index) => {\n            if (item.id == value) {\n                setAnioActual(item.anio)\n                setIndexAnioActual(item.id)\n            }\n        })\n    }\n    const handleSelectMes = (value: number) => {\n        listaMeses.map((item, index) => {\n            if (item.id == value) {\n                setIndexMes(item.id);\n                setMesDefault(item.mes);\n            }\n        })\n    }\n    const handleSelectAnomalia = (seleccionAnomalia: number) => {\n        setSeleccionAnomalia(seleccionAnomalia);\n        setDefaultAnomalia(seleccionAnomalia);\n        setConsumo(promedioLectura);\n        setBloqueoAnomalias(seleccionAnomalia != 0);\n        console.log(defaultLectura);\n        anomalias.map((item, index) => {\n            if (item.id == seleccionAnomalia) {\n                    console.log(item.ActualizarAdelante + \" - \" + item.ActualizarAtras + \" Se activa: \" + (parseInt(item.ActualizarAdelante) == 0 || parseInt(item.ActualizarAtras) == 0));\n                    if(parseInt(item.ActualizarAdelante) == 1 || parseInt(item.ActualizarAtras) == 1 ){\n                        setBloqueoAnomalias(false);\n                        setLecturaActual( defaultLectura );\n                    }else{\n                        setBloqueoAnomalias(true);\n                        setLecturaActual( defaultLectura );\n                    }\n                    setConsumoMinimo( parseInt(item.Minima) );\n                    if(defaultLectura != 0){\n                        console.log(\"Procesando Consumo\");\n                        setConsumo(procesoConsumo());\n                    }\n                    if(seleccionAnomalia == 24){\n                        setConsumo(promedioLectura);\n                    }\n            }\n        });\n    }\n    const handleCancelAnomalia = () => { \n        setDefaultAnomalia(0);\n        setBloqueoAnomalias(false);\n    }\n    //NOTE: 1 = Medidor, 2 = Fachada, 3 = Calle( )  \n    const handleAbrirCamera = async ( tipoFoto: number  ) => {\n        setLoading(true);\n        await takePhoto()\n            .then(async (result) => {\n                setLoading(true);\n                agregarImagenEncode(result.webPath + \"\", tipoFoto);\n            })\n            .catch((err) => {\n                let errorType = err.message + \"\";\n                if (errorType.includes(\"denied\")) {\n                    setMessage(\"La aplicación no tiene permisos para usar la cámara\")\n                }\n            }).finally(() => { setLoading(false) })\n    }\n    //llamada al metodo de convercion\n    const agregarImagenEncode = async (imgDir: string, tipoFoto:number) => {\n        await obtenerBase64(imgDir).then((result) => {\n            switch (tipoFoto) {\n                case 1:\n                    setFotoMedidorEncode(String(result));\n                    setFotoMedidorPreview(imgDir);\n                    break;\n                case 2:\n                    setFotoFachadaEncode(String(result));\n                    setFotoFachadaPreview(imgDir);\n                    break;\n                case 3: \n                    setFotoCalleEncode(String(result));\n                    setFotoCallePreview(imgDir);\n                    break;\n            }\n\n        }).finally(() => { setLoading(false) })\n    }\n    const formatindex = (index: string) => {\n        let result = \"\";\n        let numIndex = Number(index);\n        if (isNaN(numIndex)) {\n            result = '00';\n        } else {\n            numIndex <= 9 ? result = String(\"0\" + numIndex) : result = String(numIndex);\n        }\n        return result;\n    }\n    const btnDetallesContribuyente = () => {\n        history.push(\"/datos-contribuyente.page\");\n    }\n    const btnRegresar = () =>{\n        history.replace(\"/form-datos-toma.page\");\n    }\n    const procesoConsumo = () => {\n        let consumoProcesado = 0;\n        if(seleccionAnomalia != 0){\n            if(bloqueoAnomalias){ // este es el proceso de las anomalias sin capturas\n                if ( promedioLectura < consumoMinimo ){\n                    consumoProcesado = consumoMinimo;\n                }else{\n                    consumoProcesado = promedioLectura;\n                }\n            }else{ //este el el proceso de las anomalias con captura\n                if(consumo < promedioLectura){\n                    consumoProcesado = promedioLectura;\n                }\n                if(promedioLectura < consumoMinimo){\n                    consumoProcesado = consumoMinimo;\n                }\n                if(consumoMinimo < consumo){\n                    consumoProcesado =  consumo;\n                }\n            }\n        }else{ // este es el proceso de captura normal\n            consumoProcesado = consumo;\n        }\n        if(seleccionAnomalia == 47){\n            consumoProcesado = consumoMinimo;\n        }\n        if(seleccionAnomalia == 99){\n            if(lecturaActual < consumoMinimo){\n                consumoProcesado = consumoMinimo;\n            }else{\n                consumoProcesado = lecturaActual;\n            }\n        }\n        if(seleccionAnomalia == 24){\n            consumoProcesado = promedioLectura;\n        }\n        if(seleccionAnomalia == 40){ //Nuevo forma de anomalia\n            if(lecturaActual < consumoMinimo){\n                consumoProcesado = consumoMinimo;\n            }else{\n                consumoProcesado = lecturaActual;\n            }\n        }\n        setConsumo(consumoProcesado);\n        return consumoProcesado;\n    }\n    //INDEV: Bloque para lanzar la camara dependiendo del tipo de foto\n    const FotoToma = () =>{\n        //NOTE: lanzamos la camara con el tipo 1\n        handleAbrirCamera(1);\n    } \n    const FotoFachada = () =>{\n        handleAbrirCamera(2);\n    }\n    const FotoCalle = () =>{\n        handleAbrirCamera(3);\n    }\n    const validarFotosTomadas = () => {\n        let errorFotos = \"\";\n        if( fotoMedidorEncode.length == 0 ){\n            errorFotos += \"FM,\";\n        }\n        if( fotoFachadaEncode.length == 0 ){\n            errorFotos += \"FF,\";\n        }\n        if( fotoCalleEncode.length == 0 ){\n            errorFotos += \"FC,\";\n        }\n        if(errorFotos.length != 0){\n            setMessage(\"¡Favor de capturar las evidencias!\");\n            setTipoMessage(\"Mensaje\");\n            console.log(errorFotos);\n            setErrorFotosU(errorFotos);\n        }else{\n            //NOTE: se forma el json para el envio de las imagenes\n            setErrorFotosU(\"\");\n            let jsonImagenes = {\n                \"Toma\": fotoMedidorEncode,\n                \"Fachada\": fotoFachadaEncode,\n                \"Calle\": fotoCalleEncode\n            }\n            handleBtnGuardar(jsonImagenes);\n        }\n    }\n    return (\n        <IonPage>\n      {\n        activarMenu ? \n        <MenuLeft />: <></>\n      }\n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                    <IonTitle>Captura de lectura</IonTitle>\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\n                        <IonMenuButton ></IonMenuButton>\n                    </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <IonCard>\n                    <IonCardHeader className=\"headerData\">\n                        <div className=\"datosContribuyete\">\n                            <h3>{datosContribuyente.contribuyente}</h3>\n                            <p>Contrato: {datosContribuyente.contratoVigente}, &nbsp;&nbsp; Medidor: {datosContribuyente.medidor == \"null\" ? \"S/N\" : datosContribuyente.medidor }, &nbsp;&nbsp; Toma: {toma}</p>\n                            <p>Municipio: {municipio}, &nbsp;&nbsp; Localidad: {localidad}</p>\n                            <p>{`Dirección: ${direccion}`}</p>\n                            <IonGrid>\n                                <IonRow>\n                                    <IonCol size=\"10\">\n                                    </IonCol>\n                                    <IonCol size=\"1\">\n                                        <IonChip color=\"danger\" onClick={btnDetallesContribuyente}>\n                                            <IonIcon icon={pencil} className=\"btnEditar\" />\n                                        </IonChip>\n                                    </IonCol>\n                                </IonRow>\n                            </IonGrid>\n                        </div>\n                    </IonCardHeader>\n                    <IonCardContent>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Lectura anterior:</IonLabel>\n                            <IonInput disabled className=\"disabledInput\">{`${lecturaAnterior}`}</IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Lectura actual:</IonLabel>\n                            <IonInput disabled = {bloqueoAnomalias} type=\"number\" placeholder=\"0\" value={defaultLectura} onIonChange={e => { calcularConsumo(parseFloat(e.detail.value + \"\")) }}></IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Consumo:</IonLabel>\n                            <IonInput disabled className=\"disabledInput\" value={consumo}></IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Fecha de lectura:</IonLabel>\n                            <IonDatetime disabled displayFormat=\"DD/MM/YYYY\" min=\"2000\" max=\"2026\" value={`${fecha}`}></IonDatetime>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Anomalía</IonLabel>\n                            <IonSelect interface=\"action-sheet\" onIonCancel = {handleCancelAnomalia} value={defaultAnomalia} onIonChange={e => { handleSelectAnomalia(e.detail.value) }}>\n                                {\n                                    anomalias.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.id}>\n                                            {`${item.clave <= 10 ? formatindex(item.clave) : item.clave} - ${item.descripci_on}`}\n                                        </IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <br />\n                        <IonGrid>\n                                <IonRow>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Toma </IonLabel>\n                                        <IonCard onClick = { FotoToma } className = { errorFotoUI.includes(\"FM,\") ? \"cardError\" : \"\" } >\n                                            <IonImg className=\"imagenViwer\"  src = { fotoMedidorPreview != \"\" ? fotoMedidorPreview : sinFoto } ></IonImg>\n                                            <IonRippleEffect></IonRippleEffect>\n                                        </IonCard>\n                                    </IonCol>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Facha </IonLabel>\n                                        <IonCard onClick = { FotoFachada } className = { errorFotoUI.includes(\"FF,\") ? \"cardError\" : \"\" } >\n                                            <IonImg className=\"imagenViwer\"  src ={ fotoFachadaPreview != \"\" ? fotoFachadaPreview : sinFoto } >  </IonImg>\n                                        </IonCard>\n                                        <IonRippleEffect></IonRippleEffect>\n                                    </IonCol>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Calle </IonLabel>\n                                        <IonCard onClick = { FotoCalle } className = { errorFotoUI.includes(\"FC,\") ? \"cardError\" : \"\" } >\n                                            <IonImg className=\"imagenViwer\"  src ={ fotoCalleEncode != \"\" ? fotoCalleEncode : sinFoto } >  </IonImg>\n                                        </IonCard>\n                                        <IonRippleEffect></IonRippleEffect>\n                                    </IonCol>\n                                </IonRow>\n                        </IonGrid>\n                        <IonItem>\n                            <IonLabel>Mes: </IonLabel>\n                            <IonSelect interface=\"action-sheet\" value={indexMes} selectedText={`${mesDefautl}`} disabled={bloquearCampos} onIonChange={e => handleSelectMes(e.detail.value)}>\n                                {\n                                    listaMeses.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.id} >{item.mes}</IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <IonItem>\n                            <IonLabel>Año: </IonLabel>\n                            <IonSelect interface=\"action-sheet\" value={indexAnioActual} selectedText={`${anioActual}`} disabled={bloquearCampos} onIonChange={e => handleSelectAnio(e.detail.value)}>\n                                {\n                                    listaAnios.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.id}>{item.anio}</IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <br />\n                        <div className=\"centrar\">\n                            <IonGrid>\n                                <IonRow>\n                                    <IonCol size=\"6\">\n                                        <IonButton color=\"secondary\" onClick = {btnRegresar}>\n                                            <IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon>\n                                            Regresar\n                                        </IonButton>\n                                    </IonCol>\n                                    <IonCol size=\"6\">\n                                        <IonButton color=\"danger\" onClick={validarFotosTomadas} disabled={btnInactivo}>\n                                            Guardar\n                                            <IonIcon icon={saveOutline} slot=\"end\"></IonIcon>\n                                        </IonButton>\n                                    </IonCol>\n                                </IonRow>\n                            </IonGrid>\n\n                        </div>\n                    </IonCardContent>\n                </IonCard>\n                <IonAlert\n                    cssClass=\"my-custom-class\"\n                    header={tipoMessage}\n                    message={message}\n                    isOpen={message.length > 0}\n                    backdropDismiss={false}\n                    buttons={enbleButtons ? alertButtons : [{ text: 'Aceptar', handler: () => { setMessage(\"\") } }]}\n                />\n                <IonLoading\n                    cssClass=\"my-custom-class\"\n                    isOpen={loading}\n                    onDidDismiss={() => { setLoading(false); }}\n                    message=\"Por favor espere\"\n                />\n            </IonContent>\n        </IonPage>\n    );\n}\n\nexport default CapturaDeLectura;","import { \n    IonAlert,\n    IonButton, \n    IonButtons, \n    IonCard, \n    IonCardContent, \n    IonCardHeader, \n    IonCol, \n    IonContent, \n    IonDatetime, \n    IonGrid, \n    IonHeader, \n    IonIcon, \n    IonItem, \n    IonItemDivider, \n    IonLabel, \n    IonList, \n    IonLoading, \n    IonMenuButton, \n    IonNote, \n    IonPage, \n    IonRippleEffect, \n    IonRow, \n    IonSelect, \n    IonSelectOption, \n    IonText, \n    IonTitle, \n    IonToolbar, \n    useIonViewDidEnter, \n    useIonViewWillEnter,\n} from \"@ionic/react\";\nimport React, { useEffect, useState } from \"react\";\nimport MenuLeft from '../../components/left-menu';\nimport { contractOutline, eyeOutline } from 'ionicons/icons';\nimport { historialFechas, historialLecturas} from '../../controller/apiController';\nimport { guardarDatosEditarLectura, verifyingSession, cerrarSesion, setFechasHistorialLectura, getFechasHistorialLectura } from '../../controller/storageController';\nimport { useHistory } from 'react-router-dom'\nimport { generarFechas } from \"../../utilities\";\nconst HistorialLecturas: React.FC = () => {\n    const fecha = new Date();\n    //NOTE: lista de los meses y anios \n    const [ anios, setAnios ] = useState<any[]>();\n    const [ meses, setMeses ] = useState<any[]>();\n    //NOTE: Manejadores de la interfaz\n    const [ anioSeleccionado, setAnioSeleccionado ] = useState(11);\n    const [ mesSeleccionado, setMesSeleccionado ] = useState(Number);\n    const [ fechaInicio, setFechaInicio ] = useState();\n    const [activarMenu , setActivarMenu ] = useState(true);\n    //NOTE: manejadores de listas\n    const [ listaReportes, setListaReportes ] = useState<any[]>();\n    //NOTE: manejadores de mensajes de errores\n    const [ mensaje, setMensaje ] = useState( String );\n    const [ loading, setLoading ] = useState( false );\n    const [ tipoMensaje, setTipoMensaje ] = useState( String ) \n\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\n    useEffect(()=>{\n        prepararPantalla();\n    },[]);\n    const prepararPantalla = async () =>{\n        let aniosMeses = await generarFechas(fecha.getFullYear());\n        setMeses(aniosMeses[0].Meses);\n        setAnios(aniosMeses[1].Anios);\n        setMesSeleccionado(fecha.getMonth() + 1);\n    }\n    const extraerHistorial = async () =>{\n        setLoading(true);\n        let fechaAnio = anios != null ? anios[anioSeleccionado-1].anio : fecha.getFullYear();\n        let fechas = {\n            anio: fechaAnio,\n            mes: mesSeleccionado\n        }\n        await historialLecturas(fechas)\n        .then(( result )=>{\n            setListaReportes(result);\n        })\n        .catch((error)=>{\n            setMensaje(error.message);\n            setTipoMensaje(\"ERROR\");\n        }).finally(()=>{\n            setLoading( false );\n        });\n    }\n    return (\n        <IonPage>\n            {\n                activarMenu ? \n                <MenuLeft /> : <></>\n            }\n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                    <IonTitle>Mis lecturas</IonTitle>\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\n                        <IonMenuButton ></IonMenuButton>\n                    </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <IonCard>\n                    <IonCardHeader >\n                        <IonTitle className = \"center\" > Historial de lecturas </IonTitle>\n                        <br />\n                        <IonRow className = \"bordeFecha\" >\n                            <IonCol size = \"6\" className = \"labelCalendario\" >\n                                <IonText > Seleccione el año: </IonText>\n                            </IonCol>    \n                            <IonCol size=\"6\" className = \"ion-activatable ripple-parent\">\n                                <div >\n                                    <IonSelect onIonCancel = { ()=>{setAnioSeleccionado(11)} }  interface = \"action-sheet\" value={ anioSeleccionado } onIonChange = {e=>{setAnioSeleccionado(e.detail.value)}} >\n                                        {\n                                            anios?.map((item,index)=>{\n                                                return <IonSelectOption value={ item.id } key = {index} >{ item.anio }</IonSelectOption>\n                                            })\n                                        }\n                                    </IonSelect>\n                                    <IonRippleEffect></IonRippleEffect>\n                                </div>\n                            </IonCol>\n                        </IonRow>\n                        <IonRow className = \"bordeFecha\" >\n                            <IonCol size=\"6\" class=\"labelCalendario\">\n                                <IonText> Seleccione mes: </IonText>\n                            </IonCol>\n                            <IonCol>\n                                <div>\n                                    <IonSelect onIonCancel = { () => { setMesSeleccionado(fecha.getMonth() + 1) }} interface = \"action-sheet\" value = { mesSeleccionado } onIonChange = {e => {setMesSeleccionado(e.detail.value)}} >\n                                        {\n                                            meses?.map((mes,item)=>{\n                                                return <IonSelectOption value={mes.id} key = {mes.id} >{ mes.mes }</IonSelectOption>\n                                            })\n                                        }\n                                    </IonSelect>\n                                </div>\n                            </IonCol> \n                        </IonRow>\n                        <IonRow>\n                            <IonCol className = \"center margintop\" >\n                                <IonButton color=\"danger\" expand = \"block\" onClick = { extraerHistorial } > <IonText> Buscar Cortes </IonText> <IonRippleEffect></IonRippleEffect> </IonButton>\n                            </IonCol>\n                        </IonRow>\n                    </IonCardHeader>\n                    <IonCardContent>\n                        {/*NOTE: contenedor lista*/ }\n                        <div style = {{flex:1,justifyContent:\"center\", borderWidth: 1, marginTop: 5 }} >\n                            <IonList className = \"borderList\" >\n                                {\n                                    listaReportes?.map((item,index)=>{\n                                        return <IonItem key = {index} >\n                                            <IonLabel>\n                                                <h2> {item.Nombre} </h2>\n                                                <p> Contrato: { item.ContratoVigente }, Fecha: { item.Fecha } </p>\n                                                <p> Contribuyente: { item.Contribuyente == \"\" ? \"No disponible\" : item.Contribuyente }, Tipo: {item.Toma} </p>\n                                                <IonNote slot = \"end\" color = {item.Estatus == 2 ? \"danger\" : \"primary\"} > {listaReportes[item.Estatus-1]} </IonNote>\n                                            </IonLabel>\n                                            </IonItem>\n                                    })\n                                }\n                            </IonList>\n                        </div>\n                    </IonCardContent>\n                </IonCard>\n                <IonLoading\n                cssClass=\"my-custom-class\"\n                isOpen={loading}\n                onDidDismiss={() => { setLoading(false); }}\n                message=\"Por favor espere\"\n                />\n                <IonAlert\n                cssClass=\"my-custom-class\"\n                header={tipoMensaje}\n                message={mensaje}\n                isOpen={mensaje.length > 0}\n                onDidDismiss = {()=>{setMensaje(\"\")}}\n                buttons ={[{\n                    text:\"Aceptar\",\n                    handler:()=>{setMensaje(\"\")}\n                }]}\n                />\n            </IonContent>\n        </IonPage>\n    )\n}\nexport default HistorialLecturas;","import React, { useEffect, useState } from 'react';\nimport {\n    IonPage,\n    IonButtons,\n    IonHeader,\n    IonMenuButton,\n    IonTitle,\n    IonToolbar,\n    IonContent,\n    IonCard,\n    IonCardHeader,\n    IonCardContent,\n    IonItem,\n    IonLabel,\n    IonInput,\n    IonDatetime,\n    IonSelect,\n    IonSelectOption,\n    IonButton,\n    IonIcon,\n    IonAlert,\n    IonToast,\n    IonLoading,\n    IonGrid,\n    IonRow,\n    IonCol\n} from '@ionic/react';\nimport LeftMenu from '../../components/left-menu';\nimport { getDatosLecturaEditar, actualizarLectura, obtenerPromedioEditar} from '../../controller/apiController';\nimport { saveOutline, checkmarkCircleOutline, chevronBackCircleOutline, star, } from 'ionicons/icons';\nimport { useHistory } from \"react-router-dom\";\nimport { useTakePhoto, generarFechas, obtenerBase64, generarAniosPosterior, generarAnios, obtenerCoordenadas } from '../../utilities';\nimport { cerrarSesion, extraerDatosEditarLectura, verifyingSession } from '../../controller/storageController';\nconst EditarLecturaAgua: React.FC = () => {\n    const history = useHistory();\n    const [datosContribuyente, setDatosContribuyente] = useState(Object)\n    const [loading, setLoading] = useState(false);\n    const [anomalias, setAnomalias] = useState<any[]>([]);\n    const [bloquearCampos, setBloquearDatos] = useState(true);\n    const [tipoLectura, setTipoLectura] = useState(Number);\n    const [anhioLectura, setAnhioLectura] = useState(Number);\n    const [mesLectura, setMesLectura] = useState(Number)\n    const [validarAnhio, setValidarAnhio] = useState(Number);\n    const [validarMes, setValidarMes] = useState(Number);\n    const [message, setMessage] = useState(String);\n    const [listaAnhios, setListaAnhios] = useState<any[]>([]);\n    const [listaMeses, setListaMeses] = useState<any[]>([]);\n    const [consumo, setConsumo] = useState(Number);\n    const [lecturaActual, setLecturaActual] = useState(Number);\n    const [lecturaAnterior, setLecturaAnterior] = useState(Number);\n    const [tipoAnomalia, setTipoAnomalia] = useState(Number);\n    const [fechaLectura, setFechaLectura] = useState(Date);\n    const [tipoMensaje, setTipoMensaje] = useState(String);\n    const [showToast, setShowToast] = useState(false);\n    const [connectionError, setConnectionError] = useState(false);\n    const [block, setBlock] = useState(false);\n    const [tokenExpired, setTokenExpered] = useState(false);\n    const [traceError, setTraceError] = useState(String);\n    //INDEV: Actualizar el registro de la lectura\n    const [bloqueoAnomalias, setBloqueoAnomalias] = useState(false);\n    const [seleccionAnomalia,setSeleccionAnomalia] = useState(0);\n    const [promedioLectura,setPromedioLectura] = useState(Number);\n    const [consumoMinimo,setConsumoMinimo] = useState(20);\n    const [lecturaRegistrada,setLecturaRegistrada] = useState(Number);\n    let consumoDatos = 0;\n    const fecha = new Date();\n    const alertRetriButtons = [\n        { text: \"Reintentar\", handler: () => { setMessage(\"\"); traceError == \"onLoad\" ? cargarDatos() : guardarLectura(); } },\n        { text: \"Aceptar\", handler: () => { setTraceError(\"\"); setMessage(\"\"); } }\n    ]\n    const alertAcceptButtons = [{ text: \"Aceptar\", handler: () => { } }];\n    const isSessionValid = () => {\n        let valid = verifyingSession(); //Verificamos si existe algun token guardado\n        setTokenExpered(!valid);        //Validacion para ver si el token expiro (Si valid == false se lanza el error de la sesion)\n        setBlock(!valid);               //Si existe el token\n    }\n    \n    const cargarDatos = async () => {\n        setLoading(true);\n        let result = extraerDatosEditarLectura();\n        setDatosContribuyente(result);\n        //Obtenemos el promedio de las lecturas\n        await getDatosLecturaEditar()\n            .then((result) => {\n                if (result.Status) {\n                    //Me falta contrato vigente\n                    console.log(result.Mensaje);\n                    setDatosContribuyente(result.Mensaje[0]);\n                    generarFechasAnhios(parseInt(result.Mensaje[0].A_no));\n                    filtrarLectura(result)\n\n                } else {\n                    setTipoMensaje(\"Mensaje\");\n                    setMessage(\"No se encontraron resultados.\");\n                }\n            })\n            .catch((err) => {\n                let errorMessage = String(err.message);\n                setConnectionError(errorMessage.includes(\"API\"));\n                let sessionValid = errorMessage.includes(\"Sesion no valida\");\n                console.log(\"El toke es valido ?\", sessionValid)\n                setTokenExpered(sessionValid);\n                if (!sessionValid) {\n                    setTraceError(\"onLoad\");\n                    setMessage(err.message)\n                    setTipoMensaje(\"ERROR\");\n                }\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n    useEffect(() => { isSessionValid(); }, [anhioLectura]);\n    useEffect(() => { logOut(tokenExpired); }, [tokenExpired])\n    const logOut = (valid: boolean) => {\n        if (valid) {\n            setTipoMensaje(\"Sesión no valida\");\n            setMessage(\"Inicie sesión por favor\\nRegresando...\");\n            setTimeout(async () => {\n                setMessage('');\n                setTipoMensaje('MENSAJE')\n                await cerrarSesion().then((result) => {\n                    history.replace(\"/home\");\n                })\n            }, 2500)\n        } else {\n            cargarDatos();\n        }\n    }\n    const filtrarLectura = async (result: any) => {\n        console.log(result.tipoLectura[0].Valor);\n        result.bloqueoCampos[0].Valor == 0 ? setBloquearDatos(false) : setBloquearDatos(true);\n        setTipoLectura(result.tipoLectura[0].Valor);\n        setAnomalias(result.Anomalias);\n        let lectura = result.tipoLectura[0].Valor;\n        if (lectura == 1 || lectura == 2 || lectura == 3) {\n            setAnhioLectura(result.Mensaje[0]['A_no']);\n            setMesLectura(result.Mensaje[0]['Mes'])\n            setValidarAnhio(result.Mensaje[0]['A_no']);\n            setValidarMes(result.Mensaje[0]['Mes']);\n            //Obtenemos el promedio\n            await obtenerPromedioEditar(result.Mensaje[0]['Padr_onAgua']).then((result)=>{\n                setPromedioLectura(result);\n            }).catch((e)=>{\n                setPromedioLectura(0);\n            });\n        } else {\n            //Mensaje de error\n            setTipoMensaje('ERROR')\n            setMessage('Consulte con su administrador que el código de lecturas de agua se encuentre en el rango de 1-3');\n            setTimeout(() => {\n                history.goBack();\n            }, 2000)\n        }\n        let datosLectura = result.Mensaje[0];\n        setConsumo(datosLectura.Consumo);\n        consumoDatos = datosLectura.Consumo;\n        setLecturaActual(datosLectura.LecturaActual);\n        setLecturaRegistrada(datosLectura.LecturaActual);\n        setLecturaAnterior(datosLectura.LecturaAnterior);\n        datosLectura.Observaci_on == null ? setTipoAnomalia(0) : setTipoAnomalia(datosLectura.Observaci_on);\n        setFechaLectura(datosLectura.FechaLectura);\n    }\n    const generarFechasAnhios = async (anio: number) => {\n        let data = await generarFechas(anio);\n        setListaAnhios(data[1].Anios);\n        setListaMeses(data[0].Meses);\n    }\n    const handleCalcularconsumo = (consumido: number) => {\n        //Calculando el consumo\n        let result = consumido - lecturaAnterior;\n        setLecturaActual(consumido);\n        isNaN(result) ? setConsumo(0) : setConsumo(result)\n        \n    }\n    const guardarLectura = async () => {\n        setLoading(true);\n        //localStorage.setItem(\"@Storage::userToken\",\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczpcL1wvYXBpLnNlcnZpY2lvZW5saW5lYS5teFwvYXBpLW1vdmlsXC9sb2dpbi1wcmVzaWRlbnRlUHJ1ZWJhIiwiaWF0IjoxNjIxMzY1OTk0LCJleHAiOjE2MjE0MDE5OTQsIm5iZiI6MTYyMTM2NTk5NCwianRpIjoiV0w3VE9EeUZpQkhWZzZqRSIsInN1YiI6MzgwMCwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.5aG5sSnugBRIPvmj0QcbhHuqxPfBRkwrxN74bGz1uho\");\n        console.log(anhioLectura, mesLectura,datosContribuyente.Padr_onAgua);\n        let consumoCalculado = procesoConsumo();\n        if(consumoCalculado == 0){\n            setTipoMensaje(\"MENSAJE\");\n            setMessage(\"No se ha calculado el consumo\");\n            setLoading(false);\n        }else if(consumoCalculado < 0){\n            setTipoMensaje(\"MENSAJE\");\n            setMessage(\"La lectura actual no puede ser menor a la anterior\");\n            setLoading(false);\n        }else{\n            //Enviamos los datos a editar\n            let data = {\n                anhioLectura: anhioLectura,\n                consumo: consumoCalculado,\n                fechaLectura: fechaLectura,\n                lecturaActual: lecturaActual,\n                lecturaAnterior: lecturaAnterior,\n                mesLectura: mesLectura,\n                tipoAnomalia: tipoAnomalia,\n                validarAnhio: validarAnhio,\n                validarMes: validarMes,\n                idPadron: datosContribuyente.Padr_onAgua,\n            }\n            console.log(data);\n            setLoading(false);\n                 /*await actualizarLectura(data)\n            .then((result) => {\n                setShowToast(true);\n                console.log(result)\n            })\n            .catch((err) => {\n                let errorMessage = String(err.message);\n                setConnectionError(errorMessage.includes(\"API\"));\n                let sessionValid = errorMessage.includes(\"Sesion no valida\");\n                setTokenExpered(sessionValid);\n                if (!sessionValid) {\n                    setTraceError(\"onUpdate\");\n                    setTipoMensaje(\"ERROR\");\n                    setMessage(err.message)\n                }\n            })\n            .finally(() => {\n                setLoading(false);\n            })*/\n        }\n   \n    }\n    const regresarPantalla = async () => {\n        if (showToast) {\n            setShowToast(false);\n            history.replace('/historial-lecturas.page');\n        }\n    }\n    //Manejadores de \n    const handleSelectMes = (mes: string) => {\n        setMesLectura(parseInt(mes));\n    }\n    const handleSelectAnio = (anio: string) => {\n        setAnhioLectura(parseInt(anio));\n    }\n    const handlebtnRegresar = () => {\n        history.replace(\"/historial-lecturas.page\");\n        console.log(\"Regresando\");\n    }\n    const handleSelectAnomalia = (selectAnomalia: number) =>{\n        setSeleccionAnomalia(selectAnomalia);\n        setTipoAnomalia(selectAnomalia);\n        anomalias.map((item,index)=>{\n            if(item.id == selectAnomalia){\n                if(parseInt(item.ActualizarAdelante) == 1 || parseInt(item.ActualizarAtras) == 1){\n                    setBloqueoAnomalias(false);\n                }else{\n                    setBloqueoAnomalias(true);\n                    setLecturaActual(lecturaAnterior);\n                }\n                setConsumoMinimo(item.Minima);\n                console.log(item.Minima + \"Consumo calculado\");\n                if(lecturaActual != 0){\n                    setConsumo(procesoConsumo());\n                }\n                if(selectAnomalia == 24){\n                    setConsumo(promedioLectura);\n                }\n            }\n        });\n    }\n    const handleCancelAnomalia = () =>{\n        setTipoAnomalia(0);\n        setSeleccionAnomalia(0);\n        setBloqueoAnomalias(false);\n        handleCalcularconsumo(lecturaActual);\n        setLecturaActual(lecturaRegistrada);\n    }\n    const procesoConsumo = () => {\n        let consumoProcesado = 0;\n        console.log(seleccionAnomalia);\n        if( seleccionAnomalia != 0){\n            if(bloqueoAnomalias){ // este es el proceso de las anomalias sin capturas\n                if (promedioLectura < consumoMinimo){\n                    consumoProcesado = consumoMinimo;\n                }else{\n                    consumoProcesado = promedioLectura;\n                }\n            }else{ //este el el proceso de las anomalias con captura\n                if(consumo < promedioLectura){\n                    consumoProcesado = promedioLectura;\n                }\n                if(promedioLectura < consumoMinimo){\n                    consumoProcesado = consumoMinimo;\n                }\n                if(consumoMinimo < consumo){\n                    consumoProcesado =  consumo;\n                }\n            }\n        }else{ // este es el proceso de captura normal\n            if(consumo < consumoMinimo && consumo > 0){\n                consumoProcesado = consumoMinimo;\n            }else{\n                consumoProcesado = consumo;\n            }\n        }\n        if(tipoAnomalia == 47){\n            consumoProcesado = consumoMinimo;\n        }\n        if(tipoAnomalia == 99){\n            if(lecturaActual < consumoMinimo){\n                consumoProcesado = consumoMinimo;\n            }else{\n                consumoProcesado = lecturaActual;\n            }\n        }\n        if(tipoAnomalia == 24){\n            consumoProcesado = promedioLectura;\n        }\n        \n        setConsumo(consumoProcesado);\n        return consumoProcesado;\n    }\n    return (\n        <IonPage>\n            <LeftMenu />\n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                    <IonTitle>Editar lectura</IonTitle>\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\n                        <IonMenuButton ></IonMenuButton>\n                    </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <IonCard>\n                    <IonCardHeader>\n                        <div className=\"datosContribuyete\">\n                            <h3>{datosContribuyente.Nombre}</h3>\n                            <p>Contrato: {datosContribuyente.ContratoVigente}, &nbsp;&nbsp; Medidor: {datosContribuyente.Medidor}, &nbsp;&nbsp; Toma: {datosContribuyente.Toma}</p>\n                            <p>Municipio: {datosContribuyente.Municipio}, &nbsp;&nbsp; Localidad: {datosContribuyente.Localidad}</p>\n                            <p>Colonia: {datosContribuyente.Colonia} &nbsp;&nbsp; Calle: {datosContribuyente.Calle} &nbsp;&nbsp; Exterior: {datosContribuyente.Exterior} &nbsp;&nbsp; Interior: {datosContribuyente.Interior}</p>\n                        </div>\n                    </IonCardHeader>\n                    <IonCardContent>\n                        <br />\n                        <IonItem>\n                            <IonLabel> Lectura anterior:</IonLabel>\n                            <IonInput disabled value={lecturaAnterior}></IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Lectura actual:</IonLabel>\n                            <IonInput disabled  value={lecturaActual} onIonChange={e => { handleCalcularconsumo(parseFloat(e.detail.value + \"\")) }}></IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Consumo :</IonLabel>\n                            <IonInput disabled value={consumo}></IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Fecha de lectura: </IonLabel>\n                            <IonDatetime disabled displayFormat=\"DD/MM/YYYY\" value={fechaLectura}></IonDatetime>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Anomalía:</IonLabel>\n                            <IonSelect \n                                disabled\n                                placeholder=\"Seleccione uno\" \n                                interface=\"action-sheet\" \n                                cancelText=\"Cancelar\" \n                                value={tipoAnomalia}\n                                onIonCancel = {handleCancelAnomalia}\n                                onIonChange = { e => { handleSelectAnomalia(e.detail.value) } } >\n                                <IonSelectOption value={null}></IonSelectOption>\n                                {\n                                    //Lista de anomalias\n                                    anomalias.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.id}>\n                                            {`${item.clave}-${item.descripci_on}`}\n                                        </IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel> Mes: </IonLabel>\n                            <IonSelect disabled={bloquearCampos} interface=\"action-sheet\" placeholder=\"Seleccione uno\" cancelText=\"Cancelar\" value={mesLectura} onIonChange={e => { handleSelectMes(e.detail.value) }}>\n                                {\n                                    listaMeses.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.id}>\n                                            {item.mes}\n                                        </IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Año: </IonLabel>\n                            <IonSelect disabled={bloquearCampos} interface=\"action-sheet\" placeholder=\"Seleccione uno\" cancelText=\"Cancelar\" value={anhioLectura} onIonChange={e => { handleSelectAnio(e.detail.value) }}>\n                                {\n                                    listaAnhios.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.anio}>\n                                            {item.anio}\n                                        </IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <br />\n                        <div className=\"centrar\">\n                            <IonGrid>\n                                <IonRow>\n                                    <IonCol>\n                                        <IonButton color=\"secondary\" onClick={handlebtnRegresar} >Regresar<IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon> </IonButton>\n                                    </IonCol>\n                                </IonRow>\n                            </IonGrid>\n\n\n                        </div>\n                    </IonCardContent>\n                </IonCard>\n                <IonAlert\n                    cssClass=\"my-custom-class\"\n                    header={tipoMensaje}\n                    message={message}\n                    isOpen={message.length > 0}\n                    backdropDismiss={false}\n                    buttons={connectionError ? alertRetriButtons : [{ text: \"Aceptar\", handler: () => { setMessage(\"\") } }]}\n                />\n                <IonToast\n                    isOpen={showToast}\n                    onDidDismiss={regresarPantalla}\n                    message=\"Los datos se actualizaron correctamente\"\n                    duration={2000}\n                    position=\"top\"\n                    buttons={[{ side: \"end\", icon: checkmarkCircleOutline, handler: regresarPantalla }]}\n                ></IonToast>\n                <IonLoading\n                    cssClass=\"my-custom-class\"\n                    isOpen={loading}\n                    onDidDismiss={() => { setLoading(false); }}\n                    message=\"Por favor espere\"\n                />\n            </IonContent>\n        </IonPage>\n    )\n}\n\nexport default EditarLecturaAgua;","import { useIonToast,IonAlert, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonCheckbox, IonChip, IonCol, IonContent, IonGrid, IonHeader, IonImg, IonInput, IonItem, IonLabel, IonLoading, IonMenuButton, IonPage, IonRippleEffect, IonRow, IonText, IonTextarea, IonTitle, IonToolbar, IonIcon, useIonViewWillEnter } from '@ionic/react'\nimport { useEffect, useState } from 'react'\nimport LeftMenu from '../../components/left-menu';\nimport { crearReporte, guardarReporteV2 } from '../../controller/apiController';\nimport { verifyingSession, cerrarSesion, getContratoReporte } from '../../controller/storageController';\nimport { useTakePhoto, obtenerBase64, obtenerCoordenadas } from '../../utilities';\nimport { useHistory } from 'react-router';\nimport './reportes.page.css';\nimport { checkmarkCircle, chevronBackCircleOutline, saveOutline } from 'ionicons/icons';\nimport MenuLeft from '../../components/left-menu';\n\nconst Reportes: React.FC = () => {\n    const history = useHistory();\n    const [ loading, setLoading ] = useState(false);\n    const [ message, setMessage ] = useState(String);\n    const [ tipoMensaje, setTipoMensaje ] = useState(String);\n    const [ block, setBlock ] = useState(false);\n    const [ tokenExpired, setTokenExpired ] = useState(false);\n    const [ connectionError, setConnectionError ] = useState(false);\n    const [ contrato,setContrato ] = useState(String);\n    const [ fallaAdministrativa, setFallaAdministrativa ] = useState(false);\n    const [ arregloFotos, setArregloFotos ] = useState<string[]>([]);\n    const [ fotoActiva, setFotoActiva ] = useState('');\n    const [ indexFoto, setIndexFoto ] = useState(Number);\n    const [ fotosCodificadas, setFotosCodificadas ] = useState<any[]>([]);\n    const [pressentToast, dismissToast ] = useIonToast();\n    const [ activarGalaria, setActivarGaleria ] = useState(false);\n    const [ ErrorUI, setErrorUI ] = useState(\"\");\n    //NOTE: manejadores de los inputs\n    const [colonia, setColonia] = useState(String);\n    const [calle, setCalle] = useState(String);\n    const [numero, setNumero] = useState(String);\n    const [ descripcion, setDescripcion ] = useState( String );\n    const [activarMenu,setActivarMenu] = useState(false);\n    const sinFoto = \"https://media.istockphoto.com/vectors/vector-camera-icon-with-photo-button-on-a-white-background-vector-id1270930870?k=20&m=1270930870&s=170667a&w=0&h=kG9xDNMeLFQJeDrg-ik-HkvaHcOy2HjZe8xaDMB-dk0=\";\n\n     //INDEV: Bloque de fotos para tomas\n     const [ fotoMedidorEncode, setFotoMedidorEncode ] =  useState(String);\n     const [ fotoMedidorPreview, setFotoMedidorPreview ] = useState(String);\n     //NOTE: Foto de la facha\n     const [ fotoFachadaEncode, setFotoFachadaEncode ] = useState(String);\n     const [ fotoFachadaPreview, setFotoFachadaPreview ] = useState(String);\n     //NOTE: Foto perspectiva amplia\n     const [ fotoCalleEncode, setFotoCalleEncode ] = useState(String);\n     const [ fotoCallePreview, setFotoCallePreview ] = useState(String);\n\n    const { takePhoto } = useTakePhoto();\n    //Verificando la session\n    const buttonsErrorConnection = [\n        { text: \"Reintentar\", handler: () => { setMessage(\"\"); enviarReporte(); } },\n        { text: \"Aceptar\", handler: () => { setMessage(\"\"); console.log(\"Cancelando\") } }\n    ]\n    const isSessionValid = async () => {\n        let valid = verifyingSession();\n        setTokenExpired(!valid);\n        setBlock(!valid);\n    }\n    useIonViewWillEnter(()=>{setActivarMenu(true)});\n    useEffect(() => { isSessionValid() }, []);\n    useEffect(() => { logOut() }, [tokenExpired]);\n    useEffect(()=>{\n        setActivarGaleria( arregloFotos.length > 0 );\n    },[arregloFotos])\n    //Manejadores de la interfaz\n    const logOut = async () => {\n        if (tokenExpired) {\n            setTipoMensaje(\"Sesión no valida\");\n            setMessage(\"Inicie sesión por favor\\nRegresando...\");\n            setTimeout(() => {\n                cerrarSesion()\n                    .then((result) => {\n                        setMessage('');\n                        history.replace('/home');\n                    })\n            }, 2500)\n        }\n    }\n    /*const handleBtnCrearReporte = async () => {\n        setLoading(true);\n        let data = {\n            colonia: colonia,\n            calle: calle,\n            numero: numero,\n            descripcion: descripcion,\n            contrato: contrato,\n            fallaAdministrativa: fallaAdministrativa ? 1 : 0,\n        }\n        await crearReporte(data)\n            .then((result) => {\n                setConnectionError(false);\n                limpiarPantalla();\n                setTipoMensaje(\"Mensaje\");\n                setMessage(result);\n            }).catch((err) => {\n                setTipoMensaje(\"ERROR\");\n                let messageError = String(err.message);\n                setConnectionError(messageError.includes(\"API\"));\n                let sessionExpired = messageError.includes(\"Sesion no valida\");\n                setTokenExpired(sessionExpired);\n                if (!sessionExpired) {\n                    setMessage(messageError);\n                } else {\n                    console.log(\"El token ya expiro\")\n                }\n            }).finally(() => {\n                setLoading(false);\n            })\n    }*/\n    const handleAbrirCamera = async (tipoFoto: number) => {\n        setLoading(true);\n        await takePhoto()\n            .then(async (result) => {\n                setLoading(true);\n                agregarImagenEncode(result.webPath + \"\", tipoFoto);\n            })\n            .catch((err) => {\n                let errorType = err.message + \"\";\n                if (errorType.includes(\"denied\")) {\n                    setMessage(\"La aplicación no tiene permisos para usar la cámara\")\n                }\n            }).finally(() => { setLoading(false) })\n    }\n    const agregarImagenEncode = async (imgDir: string, tipoFoto:number) => {\n        await obtenerBase64(imgDir).then((result) => {\n            switch (tipoFoto) {\n                case 1:\n                    setFotoMedidorEncode(String(result));\n                    setFotoMedidorPreview(imgDir);\n                    break;\n                case 2:\n                    setFotoFachadaEncode(String(result));\n                    setFotoFachadaPreview(imgDir);\n                    break;\n                case 3: \n                    setFotoCalleEncode(String(result));\n                    setFotoCallePreview(imgDir);\n                    break;\n            }\n\n        }).finally(() => { setLoading(false) })\n    }\n    const borrarFotoEvidencia = () => {\n        let fotosTemporal = new Array;\n        let fotosEncoded = new Array;\n        arregloFotos.map((item, index) => {\n            if (index != indexFoto) {\n                fotosTemporal.push(item);\n            }\n        });\n        fotosCodificadas.map((item, index) => {\n            if (index != indexFoto) {\n                fotosEncoded.push(item);\n            }\n        })\n        setFotosCodificadas(fotosEncoded);\n        setArregloFotos(fotosTemporal);\n        setFotoActiva('');\n        pressentToast({\n            message: \"Se elimino la foto de la lista'\",\n            duration: 2000,\n            position: 'top',\n            buttons: [\n                {\n                    side: 'start',\n                    icon: checkmarkCircle,\n                }\n            ]\n        })\n    }\n    const validarDatos = () =>{\n        setMessage(\"\");\n        setErrorUI(\"\");\n        let error = \"\";\n        if( calle.trim().length == 0 ){\n            error += \"Cl,\";\n        }\n        if( colonia.trim().length == 0 ){\n            error += \"C,\";\n        }\n        if( numero.trim().length == 0 ){\n            error += \"N,\";\n        }\n        if ( descripcion.trim().length == 0 ){\n            error += \"D,\";\n        }\n        //NOTE: aqui ingresamos lar reglas para las imagenes\n        if(fotoMedidorEncode.length == 0)\n            error += \"FM,\"\n        if(fotoFachadaEncode.length == 0)\n            error += \"FF,\"\n        if(fotoCallePreview.length == 0)\n            error += \"FC,\";\n        //NOTE: validamos que los datos no esten en 0\n        error.length == 0 ? enviarReporte() : lanzarMensaje(\"Mensaje\",\"Favor de ingresar los campos requeridos\", error);\n    }\n    const enviarReporte = async () =>{\n        //NOTE: Recolectamos los datos\n        setLoading(true);\n        //NOTE: creamos el json de los datos\n        let jsonImagenes = {\n            \"Toma\": fotoMedidorEncode,\n            \"Fachada\": fotoFachadaEncode,\n            \"Calle\": fotoCalleEncode\n        }\n        let Padron = getContratoReporte()\n        await obtenerCoordenadas().then( async ( coordenadas )=>{\n            let datos = {\n                'Calle':calle,\n                'Colonia':colonia,\n                'Numero':numero,\n                'Descripcion':descripcion,\n                'Latitud':String(coordenadas.latitude),\n                'Longitud':String(coordenadas.longitude),\n                'FallaAdministrativa':0,\n                'Estatus':1,\n                'Fotos':jsonImagenes,\n                'Padron':String(Padron),\n            };\n            await guardarReporteV2(datos)\n            .then(( result )=>{\n                limpiarPantalla();\n            })\n            .catch(( error )=>{\n                console.log(error);\n                setTipoMensaje(\"Mensaje\");\n                //setMessage(error.mensaje);\n            }).finally(()=>{\n                setLoading(false);\n            });\n        }).catch((error)=>{\n            setLoading(false);\n            lanzarMensaje(\"ERROR\",\"¡Favor de activar el servicio de ubicacion!\", \"\")\n        })\n    }\n    const lanzarMensaje = ( tipoMensaje: string, mensaje: string, error = \"\") =>{\n        setTipoMensaje( tipoMensaje );\n        setMessage( mensaje );\n        setErrorUI( error );\n    }\n    const btnRegresar = () => {\n        history.goBack();\n    }\n    const limpiarPantalla = () =>{\n        \n        setColonia(\"\");\n        setCalle(\"\");\n        setNumero(\"\");\n        setDescripcion(\"\");\n        setContrato(\"\");\n        setFotoActiva(\"\");\n        setFotosCodificadas([]);\n        setArregloFotos([]);\n        setTipoMensaje(\"Mensaje\");\n        setMessage(\"Reporte guardado\\nRegresando\");\n        setTimeout(()=>{\n            history.goBack();\n        }, 1000);\n\n    }\n     //INDEV: Bloque para lanzar la camara dependiendo del tipo de foto\n     const FotoToma = () =>{\n        //NOTE: lanzamos la camara con el tipo 1\n        handleAbrirCamera(1);\n    } \n    const FotoFachada = () =>{\n        handleAbrirCamera(2);\n    }\n    const FotoCalle = () =>{\n        handleAbrirCamera(3);\n    }\n    return (\n        <IonPage >\n            <LeftMenu />\n            {\n                activarMenu ? \n                <MenuLeft />: <></>\n            }\n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                    <IonTitle>Reportar</IonTitle>\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\n                        <IonMenuButton></IonMenuButton>\n                    </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent >\n                {/*INDEV: Pantalla de para el reporte */  }\n                <div style={{paddingLeft:10, paddingRight:10}} >\n                    <br></br>\n                    <IonGrid className = {'centerInput ' + ( ErrorUI.includes(\"C,\") ? \"errorInput\" : \"\" )} >\n                        <IonRow>\n                            <IonCol size='2' className = 'centerItems' >\n                                <IonLabel className = {'inputLabel'} > Colonia: </IonLabel>\n                            </IonCol>\n                            <IonCol size='10' >\n                                <IonInput value={colonia} onIonChange = { text => { setColonia(String(text.detail.value))} } ></IonInput>\n                            </IonCol>\n                        </IonRow>\n                    </IonGrid>\n                    <br></br>\n                    <IonGrid className = {'centerInput ' + ( ErrorUI.includes(\"Cl,\") ? \"errorInput\" : \"\" ) } >\n                        <IonRow>\n                            <IonCol size='2' className = 'centerItems' >\n                                <IonLabel className='inputLabel' > Calle: </IonLabel>\n                            </IonCol>\n                            <IonCol size='10' >\n                                <IonInput value={calle} onIonChange = { text => { setCalle( String(text.detail.value) )}} >  </IonInput>\n                            </IonCol>\n                        </IonRow>\n                    </IonGrid>\n                    <br></br>\n                    <IonGrid className = {'centerInput ' + ( ErrorUI.includes(\"N,\") ? \"errorInput\" : \"\" ) } >\n                        <IonRow>\n                            <IonCol size='2' className = 'centerItems' >\n                                <IonLabel className='inputLabel' > Numero: </IonLabel>\n                            </IonCol>\n                            <IonCol size='10' >\n                                <IonInput value = { numero } onIonChange = { text => {setNumero( String(text.detail.value))}} >  </IonInput>\n                            </IonCol>\n                        </IonRow>\n                    </IonGrid>\n                    <br/><br/>\n                    <IonGrid>\n                                <IonRow>\n                                    <IonCol size=\"4\" className=\"center\"  >\n                                        <IonLabel> Toma </IonLabel>\n                                        <IonCard onClick = { FotoToma } className = { ErrorUI.includes(\"FM,\") ? \"errorInput\" : \"clearInput\" } >\n                                            <IonImg className=\"imagenViwer\"  src = { fotoMedidorPreview != \"\" ? fotoMedidorPreview : sinFoto } ></IonImg>\n                                            <IonRippleEffect></IonRippleEffect>\n                                        </IonCard>\n                                    </IonCol>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Facha </IonLabel>\n                                        <IonCard onClick = { FotoFachada } className = { ErrorUI.includes(\"FF,\") ? \"errorInput\" : \"clearInput\" }  >\n                                            <IonImg className=\"imagenViwer\"  src ={ fotoFachadaPreview != \"\" ? fotoFachadaPreview : sinFoto } >  </IonImg>\n                                        </IonCard>\n                                        <IonRippleEffect></IonRippleEffect>\n                                    </IonCol>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Calle </IonLabel>\n                                        <IonCard onClick = { FotoCalle } className = { ErrorUI.includes(\"FC,\") ? \"errorInput\" : \"clearInput\" } >\n                                            <IonImg className=\"imagenViwer\"  src ={ fotoCalleEncode != \"\" ? fotoCalleEncode : sinFoto } >  </IonImg>\n                                        </IonCard>\n                                        <IonRippleEffect></IonRippleEffect>\n                                    </IonCol>\n                                </IonRow>\n                        </IonGrid>\n                    <IonGrid className = {'centerInput ' + ( ErrorUI.includes(\"D,\") ? \"errorInput\" : \"\" ) } >\n                        <IonRow>\n                            <IonCol size='12' className='centrado descrip' >\n                                <IonLabel > Descripción </IonLabel>\n                            </IonCol>\n                            <IonCol size='12' >\n                                <IonTextarea value = { descripcion } onIonChange = { text => { setDescripcion(String(text.detail.value))}}></IonTextarea>\n                            </IonCol>\n                        </IonRow>\n                    </IonGrid>\n                    <br></br>\n                    \n                    <IonGrid>\n                        <IonRow>\n                            <IonCol size='6' >\n                                <IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon>\n                                <IonButton color='secondary' expand='block' onClick={ btnRegresar }> Regresar </IonButton>\n                            </IonCol>\n                            <IonCol size='6' >\n                                <IonButton color='danger' expand='block' onClick={ validarDatos }> Guardar</IonButton>\n                                <IonIcon icon={saveOutline} slot=\"end\"></IonIcon>\n                            </IonCol>\n                        </IonRow>\n                    </IonGrid>\n                </div>\n                <IonAlert\n                    cssClass=\"my-custom-class\"\n                    header={ tipoMensaje }\n                    message={ message }\n                    isOpen={ message.length > 0 }\n                    backdropDismiss={ false }\n                    buttons={connectionError ? buttonsErrorConnection : [{ text: \"Aceptar\", handler: () => { setMessage(\"\"); console.log(\"Cancelando\") } }]}\n                />\n                <IonLoading\n                    cssClass=\"my-custom-class\"\n                    isOpen={loading}\n                    onDidDismiss={() => { setLoading(false); }}\n                    message=\"Por favor espere\"\n                />\n            </IonContent>\n        </IonPage>\n    )\n}\n\nexport default Reportes;","import React, { useEffect, useState } from \"react\";\nimport { \n    IonPage, \n    IonHeader, \n    IonToolbar, \n    IonTitle, \n    IonButtons, \n    IonMenuButton, \n    IonContent, \n    IonCard, \n    IonCardHeader, \n    IonLabel,\n    IonGrid,\n    IonRow, \n    IonCol,\n    IonItem,\n    IonSelect,\n    IonSelectOption,\n    IonInput,\n    IonButton,\n    IonCardContent,\n    IonItemDivider,\n    IonIcon,\n    IonList,\n    IonAlert,\n    IonLoading,\n    useIonViewWillEnter,\n    IonNote,\n    useIonViewDidLeave,\n} from \"@ionic/react\";\nimport MenuLeft from \"../../components/left-menu\";\nimport { obtenerDatosCliente, verifyingSession, getClienteNombreCorto, cerrarSesion, getUsuario, setContratoReporte } from \"../../controller/storageController\";\nimport { solicitarPermisos, verifyCameraPermission, verifyGPSPermission, ContratosListaContratoReporte, buscarMedidorSinFiltro } from \"../../controller/apiController\";\nimport { zeroFill } from '../../utilities';\nimport { searchCircle } from 'ionicons/icons';\nimport { useHistory } from 'react-router-dom';\n\nconst ListaContratoReportes : React.FC = () => {\n    const [ activarMenu, setActivarMenu ] = useState( false );\n    const [ tokenExpirado , setTokenExpirado ] = useState( false );\n    const [ nombreCliente, setClienteNombre ] = useState( String );\n    const [ tipoMensaje, setTipoMensaje ] = useState( String );\n    const [ mensaje, setMensaje ] = useState(String);\n    const [ usuario, setUsuario ] = useState(\"\");\n    const [ tipoFiltro, setTipoFiltro ] = useState(1);\n    const [ placeHolderFiltro, setPlaceHolderFiltro ] = useState(\"Buscar por contrato\");\n    const [ palabraClave, setPalabraClave ] = useState(String);\n    const [ botonReintentar, setBotonReintentar ] = useState( false );\n    const [ tipoError , setTipoError ] = useState( String );\n    const [ cargando, setCargando ] = useState(false);\n    const [ listaContratos, setListaContratos ] = useState<any[]>([]);\n    const listaEstatus = [\"Activo\",\"Cortado\",\"Baja Temporal\",\"Baja Permanente\",\"Inactivo\",\"Nueva\",\"\",\"\",\"Sin Toma\",\"Multada\"];\n    const history = useHistory();\n\n    const [] = useState( true );\n    //NOTE: recursos de la pantalla\n    const alertButtons = [\n        {\n          text: \"Reintentar\", handler: () => {\n            setMensaje(\"\");\n            buscarContrato(palabraClave);\n          }\n        },\n        {\n          text: \"Cancelar\", handle: () => {\n            setMensaje(\"\");\n          }\n        }\n      ]\n    //NOTE: Session de los hooks\n    useIonViewWillEnter(()=>{setActivarMenu( true )});\n    useIonViewDidLeave(()=>{setActivarMenu( false )});\n    useEffect(()=>{ verificarSession(); },[]);\n    useEffect(()=>{ tokenExpirado ? logOut( tokenExpirado ) : prepararPantalla()  },[tokenExpirado])\n    //NOTE: seccion de los metodos\n    const verificarSession = async () =>{\n        //INDEV: obtenemos el token y lo verificamos\n        setTokenExpirado(!verifyingSession());\n        setClienteNombre( String(await getClienteNombreCorto()));\n    }\n    const logOut = async(valido:Boolean) =>{\n        if (valido) {\n            setTipoMensaje(\"Sesión no valida\");\n            setMensaje(\"Inicie sesión por favor\\nRegresando...\");\n            setTimeout(async () => {\n              setTipoMensaje('Error');\n              setMensaje('');\n              await cerrarSesion()\n                .then((result) => {\n                  history.replace(\"/home\")\n                })\n            }, 2500);\n          }\n    }\n    const prepararPantalla = async () => {\n        await solicitarPermisos()\n        .then( async (  )=>{\n            let camera = await verifyCameraPermission();\n            let gps = await verifyGPSPermission();\n            if(camera && gps ){\n                setUsuario(String(getUsuario()));\n            }else{\n                setMensaje(\"Debe otorgar permisos para usar la aplicación\");\n                setTimeout(() => {\n                    history.replace(\"/home\")\n                }, 2500)\n            }\n        });\n    }\n    const handleSelectFiltro = (filtro: number) => {\n        setTipoFiltro(filtro);\n        filtro == 1 ? setPlaceHolderFiltro(\"Buscar por Medidor\") : setPlaceHolderFiltro(\"Buscar por Contrato\");\n    }\n    //INDEV: metodo para crear un reporte\n    const irReportar = ( item:any ) =>{\n        //INDEV: aqui ingresamos el id del contrato \n        setContratoReporte(item.id);\n        setCargando( true );\n        setTimeout(()=>{\n            setCargando( false );\n            history.push(\"/reportes.page\");\n        },500)\n    }\n    //INDEV: metodo para la busqueda de contratos sin filtros\n    const buscarContrato = async (pablabraClave: string) =>{\n        //NOTE: damos formato al contrato\n        console.log(zeroFill( pablabraClave ));\n        await ContratosListaContratoReporte(zeroFill( pablabraClave ))\n        .then(( result )=>{\n          if(result.length == 0){\n            setTipoError(\"Mensaje\");\n            setMensaje(\"Sin resultados\");\n            setBotonReintentar(false);\n          }\n            setListaContratos(result);\n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n        .finally(()=>{\n          setCargando(false);\n        })\n    } \n    const buscarMedidor = async ( palabraClave: string ) => {\n      await buscarMedidorSinFiltro(zeroFill( palabraClave ))\n      .then(( result ) => {\n        if(result.length == 0){\n          setTipoError(\"Mensaje\");\n          setMensaje(\"Sin resultados\");\n          setBotonReintentar(false);\n        }\n        setListaContratos( result );\n      })\n      .catch(( error )=>{\n        console.log(error.message);\n      }).finally(()=>{\n        setCargando( false );\n      })\n    }\n    const realizarBusqueda = async() =>  {\n      if( palabraClave.trim().length == 0 ){\n        setTipoMensaje(\"Mensaje\");\n        setMensaje(\"Ingrese un contrato o medidor\");\n        setBotonReintentar( true );\n      }else{\n        setCargando(true);\n        tipoFiltro == 1 ? buscarContrato( palabraClave ) : buscarMedidor( palabraClave );\n      }\n      \n    }\n    return (\n        <IonPage>\n        {\n          activarMenu ? \n          <MenuLeft />: <></>\n        }\n        <IonHeader>\n          <IonToolbar color=\"danger\" >\n            <IonTitle>{` Reportar `}</IonTitle>\n            <IonButtons slot=\"start\" className=\"btnMenu\">\n              <IonMenuButton ></IonMenuButton>\n            </IonButtons>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n          <IonCard class=\"ion-text-center\" className=\"box\">\n            <IonCardHeader>\n              <div>\n                <h3> Buscar contrato </h3>\n                <IonLabel>Puedes realizar busquedas por:</IonLabel>\n                <p>Contrato o Medidor</p>\n                <br />\n              </div>\n              <IonGrid>\n              <IonRow>\n                  <IonCol>\n                  <IonItem>\n                    <IonLabel>Filtrar Por:</IonLabel>\n                  <IonSelect onIonCancel = {()=>{ setTipoFiltro(1) }} value = { tipoFiltro } placeholder = \"Seleccione el filtro\" interface = \"action-sheet\" onIonChange = {e => {handleSelectFiltro(parseInt(e.detail.value+\"\"))}}>\n                      <IonSelectOption value={1} >Contrato</IonSelectOption>\n                      <IonSelectOption value={2} >Medidor</IonSelectOption>\n                    </IonSelect>\n                  </IonItem>\n                  </IonCol>\n                </IonRow>\n                <IonRow>\n                  <IonCol size=\"12\">\n                    <IonItem>\n                      <IonInput type=\"number\" placeholder = {placeHolderFiltro} onIonChange={e => {setPalabraClave(String(e.detail.value)) }}></IonInput>\n                    </IonItem>\n                  </IonCol>\n                </IonRow>\n                <IonRow>\n                    <IonCol size=\"12\" > \n                        <IonButton color=\"danger\" expand=\"block\" onClick={ realizarBusqueda } ><IonIcon icon={searchCircle} color=\"light\" size=\"large\" ></IonIcon></IonButton>\n                    </IonCol>\n                </IonRow>\n              </IonGrid>\n            </IonCardHeader>\n            <IonCardContent>\n                {/*NOTE: contenedor lista*/ }\n                <div style = {{flex:1,justifyContent:\"center\", borderWidth: 1, marginTop: 5 }} >\n                    <IonList className = \"borderList\" >\n                        {\n                            listaContratos.map((item,index)=>{\n                                return <IonItem key = {index} onClick = { ()=>{ irReportar(item); } } >\n                                    <IonLabel>\n                                        <h2> {item.Contribuyente} </h2>\n                                        <p> Contrato: { item.ContratoVigente }, Toma: { item.Toma } </p>\n                                        <p> Medidor: { item.Medidor }</p>\n                                        <IonNote color=\"primary\">Estado: {listaEstatus[item.Estatus - 1] }</IonNote>\n                                    </IonLabel>\n                                    \n                                    </IonItem>\n                            })\n                        }\n                    </IonList>\n                </div>\n            </IonCardContent>\n          </IonCard>\n          <IonAlert\n            cssClass=\"my-custom-class\"\n            header={tipoMensaje}\n            message={mensaje}\n            isOpen={mensaje.length > 0}\n            backdropDismiss={false}\n            buttons={botonReintentar ? [{ text: \"Aceptar\", handler: () => { setMensaje(\"\") } }] : alertButtons}\n          />\n          <IonLoading\n            cssClass=\"my-custom-class\"\n            isOpen={cargando}\n            onDidDismiss={() => { setCargando( false ); }}\n            message=\"Por favor espere\"\n          />\n        </IonContent>\n      </IonPage>\n    );\n}\n\nexport default ListaContratoReportes;","import { IonIcon, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonContent, IonHeader, IonInput, IonItem, IonLabel, IonMenuButton, IonPage, IonTitle, IonToolbar, IonAlert, IonLoading, IonGrid, IonCol, IonRow, IonFooter, IonFab, IonFabButton } from '@ionic/react';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './datos-del-contribuyente.css'\nimport MenuLeft from '../../components/left-menu';\nimport { obtenerDatosContribuyente, actualizarContribuyente } from '../../controller/apiController';\nimport { backspaceOutline, chevronBackCircleOutline, saveOutline, saveSharp, logoFacebook, compassOutline } from 'ionicons/icons';\nimport { cerrarSesion } from '../../controller/storageController';\nconst DatosContribuyente: React.FC = () => {\n    const history = useHistory();\n    const [datosContribuyente, setDatosContribuyente] = useState(Object);\n    const [telefono, setTelefono] = useState(String);\n    const [email, setEmail] = useState(String);\n    const [message, setMessage] = useState(String);\n    const [typeMessage, setTypeMessage] = useState(String);\n    const [loading, setLoading] = useState(false);\n    const [hideButtons, setHideButtons] = useState(true);\n    const [tokenExpired, setTokenExpired] = useState(false);\n    const [ typeError, setTypeError ] = useState(String);\n    useEffect(() => { obtenerContribuyente() }, []);\n    useEffect(() => { logOut() }, [tokenExpired]);\n    const alertButtons = [\n        { text: \"Reintentar\", handler: () => { setMessage(\"\"); typeError == \"onLoad\" ? obtenerContribuyente() : handleBtnGuardarContacto();} },\n        { text: \"Aceptar\", handler: () => { setMessage(\"\"); } }\n    ]\n    const logOut = () => {\n        if (tokenExpired) {\n            setTypeMessage(\"Session no valida\");\n            setMessage(\"Inicie sesión por favor\\nRegresando...\");\n            setHideButtons(true);\n            setTimeout(async () => {\n                await cerrarSesion().then((result) => {\n                    setTypeMessage(\"Error\");\n                    setMessage('');\n                    history.replace('/home');\n                })\n            }, 2500)\n        }\n    }\n    const obtenerContribuyente = async () => {\n        setLoading(true);\n        await obtenerDatosContribuyente()\n            .then((result) => {\n                if( result != null ){\n                    setTelefono(result.Celular == null ? \"\" : result.Celular);\n                    setEmail(result.Email == null ? \"\" : result.Email);\n                    setDatosContribuyente(result);\n                }else{\n                    setTypeMessage(\"ERROR\");\n                    setTypeError(\"onLoad\");\n                    setMessage(\"No se encontro el contribuyente\");\n                }\n            })\n            .catch((error) => { \n                setHideButtons(false);\n                let errorMessage = String(error.message);\n                let validSession = errorMessage.includes(\"Sesion no valida\");\n                if(!validSession){\n                    setTypeMessage(\"ERROR\");\n                    setTypeError(\"onLoad\");\n                    setMessage(errorMessage);\n                }\n             })\n            .finally(() => { setLoading(false) });\n    }\n    const handleTelefono = (value: string) => {\n        setTelefono(value);\n    }\n    const handleEmail = (value: string) => {\n        setEmail(value);\n    }\n    const handleBtnGuardarContacto = async () => {\n        setLoading(true);\n        let datos = {\n            telefono: telefono,\n            email: email\n        }\n        await actualizarContribuyente(datos)\n            .then((result) => {\n                setHideButtons(true);\n                setTypeMessage(\"MENSAJE\");\n                setMessage(result);\n            })\n            .catch(err => {\n                setTypeError(\"onUpdate\");\n                let errorMessage = String(err.message);\n                let sesionValid = errorMessage.includes(\"Sesion no valida\");\n                let connectionError = errorMessage.includes(\"API\");\n                setHideButtons(connectionError);\n                if (!sesionValid) {\n                    setHideButtons(false);\n                    setTypeMessage(\"Error\");\n                    setMessage(err.message);\n                } else {\n                    setTokenExpired(true);\n                }\n            })\n            .finally(() => { setLoading(false) })\n    }\n    const handleBtnRegresar = () =>{\n        console.log(\"REGRESANDO!!\");\n        history.replace(\"/captura-de-lectura.page\")\n    }\n    return (\n        <IonPage>\n            <IonContent fullscreen = {true}>\n                <MenuLeft />\n                <IonHeader>\n                    <IonToolbar color=\"danger\" >\n                        <IonTitle>Detalles contribuyente</IonTitle>\n                        <IonButtons slot=\"start\" className=\"btnMenu\">\n                            <IonMenuButton ></IonMenuButton>\n                        </IonButtons>\n                    </IonToolbar>\n                </IonHeader>\n                <IonCard >\n                    <IonCardHeader className=\"headerData\">\n                        <div className=\"datosContribuyete\">\n                            <h3>{datosContribuyente.Nombre}</h3>\n                            <p>Contrato: {datosContribuyente.ContratoVigente}, &nbsp;&nbsp; Medidor: {datosContribuyente.Medidor}, &nbsp;&nbsp; Toma: {datosContribuyente.Toma}</p>\n                            <p>Municipio: {datosContribuyente.Municipio}, &nbsp;&nbsp; Localidad: {datosContribuyente.Localidad}</p>\n                            <p>Colonia: {datosContribuyente.Colonia} &nbsp;&nbsp; Calle: {datosContribuyente.Calle} &nbsp;&nbsp; Exterior: {datosContribuyente.Exterior} &nbsp;&nbsp; Interior: {datosContribuyente.Interior}</p>\n                        </div>\n                    </IonCardHeader>\n                    <IonCardContent className=\"centrar\">\n                        <IonItem>\n                            <IonLabel className=\"center\" color=\"\">Datos de contacto</IonLabel>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel className=\"input\" position=\"floating\">Telefono</IonLabel>\n                            <IonInput type=\"tel\" placeholder=\"Telefono del contribuyente\" value={telefono} onIonChange={e => { handleTelefono(String(e.detail.value)) }} />\n                        </IonItem>\n                        <IonItem>\n                            <IonLabel className=\"input\" position=\"floating\" >Correo Electronico</IonLabel>\n                            <IonInput type=\"email\" placeholder=\"Correo Electronico\" value={email} onIonChange={e => { handleEmail(String(e.detail.value)) }} />\n                        </IonItem>\n                        <br />\n                        <IonGrid>\n                            <IonRow>\n                                <IonCol size=\"4\">\n                                    <IonButton color=\"secondary\" onClick = {handleBtnRegresar}>\n                                        Regresar\n                                        <IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon>\n                                    </IonButton>\n                                </IonCol>\n                                <IonCol size=\"4\" ></IonCol>\n                                <IonCol size=\"4\">\n                                    <IonButton color=\"danger\" onClick={handleBtnGuardarContacto}>\n                                        Guardar\n                                        <IonIcon icon={saveSharp} slot=\"end\"></IonIcon>\n                                    </IonButton>\n                                </IonCol>\n                            </IonRow>\n                        </IonGrid>\n                    </IonCardContent>\n                </IonCard>\n                <IonAlert\n                    isOpen={message.length > 0}\n                    header={typeMessage}\n                    message={message}\n                    backdropDismiss={false}\n                    buttons={hideButtons ? [\"Aceptar\"] : alertButtons}\n                />\n                <IonLoading\n                    cssClass=\"my-custom-class\"\n                    isOpen={loading}\n                    message={\"Por favor espere\"}\n                    backdropDismiss={false}\n                />\n            </IonContent>\n        </IonPage>\n    )\n}\n\nexport default DatosContribuyente;","import { IonAlert, IonButton, IonCard, IonCardHeader, IonCol, IonContent, IonGrid, IonIcon, IonInput, IonItem, IonItemDivider, IonLabel, IonList, IonLoading, IonNote, IonPage, IonRow, IonSelect, IonSelectOption, useIonViewDidEnter, useIonViewWillEnter } from \"@ionic/react\"\nimport { useEffect, useState } from \"react\"\nimport MenuLeft from '../../components/left-menu';\nimport { IonHeader,IonToolbar,IonTitle,IonButtons,IonMenuButton } from '@ionic/react';\nimport { buscarContrato, solicitarPermisos, verifyGPSPermission,verifyCameraPermission, buscarPorMedidor, buscarMedidorSinFiltro, ContratosListaContratoReporte } from '../../controller/apiController';\nimport { searchCircle } from \"ionicons/icons\";\nimport { getCuentasPapas, getUsuario, setContratoCorte } from \"../../controller/storageController\";\nimport { useHistory } from 'react-router-dom';\n//FIXME: Agregar la validacion de vencimiento de session\n\nconst PrincipalCortes: React.FC = () => {\n    const history = useHistory();\n    const [ activarMenu,setActivarMenu ] = useState(true);\n    const [ tipoFiltro , setTipoFiltro ] = useState(1);\n    const [user, setUser ] = useState(\"Prueba\");\n    const [ nombreCliente,setNombreCliente ] = useState(\"Demo OPD\");\n    const [ contrato, setContrato ] = useState(\"\");\n    const [ loading, setLoading ] = useState(false);\n    const [ listaContratos, setListaContratos ] = useState<any[]>([]);\n    const [ tipoMensaje, setTipoMensaje ] = useState(\"Mensaje\");\n    const [ mensaje, setMensaje ] = useState(\"\");\n    const [ sesionValida, setSessionValida ] = useState( true );\n\n    useEffect(()=>{ prepararPantalla(); });\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\n    const BuscarLectura = (  ) => {\n        setLoading(true);\n        if(contrato != \"\"){\n            tipoFiltro == 1 ? PorContrato( contrato ) : porMedidor( contrato );\n        }else{\n            setLoading(false);\n        }\n    }\n    const PorContrato = async ( contrato: string ) =>{\n        await ContratosListaContratoReporte(zeroFill(contrato))\n        .then(( result )=>{\n        setListaContratos(result);\n        }).catch((error)=>{\n          let errorMessage = String(error.message);\n          let expired = errorMessage.includes(\"Sesion no valida\");\n          if (!expired) {\n            setTipoMensaje(\"Error\");\n            setMensaje(error.message)\n          }\n        })\n        setLoading(false);\n    }\n    const porMedidor = async (medidor: string) =>{ \n      setLoading(true);\n      await buscarMedidorSinFiltro(zeroFill(medidor,10))\n      .then(result =>{\n        setListaContratos(result);\n      }).catch(err=>{\n        \n        let errorMessage = String(err.message);\n        let expired = errorMessage.includes(\"Sesion no valida\");\n        setSessionValida(expired);\n        if (!expired) {\n          setTipoMensaje(\"Error\");\n          setMensaje(err.message)\n        }else{\n          setMensaje(err.message+\"\\nRegresando...\");\n        }\n      }).finally(\n       ()=>{setLoading(false);} \n      )\n    }\n    function zeroFill( number:string,width:number = 9)\n    {\n        while(number.length < width){\n            number = \"0\"+number;\n        }\n        return number;\n    }\n    const functionValidarLectura = (estatus: number, cobro:number) =>{\n        let leyendaCobro = \"\";\n        let result = [\"\",false];\n        if(cobro == 1){\n          leyendaCobro = \"Cuota Fija \";\n        }\n      switch(estatus){\n        case 1:\n          result = [ leyendaCobro + \"\",cobro == 1];\n        break;\n        case 2:\n         result = [leyendaCobro + \"\",cobro == 1];\n        break;\n        case 3:\n          result = [ leyendaCobro + \"Baja Temporal\",true];\n        break;\n        case 4:\n          result = [ leyendaCobro +  \"Baja Permanente\",true];\n        break;\n        case 5:\n          result = [ leyendaCobro + \"Inactivo\",true];\n        break;\n        case 6:\n          result = [ leyendaCobro +  \"Nueva\",true];\n        break;    \n        case 9:\n          result = [ leyendaCobro +  \"Sin Toma\",true];\n        break;\n        case 10:\n          result = [ leyendaCobro +  \"Multada\",true]\n        break;\n      }\n      return result;\n    }\n    const prepararPantalla = async () => {\n        await solicitarPermisos()\n          .then(async (err) => {\n            console.log(\"Solicitando persmisos\");\n            let camera = await verifyCameraPermission();\n            let gps = await verifyGPSPermission();\n            if (camera && gps) {\n              let storageUser = getUsuario();\n              setUser(storageUser + \"\");\n            } else {\n            }\n          }).catch(() => {\n            //Quitar antes de la vercion final (solo sirve en web)\n            let storageUser = getUsuario();\n            setUser(storageUser + \"\");\n          })\n        /**\n        * Activar el metodo solo para la version web de prueba\n        */        \n    }\n    const mostrarDatosContrato = async (item:any ,esPapa:boolean) =>{\n      //NOTE: Verificamos si es una cuenta papa\n      if(!esPapa){\n        //INDEV: guardamos los datos en el storage para mostrar en la pantalla\n        setContratoCorte(item.id);\n        history.push(\"/realizar-corte\");\n      }\n    }\n\n    return (\n        <IonPage>\n            {\n                activarMenu ? \n                    <MenuLeft /> :<></>\n            }\n            {/* Cabezera */}            \n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                <IonTitle>{`Cortes`}</IonTitle>\n                <IonButtons slot=\"start\" className=\"btnMenu\">\n                    <IonMenuButton ></IonMenuButton>\n                </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            {/* Contenido de la app */}\n            <IonContent>\n                <IonCard class=\"ion-text-center\" className=\"box\" >\n                    <IonCardHeader >\n                        <div>\n                          <h3>Realizar corte</h3>\n                          <IonLabel >Puedes realizar busquedas por:</IonLabel>\n                          <p>Contrato o Medidor</p>\n                          <br/>\n                        </div>\n                        <IonGrid>\n                        <IonRow>\n                            <IonCol>\n                                <IonItem>\n                                    <IonLabel>Filtrar Por:</IonLabel>\n                                    <IonSelect value = {tipoFiltro}  onIonCancel = { ()=>{ setTipoFiltro(1); } } placeholder = \"Seleccione el filtro\" interface = \"action-sheet\" onIonChange = {e => { setTipoFiltro(e.detail.value) }} >\n                                        <IonSelectOption value={1} >Contrato</IonSelectOption>\n                                        <IonSelectOption value={2} >Medidor</IonSelectOption>\n                                    </IonSelect>\n                                </IonItem>\n                            </IonCol>\n                        </IonRow>\n                        <IonRow>\n                            <IonCol size=\"12\">\n                              <IonItem>\n                                  <IonInput type=\"number\" placeholder = { `Ingrese el ${tipoFiltro == 1 ?  \"contrato\" : \"medidor\"}` } onIonChange={e => { setContrato(String(e.detail.value)) }}></IonInput>\n                              </IonItem>\n                            </IonCol>\n                        </IonRow>\n                        <br />\n                        <IonButton color=\"danger\" expand = \"block\" onClick={ BuscarLectura }>\n                            <IonIcon icon={searchCircle} color=\"light\" size=\"large\"></IonIcon>\n                            \n                            </IonButton>\n                        <IonItem>\n                            <IonLabel className=\"center\" color=\"\">Contrato</IonLabel>\n                        </IonItem>\n                        </IonGrid>\n                    </IonCardHeader>\n                    <IonList>\n                        {\n                            listaContratos.map((item,index)=>{\n                                let papas = getCuentasPapas();\n                                let arrayData = functionValidarLectura(parseInt(item.Estatus),parseInt(item.M_etodoCobro));\n                                let cuentaPapa = String(papas).includes(item.id);\n                                if(cuentaPapa){\n                                  arrayData[0] += \"Desarrollo\";  \n                                }\n                                return <div className = { ( cuentaPapa || arrayData[1]) ? 'cuotaFija':''} key={index} onClick={() => { mostrarDatosContrato( item, cuentaPapa ); }}>\n                                  <IonItem detail={true} >\n                                    <IonList>\n                                      <IonLabel>{item.Contribuyente}</IonLabel>\n                                      <p>Contrato: {item.ContratoVigente},\n                                         Medidor: {item.Medidor}, \n                                         Toma: {item.Toma}\n                                         &nbsp;&nbsp;&nbsp;&nbsp;\n                                         {\n                                           (cuentaPapa || arrayData[1]) ? <IonNote style ={{fontsize: 20}} color=\"danger\">{arrayData[0]}</IonNote> :\"\"\n                                         }\n                                      </p>\n                                    </IonList>\n                                  </IonItem>\n                                </div>\n                            })\n                        }\n                    </IonList>\n                </IonCard>\n                <IonLoading\n                    cssClass=\"my-custom-class\"\n                    isOpen={loading}\n                    onDidDismiss={() => { setLoading(false); }}\n                    message=\"Por favor espere\"\n                />\n                <IonAlert\n                    cssClass=\"my-custom-class\"\n                    header={tipoMensaje}\n                    message={mensaje}\n                    onDidDismiss = {()=>{if(!sesionValida){ history.replace(\"./home\");}}}\n                    isOpen={mensaje.length > 0}\n                    backdropDismiss={false}\n                    buttons={ [{ text: 'Aceptar', handler: () => { setMensaje(\"\") } }] }\n                />\n            </IonContent>\n        </IonPage>\n    )\n}\nexport default PrincipalCortes;","import { IonAlert, IonApp, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonChip, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonImg, IonItem, IonLabel, IonLoading, IonMenuButton, IonPage, IonPicker, IonRippleEffect, IonRow, IonSelect, IonSelectOption, IonText, IonTextarea, IonTitle, IonToolbar, useIonToast, useIonViewDidEnter, useIonViewWillEnter } from \"@ionic/react\";\nimport { checkmarkCircle, chevronBackCircleOutline, contractOutline, pencil, saveOutline, triangle } from \"ionicons/icons\";\nimport { useEffect,useState } from 'react';\nimport MenuLeft from '../../components/left-menu';\nimport { obtenerDatosCorte, EnviarCorte } from '../../controller/apiController';\nimport { getIdUsuario } from '../../controller/storageController';\nimport { useTakePhoto, obtenerBase64, obtenerCoordenadas } from '../../utilities';\nimport { camera } from 'ionicons/icons';\nimport './realizar-corte.css';\nimport { useHistory } from 'react-router';\n\nconst RealizarCorte: React.FC = () => {\n    const history = useHistory();\n    const [ activarMenu, setActivarMenu ] = useState(true);\n    const [ datosContrato, setDatosContrato ] = useState(Object);\n    const [ datosUsuario, setDatosUsuario ] = useState(Object);\n    const [ loading, setLoading ] = useState(true);\n    const [ fechaActual, setFechaActual ] = useState(\"\");\n    const [ tipoInspeccion, setTipoInspecion ] = useState(2);\n    /**NOTE: Manejadores de fotos */\n    const [ arregloFotos, setArregloFotos ] = useState<string[]>([]);\n    const [ arregloFotosVista, setArregloFotosVista ] = useState<string[]>([]);\n    const [ fotoActiva, setFotoActiva ] = useState(String);\n    const [ indexFoto, setIndexFoto ] = useState(Number);\n    const [ activarGaleria, setActivarGaleria ] = useState(false);\n    const { takePhoto } = useTakePhoto();\n    //NOTE: contradores de la base de datos\n    const [ motivoInspeccion, setMotivoInspeccion ] = useState(String);\n    const [ ejercicio, setEjercicio ] = useState(2020);\n    //NOTE: Validacion de toma si esta cortado\n    const [ bloquearCorte, setBloquearCorte ] = useState(true);\n    /**NOTE: Manejador de mensajes de error y advertencias */\n    const [ tipoMensaje, setTipoMensaje ] = useState(String);   \n    const [ mensaje, setMensaje ] = useState( String );\n    const [ errorCarga, setErrorCarga ] = useState(false);\n    const [ errorCampos, setErrorCampos ] = useState(false);\n    const [pressentToast, dismissToast] = useIonToast();\n    const sinFoto = \"https://media.istockphoto.com/vectors/vector-camera-icon-with-photo-button-on-a-white-background-vector-id1270930870?k=20&m=1270930870&s=170667a&w=0&h=kG9xDNMeLFQJeDrg-ik-HkvaHcOy2HjZe8xaDMB-dk0=\";\n\n\n     //INDEV: Bloque de fotos para tomas\n     const [ fotoTomaEncode, setFotoTomaEncode ] =  useState(String);\n     const [ fotoTomaPreview, setFotoTomaPreview ] = useState(String);\n     //NOTE: Foto de la facha\n     const [ fotoFachadaEncode, setFotoFachadaEncode ] = useState(String);\n     const [ fotoFachadaPreview, setFotoFachadaPreview ] = useState(String);\n     //NOTE: Foto perspectiva amplia\n     const [ fotoCalleEncode, setFotoCalleEncode ] = useState(String);\n     const [ fotoCallePreview, setFotoCallePreview ] = useState(String);\n     //NOTE: Manejador de errores \n     const [ errorImagenes, setErrorImagenes ] = useState( String );\n\n    const alertButtons = [\n        {\n            text: \"Reintentar\", handler: () => {\n                setMensaje(\"\");\n                setTipoMensaje(\"Error\");\n                setLoading(true);\n                extraerDatos();\n                \n            }\n        },\n        {\n            text: \"Cancelar\"\n        }]\n    const modoPruebas = false; //INDEV: modo de pruebas \n    const fecha = new Date();\n    useEffect(()=>{\n        extraerDatos();\n    },[]);\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\n    const listaEstados = [\"Activo\",\"Cortado\",\"Baja Temporal\",\"Baja Permanente\",\"Inactivo\",\"Nueva\",\"\",\"\",\"Sin toma\",\"Multada\"];\n    const extraerDatos = async () =>{\n        //NOTE: extraer datos del contrato\n        let dia = fecha.getDate();\n        let mes = fecha.getMonth();\n        let anio = fecha.getFullYear();\n        setEjercicio( modoPruebas ? 2020 : anio);\n        setFechaActual( formatoFecha(dia,mes,anio) );\n        await obtenerDatosCorte()\n        .then(( result )=>{\n            if(result != undefined ){\n                console.log(result[1]);\n                setDatosContrato(result[0]);\n                setDatosUsuario(result[1]);\n                //NOTE: verificamos si\n                setBloquearCorte(result[0].Estatus != 1);\n            }\n        })\n        .catch(( error )=>{\n            setErrorCarga(true);\n            setMensaje(error.message);\n            setTipoMensaje(\"ERROR\");\n\n        }).finally(()=>{\n            setLoading(false);\n        });\n    }\n    const formatoFecha = ( dia: number, mes: number, anio:number  ) =>{\n        let formatoFecha = \"\";\n        dia < 10 ? formatoFecha += (\"0\"+dia+\"/\") : formatoFecha += dia +\"/\";\n        mes < 10 ? formatoFecha += (\"0\"+mes+\"/\") :  formatoFecha += mes + \"/\";\n        formatoFecha += anio;\n        return formatoFecha;\n    }\n    const handleAbrirCamera = async (tipoFoto: number) =>{\n        setLoading(true);\n        await takePhoto()\n            .then(async (result) => {\n                setLoading(true);\n                agregarImagenEncode(result.webPath + \"\", tipoFoto);\n            })\n            .catch((err) => {\n                let errorType = err.message + \"\";\n                if (errorType.includes(\"denied\")) {\n                    setMensaje(\"La aplicación no tiene permisos para usar la cámara\")\n                }\n            }).finally(() => { setLoading(false) })\n    \n    }\n    const agregarImagenEncode = async ( imgDir: string, tipoFoto: number ) =>{\n        await obtenerBase64(imgDir).then((result) => {\n            switch (tipoFoto) {\n                case 1:\n                    setFotoTomaEncode(String(result));\n                    setFotoTomaPreview(imgDir);\n                    break;\n                case 2:\n                    setFotoFachadaEncode(String(result));\n                    setFotoFachadaPreview(imgDir);\n                    break;\n                case 3: \n                    setFotoCalleEncode(String(result));\n                    setFotoCallePreview(imgDir);\n                    break;\n            }\n\n        }).finally(() => { setLoading(false) })\n        \n    }\n                        <IonGrid>\n                                <IonRow>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Toma </IonLabel>\n                                        <IonCard>\n                                            <IonImg className=\"imagenViwer\"  src=\"https://media.istockphoto.com/vectors/vector-camera-icon-with-photo-button-on-a-white-background-vector-id1270930870?k=20&m=1270930870&s=170667a&w=0&h=kG9xDNMeLFQJeDrg-ik-HkvaHcOy2HjZe8xaDMB-dk0=\" >  </IonImg>\n                                        </IonCard>\n                                    </IonCol>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Facha </IonLabel>\n                                        <IonCard>\n                                            <IonImg className=\"imagenViwer\"  src=\"https://media.istockphoto.com/vectors/vector-camera-icon-with-photo-button-on-a-white-background-vector-id1270930870?k=20&m=1270930870&s=170667a&w=0&h=kG9xDNMeLFQJeDrg-ik-HkvaHcOy2HjZe8xaDMB-dk0=\" >  </IonImg>\n                                        </IonCard>\n                                    </IonCol>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Calle </IonLabel>\n                                        <IonCard>\n                                            <IonImg className=\"imagenViwer\"  src=\"https://media.istockphoto.com/vectors/vector-camera-icon-with-photo-button-on-a-white-background-vector-id1270930870?k=20&m=1270930870&s=170667a&w=0&h=kG9xDNMeLFQJeDrg-ik-HkvaHcOy2HjZe8xaDMB-dk0=\" >  </IonImg>\n                                        </IonCard>\n                                    </IonCol>\n                                </IonRow>\n                        </IonGrid>\n    const guardarInspeccion = async( Fotos: { \"Toma\": string, \"Fachada\": string , \"Calle\": string }  ) =>{\n        try {\n            setLoading(true);\n            setTimeout(() => {\n                if (loading) {\n                    throw 0;\n                }\n            }, 20000);\n            await obtenerCoordenadas()\n            .then( async ( coordenadas )=>{\n                //NOTE: damos formato a los datos que se enviaran\n                //INDEV: faltan las fotos {\\\"Estatus\\\":true,\\\"Code\\\":200,\\\"Mensaje\\\":\\\"Tomar cortada\\\",\\\"Corte\\\":6089}\n                let datos = {\n                    Motivo: motivoInspeccion,\n                    Padron: datosContrato.Padron,\n                    Persona: datosUsuario.Persona,\n                    Usuario: datosUsuario.Usuario,\n                    Estado: tipoInspeccion,\n                    Longitud: String(coordenadas.longitude),\n                    Latitud: String(coordenadas.latitude),\n                    Ejercicio: ejercicio,\n                    Evidencia:Fotos\n                };\n                console.log( datos );                \n                await EnviarCorte(datos)\n                .then(()=>{\n                    setErrorCarga(false);\n                    setTipoMensaje(\"Mensaje\");\n                    setMensaje(\"Corte realizado...\");\n                    setTimeout(()=>{\n                        history.goBack();\n                    }, 1000);\n                })\n                .catch((error)=>{\n                    setErrorCarga(false);\n                    setMensaje(error.message);\n                    setTipoMensaje(\"ERROR\");            \n                })\n                .finally(()=>{\n                    setLoading(false);\n                })\n            });\n        }catch(error){\n            console.log(error);\n            setLoading(false);\n            setTipoMensaje(\"Mensaje\");\n            setMensaje(`Tiempo de espera agotado.\n            Asegúrese de activar la ubicación del dispositivo`)\n        }\n    }\n    const validarCampos = async () =>{\n        //Validamos que las fotos no esten vacias\n        let error = \"\";\n        fotoTomaEncode == \"\" ? error += \"T,\" : error+=\"\";\n        fotoFachadaEncode == \"\" ? error += \"F,\" : error+=\"\";\n        fotoCalleEncode == \"\" ? error += \"C,\": error+=\"\"\n        if(error == \"\"){\n            if(motivoInspeccion != \"\"){\n                //NOTE: Creamosel objeto que se va a enviar\n                let jsonImagenes = {\n                    \"Toma\": fotoTomaEncode,\n                    \"Fachada\": fotoFachadaEncode,\n                    \"Calle\": fotoCalleEncode\n                };\n                setErrorCampos(false);\n                await guardarInspeccion(jsonImagenes);\n            }else{\n                setTipoMensaje(\"Mensaje\");\n                setMensaje(\"Favor de ingresar el motivo del corte\");\n                setErrorCampos(true);\n            }\n        }else{\n            //Lanzamos los errores de fotos\n            setErrorImagenes(error);\n        }\n    }   \n    const borrarFotoEvidencia = () => {\n        let fotosTemporal = new Array;\n        let fotosEncoded = new Array;\n        arregloFotos.map((item, index) => {\n            if (index != indexFoto) {\n                fotosTemporal.push(item);\n            }\n        });\n        arregloFotosVista.map((item, index) => {\n            if (index != indexFoto) {\n                fotosEncoded.push(item);\n            }\n        })\n        setArregloFotosVista(fotosTemporal);\n        setArregloFotos(fotosEncoded);\n        setFotoActiva('');\n        pressentToast({\n            message: \"Se elimino la foto de la lista\",\n            duration: 2000,\n            position: 'top',\n            buttons: [\n                {\n                    side: 'start',\n                    icon: checkmarkCircle,\n                }\n            ]\n        });\n        console.log(fotosTemporal.length + \" - \" + fotosEncoded.length);\n    }\n    const regresar = () =>{\n        history.replace('/buscar-contrato');\n    }\n    const limpiarPantalla = () =>{\n        setActivarGaleria(false);\n        setFotoActiva(\"\");\n        setArregloFotos([]);\n        setArregloFotosVista([]);\n        setIndexFoto(0);\n        setBloquearCorte(true);\n        setMensaje(\"\");\n        setTipoMensaje(\"\");\n        setErrorCampos(false);\n        setErrorCarga(false);\n    } \n    //INDEV: Bloque para lanzar la camara dependiendo del tipo de foto\n    const FotoToma = () =>{\n        //NOTE: lanzamos la camara con el tipo 1\n        handleAbrirCamera(1);\n    } \n    const FotoFachada = () =>{\n        handleAbrirCamera(2);\n    }\n    const FotoCalle = () =>{\n        handleAbrirCamera(3);\n    }\n    return (\n        <IonPage>\n            {\n                activarMenu ? <MenuLeft /> : <></>\n            }\n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                    <IonTitle>Cortar toma</IonTitle>\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\n                        <IonMenuButton ></IonMenuButton>\n                    </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <IonCard>\n                    <IonCardHeader>\n                        <div className=\"datosContribuyete\">\n                            <h3>{ datosContrato.Nombre } </h3>\n                            <p> RFC: { datosContrato.Rfc } , Cuenta: {datosContrato.Cuenta}</p>\n                            <p>Contrato: { datosContrato.ContratoVigente }, &nbsp;&nbsp; Medidor: {datosContrato.Medidor}, &nbsp;&nbsp; Toma: {datosContrato.Toma}</p>\n                            <p>Municipio: {datosContrato.Municipio}, &nbsp;&nbsp; Localidad: { datosContrato.Localidad}</p>\n                            <p>Direccion: {datosContrato.Direccion}</p>\n                        </div>\n                    </IonCardHeader>\n                    <IonCardContent>\n                        <br />\n                        <IonItem >\n                            <IonLabel>{ `Inspector: ${datosUsuario.PersonaNombre} - ${ datosUsuario.Puesto } ` }</IonLabel>\n                        </IonItem>\n                        <br/>\n                        <IonItem >\n                            <IonLabel color = {bloquearCorte ? \"danger\" : \"primary\"} className = \"bloquearCorte\" > { ` Estado:  ${listaEstados[ parseInt(datosContrato.Estatus)-1 ]} ${modoPruebas ? \" Modo Pruebas \" :\"\" }` } </IonLabel>\n                        </IonItem>\n                        <br/>\n                        <IonItem>\n                            <IonLabel> {`Fecha: ${fechaActual} `} </IonLabel>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel> Tipo de inspección </IonLabel>\n                            <IonSelect disabled interface = \"action-sheet\" value = {tipoInspeccion} onIonChange = { ( e )=>{setTipoInspecion(e.detail.value)} } >\n                                <IonSelectOption value = {3} > Baja Temporal </IonSelectOption>\n                                <IonSelectOption value = {4} > Baja Permanente </IonSelectOption>\n                                <IonSelectOption value = {2} > Cortado </IonSelectOption>\n                                <IonSelectOption value = {5} > Inactivo </IonSelectOption>\n                                <IonSelectOption value = {9} > Sin Toma </IonSelectOption>\n                            </IonSelect>\n                        </IonItem>\n                        <IonItem>\n                            <IonTextarea disabled = {bloquearCorte} placeholder = \"Motivo del corte\" className = {errorCampos ? \"inputBorderError\":\"inputBorder\"} onIonChange = {e=>{setMotivoInspeccion(String(e.detail.value))}} > </IonTextarea>   \n                        </IonItem>\n                        <br/>\n                        <IonGrid>\n                                <IonRow>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Toma </IonLabel>\n                                        <IonCard onClick = { FotoToma } className = { errorImagenes.includes(\"T,\") ? \"errorInput\" : \"clearInput\" }  >\n                                            <IonImg className=\"imagenViwer\"  src = { fotoTomaPreview != \"\" ? fotoTomaPreview : sinFoto } ></IonImg>\n                                            <IonRippleEffect></IonRippleEffect>\n                                        </IonCard>\n                                    </IonCol>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Facha </IonLabel>\n                                        <IonCard onClick = { FotoFachada } className = { errorImagenes.includes(\"F,\") ? \"errorInput\" : \"clearInput\" } >\n                                            <IonImg className=\"imagenViwer\"  src ={ fotoFachadaPreview != \"\" ? fotoFachadaPreview : sinFoto } >  </IonImg>\n                                        </IonCard>\n                                        <IonRippleEffect></IonRippleEffect>\n                                    </IonCol>\n                                    <IonCol size=\"4\" className=\"center\" >\n                                        <IonLabel> Calle </IonLabel>\n                                        <IonCard onClick = { FotoCalle } className = { errorImagenes.includes(\"C,\") ? \"errorInput\" : \"clearInput\" } >\n                                            <IonImg className=\"imagenViwer\"  src ={ fotoCalleEncode != \"\" ? fotoCalleEncode : sinFoto } >  </IonImg>\n                                        </IonCard>\n                                        <IonRippleEffect></IonRippleEffect>\n                                    </IonCol>\n                                </IonRow>\n                        </IonGrid>\n                        \n                        <br />\n                        {\n                            fotoActiva != '' ?\n                            <IonItem >\n                                <IonCard className = \"centrarCarousel\" >\n                                    <IonImg src={fotoActiva} />\n                                    <IonCardContent >\n                                        <IonButtons>\n                                            <IonButton color=\"secondary\" onClick={() => { setFotoActiva(''); }}>Cerrar</IonButton>\n                                            <IonButton color=\"danger\" onClick={() => { borrarFotoEvidencia(); }} >Eliminar</IonButton>\n                                        </IonButtons>\n                                    </IonCardContent>\n                                </IonCard>\n                            </IonItem> : <></>\n                        }\n                            <IonGrid>\n                                <IonRow>\n                                    <IonCol size=\"6\" className = \"center\" >\n                                        <IonButton color=\"secondary\" onClick = {regresar}>\n                                        <IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon>\n                                            Regresar\n                                        </IonButton>\n                                    </IonCol>\n                                    <IonCol size=\"6\" className = \"center\" >\n                                        <IonButton disabled = {bloquearCorte} color=\"danger\" onClick={validarCampos}>\n                                            Guardar\n                                            <IonIcon icon={saveOutline} slot=\"end\"></IonIcon>\n                                        </IonButton>\n                                    </IonCol>\n                                </IonRow>\n                            </IonGrid>\n                    </IonCardContent>\n                </IonCard>\n                <IonLoading \n                    cssClass=\"my-custom-class\"\n                    isOpen={loading}\n                    onDidDismiss={() => { setLoading(false); }}\n                    message=\"Por favor espere\"\n                />\n                <IonAlert\n                    cssClass=\"my-custom-class\"\n                    header={tipoMensaje}\n                    message={mensaje}\n\n                    isOpen={mensaje.length > 0}\n                    backdropDismiss={false}\n                    buttons={ errorCarga ? alertButtons : [{ text: 'Aceptar', \n                        handler: () => { \n                            if(mensaje == \"Corte realizado...\"){\n                                limpiarPantalla();\n                                extraerDatos();\n                            }\n                        setMensaje(\"\");\n                     } \n                }]}\n                />\n            </IonContent>\n        </IonPage>\n    );\n}\n\nexport default RealizarCorte;","import { IonButtons, \n    IonCard, \n    IonCardHeader, \n    IonCol, \n    IonContent, \n    IonHeader, \n    IonMenuButton, \n    IonPage, \n    IonRippleEffect, \n    IonRow, \n    IonText, \n    IonTitle, \n    IonToolbar, \n    useIonViewDidEnter, \n    useIonViewWillEnter,\n    IonSelect,\n    IonSelectOption, \n    IonItemDivider,\n    IonList,\n    IonItem,\n    IonLabel,\n    IonButton,\n    IonNote,\n    IonCardContent,\n    IonLoading,\n    IonAlert} from \"@ionic/react\";\nimport { useEffect, useState } from \"react\";\nimport { generarFechas } from '../../utilities'; \nimport MenuLeft from '../../components/left-menu';\nimport { ListaCortes } from '../../controller/apiController';\nimport { useHistory } from  'react-router-dom'; \nimport './buscar-corte.css'\nconst BuscarCorte: React.FC = () => {\n    const history = useHistory();\n    const [activarMenu , setActivarMenu ] = useState(true);\n    const [fechaActual, setFechaActual ] = useState(String);\n    const [ anios, setAnios ] = useState<any[]>([]);\n    const [ meses, setMeses ] = useState<any[]>([]);\n    const [ anioSeleccionado, setAnioSeleccionado ] = useState(11);\n    const [ mesSelecionado, setMesSeleccionado ] = useState(Number);\n    const [ arregloCortes , setArregloCortes ] = useState<any[]>([]);\n    const [ loading, setLoading ] = useState(false);\n    const [mensaje, setMensaje ] = useState(\"\");\n    const [ tipoMensaje, setTipoMensaje ] = useState( \"Mensaje\" );\n    const fecha = new Date();\n    const listaEstados = [\"Activo\",\"Cortado\",\"Baja Temporal\",\"Baja Permanente\",\"Inactivo\",\"Nueva\",\"\",\"\",\"Sin toma\",\"Multada\"];\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\n    useEffect(()=>{\n        setFechaActual(fecha.getFullYear() + \"-\" + (fecha.getMonth() + 1) + \"-\" + (fecha.getDate()  + 1 ));\n        preparaPantalla(String(fecha.getFullYear()));\n        \n    },[]);\n    const preparaPantalla = async (anio:string) =>{\n        let aniosMeses = await generarFechas(fecha.getFullYear());\n        setMeses(aniosMeses[0].Meses);\n        setAnios(aniosMeses[1].Anios);\n        setMesSeleccionado(fecha.getMonth() + 1);\n        //setAnioSeleccionado(fecha.getFullYear()); es mediante el id del arreglo\n    }\n    const obtenerCortes = async () =>{\n        setLoading(true);\n        await ListaCortes(mesSelecionado <= 9 ? (\"0\" + mesSelecionado ) : String(mesSelecionado),anios[anioSeleccionado-1].anio)\n        .then((result)=>{\n            setArregloCortes(result);\n        })\n        .catch((error)=>{\n            error.message == \"No se encontraron registros\" ? setTipoMensaje(\"MENSAJE\") : setTipoMensaje(\"ERROR\");\n            setMensaje(error.message);\n            setArregloCortes([]);\n        }).finally(()=>{\n            setLoading(false);\n        })\n    }\n    const regresarPantalla = ()=>{\n        history.goBack();\n    }\n    return(\n        <IonPage>\n            {\n                activarMenu ? \n                <MenuLeft /> : <></>\n            }\n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                    <IonTitle>Cortar toma</IonTitle>\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\n                        <IonMenuButton ></IonMenuButton>\n                    </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <IonCard>\n                    <IonCardHeader >\n                        <IonTitle className = \"center\" > Historial de cortes </IonTitle>\n                        <br />\n                        <IonRow className = \"bordeFecha\" >\n                            <IonCol size = \"6\" className = \"labelCalendario\" >\n                                <IonText > Seleccione el año: </IonText>\n                            </IonCol>    \n                            <IonCol size=\"6\" className = \"ion-activatable ripple-parent\">\n                                <div >\n                                    <IonSelect onIonCancel = { ()=>{setAnioSeleccionado(11)} }  interface = \"action-sheet\" value={ anioSeleccionado } onIonChange = {e=>{setAnioSeleccionado(e.detail.value)}} >\n                                        {\n                                            anios != null ?\n                                            anios.map((item,index)=>{\n                                                return <IonSelectOption value={ item.id } key = {index} >{ item.anio }</IonSelectOption>\n                                            }) : <></>\n                                        }\n                                    </IonSelect>\n                                    <IonRippleEffect></IonRippleEffect>\n                                </div>\n                            </IonCol>\n                        </IonRow>\n                        <IonRow className = \"bordeFecha\" >\n                            <IonCol size=\"6\" class=\"labelCalendario\">\n                                <IonText> Seleccione mes: </IonText>\n                            </IonCol>\n                            <IonCol>\n                                <div>\n                                    <IonSelect onIonCancel = { () => { setMesSeleccionado(fecha.getMonth() + 1) }} interface = \"action-sheet\" value = { mesSelecionado } onIonChange = {e => {setMesSeleccionado(e.detail.value)}} >\n                                        {\n                                            meses.map((mes,item)=>{\n                                                return <IonSelectOption value={mes.id} key = {mes.id} >{ mes.mes }</IonSelectOption>\n                                            })\n                                        }\n                                    </IonSelect>\n                                </div>\n                            </IonCol> \n                        </IonRow>\n                        <IonRow>\n                            <IonCol className = \"center margintop\" >\n                                <IonButton color=\"danger\" expand = \"block\" onClick = { obtenerCortes } > <IonText> Buscar Cortes </IonText> <IonRippleEffect></IonRippleEffect> </IonButton>\n                            </IonCol>\n                        </IonRow>\n                    </IonCardHeader>\n                    <IonCardContent>\n                        {/*NOTE: contenedor lista*/ }\n                        <div style = {{flex:1,justifyContent:\"center\", borderWidth: 1, marginTop: 5 }} >\n                            <IonList className = \"borderList\" >\n                                {\n                                    arregloCortes.map((item,index)=>{\n                                        return <IonItem key = {index} >\n                                            <IonLabel>\n                                                <h2> {item.Nombre} </h2>\n                                                <p> Contrato: { item.ContratoVigente }, Fecha: { item.FechaCorte } </p>\n                                                <p> Motivo: { item.Motivo } </p>\n                                                <IonNote slot = \"end\" color = {item.Estatus == 2 ? \"danger\" : \"primary\"} > {listaEstados[item.Estatus-1]} </IonNote>\n                                            </IonLabel>\n                                            </IonItem>\n                                    })\n                                }\n                            </IonList>\n                        </div>\n                    </IonCardContent>\n                </IonCard>\n                <IonLoading\n                cssClass=\"my-custom-class\"\n                isOpen={loading}\n                onDidDismiss={() => { setLoading(false); }}\n                message=\"Por favor espere\"\n                />\n                <IonAlert\n                cssClass=\"my-custom-class\"\n                header={tipoMensaje}\n                message={mensaje}\n                isOpen={mensaje.length > 0}\n                onDidDismiss = {()=>{setMensaje(\"\")}}\n                buttons ={[{\n                    text:\"Aceptar\",\n                    handler:()=>{setMensaje(\"\")}\n                }]}\n                />\n            </IonContent>\n        </IonPage>\n    );\n}\n\nexport default BuscarCorte;","import { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport Home from './pages/Home';\nimport TomaDatos from './pages/form-datos-toma/form-datos-toma.page'\nimport CapturaLectura from './pages/captura-de-lectura/captura-de-lectura.page'\nimport HistorialLecturas from './pages/historial-lecturas/historial-lecturas.page'\nimport EditarLectura from './pages/editar-lecturas-agua/editar-lecturas-agua.page'\nimport Reportes from './pages/reportes/reportes.page';\nimport ReportesContrato from './pages/buscar-contrato-reporte/buscar-contrato-reporte';\n//import HistorialReportes from './pages/historial-reportes/historial-reportes.page';\n//import DetallesHistorial from './pages/detalle-reporte/detalle-reporte.page';\nimport DatosContribuyente from './pages/datos-contribuyente/datos-del-contribuyente';\nimport PrincipalCortes from './pages/captura-cortes/buscar-contrato';\nimport RealizarCorte from './pages/realizar-corte/realizar-corte';\nimport BuscarCorte from './pages/buscar-corte/buscar-corte';\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nconst App: React.FC = () => (\n  <IonApp>\n    <IonReactRouter>\n      <IonRouterOutlet>\n        <Route exact path=\"/home\">\n          <Home />\n        </Route>\n        <Route exact path=\"/\">\n          <Redirect to=\"/home\" />\n        </Route>\n        <Route exact path = \"/form-datos-toma.page\">\n          <TomaDatos />\n        </Route>\n        <Route exact path = \"/captura-de-lectura.page\">\n          <CapturaLectura/>\n        </Route>\n        <Route exact path = \"/historial-lecturas.page\">\n          <HistorialLecturas/>\n        </Route>\n        <Route exact path = \"/editar-lecturas-agua.page\">\n          <EditarLectura/>\n        </Route>\n        <Route exact path = \"/datos-contribuyente.page\">\n          <DatosContribuyente/>\n        </Route>\n        <Route exact path = \"/buscar-contrato\">\n          <PrincipalCortes/>\n        </Route>\n        <Route exact path = \"/realizar-corte\">\n          <RealizarCorte />\n        </Route>\n        <Route exact path = \"/buscar-corte\" >\n          <BuscarCorte />\n        </Route>\n        <Route exact path = \"/reportes.page\">\n          <Reportes />\n        </Route>\n        <Route exact path = \"/ContratosReportes\" >\n          <ReportesContrato />\n        </Route>\n      </IonRouterOutlet>\n    </IonReactRouter>\n  </IonApp>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t142,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t143,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t144,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t145,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t146,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t147,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t148,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t149,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t150,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t151,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t152,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t153,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t154,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t155,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t156,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t157,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t158,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t159,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t160,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t161,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t162,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t163,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t164,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t165,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t166,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t167,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t168,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t169,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t170,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t171,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t172,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t173,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t174,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t175,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t176,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t177,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t178,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t179,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t180,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t181,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t182,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t183,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t184,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 93;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t185,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 95;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}