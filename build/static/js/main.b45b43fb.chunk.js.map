{"version":3,"sources":["controller/storageController.ts","controller/apiController.ts","api/api-laravel.service.ts","pages/Home.tsx","components/left-menu.tsx","pages/form-datos-toma/form-datos-toma.page.tsx","utilities.ts","pages/captura-de-lectura/captura-de-lectura.page.tsx","pages/historial-lecturas/historial-lecturas.page.tsx","pages/editar-lecturas-agua/editar-lecturas-agua.page.tsx","pages/datos-contribuyente/datos-del-contribuyente.tsx","pages/captura-cortes/buscar-contrato.tsx","pages/realizar-corte/realizar-corte.tsx","pages/buscar-corte/buscar-corte.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object"],"names":["restoreUser","remenberMe","localStorage","getItem","value","pass","user","remember","removeItem","guardarDatosCliente","basicData","recordar","setItem","contrasenia","usuario","String","idUsuario","cliente","token","userName","console","log","getUsuario","obtenerDatosCliente","guardarContratos","contratos","guardarDatosLectura","idLectura","contribuyente","contratoVigente","medidor","getDatosLecturaStorage","nCliente","extraerDatosEditarLectura","contrato","obtenerDatosClienteEditar","datosLectura","idConsulta","cerrarSesion","a","verifyingSession","setContribuyenteBuscado","setPuntero","getPuntero","cursor","puntero","Number","isNaN","setNumeroPaginas","getNumeroPaginas","noPages","pages","getLogoStorage","setLogoStorage","logoEncode","setClienteNombreCorto","clienteNombreCorto","setContribuyente","getContribuyente","clearState","setPunteroBusqueda","getPunteroBusqueda","data","getPaginasBusqueda","setCuentasPapas","papas","getCuentasPapas","setContratoCorte","item","getContratoCorte","getIdUsuario","service","axios","post","headers","date","Date","netwokError","Error","sesionNotValidError","failedLoginError","userNotValidError","lecturaCodeError","noRowSelect","LecturaNull","LecturaMenor","mesMayor","mesRegistrado","anioMayor","anioRegistrado","mesIgual","API223","APIError","errorCarga","errorImagenes","Login","password","remerber","acceso","passwd","getAuth","result","Status","datosUsuario","NombreCompleto","verificarUsuarioLecturista","verified","conectionError","userData","datos","buscarSectores","datosConsulta","Sectores","extraerDatosLectura","keyLectura","extraesDatosLectura","tipoLectura","ValorLectura","Valor","guardarCaptura","datosCaptura","validarDatosLectura","enviarDatosLectura","anomalia","parseInt","lectura","arrayAnios","mesActual","getMonth","isInteger","NaN","lecturaActual","consumo","consumoFinal","anioSeleccionado","indexAnio","anio","comparaMes","mesCaptura","comparaAnio","mesLectura","anhioSeleccionado","anhioCaptura","anhioActual","getFullYear","idToma","lecturaAnterior","fechaCaptura","latitud","Latidude","longitud","Longitude","tipoCoordenada","fotos","arregloFotos","ruta","route","code","Mensaje","message","historialFechas","fechaInicio","fechaFin","fechaInicioH","fechaFinH","extraerHistorial","getDatosLecturaEditar","extraerDatoseditar","obtenerContribuyente","busqueda","offset","sector","mes","datoBusqueda","a_no","Offset","obtenerDatosSectorPalabraClave","extraerContribuyente","mensaje","Array","isArray","obtenerTotalDatosSectores","extraerNumeroItems","length","items","cantidad","lecturasPorSectorPage","Sector","buscarLecturasPorSector","Papas","JSON","stringify","legth","obtenerPromedioConsumo","extraerPromedioContribuyente","Math","round","obtenerLogo","obtenerLogoCliente","logo","Data","obtenerDatosContribuyente","idBusqueda","extraerContactoContribuyente","Code","Contribuyente","actualizarContribuyente","contacto","id","telefono","email","guardarContribuyente","error","errorMessage","errorCode","typeError","includes","verifyCameraPermission","AndroidPermissions","checkPermission","PERMISSION","CAMERA","hasPermission","verifyGPSPermission","ACCESS_COARSE_LOCATION","solicitarPermisos","requestPermissions","obtenerPromedioEditar","padron","Cliente","Padron","Lectura","buscarContrato","Contrato","buscarPorContrato","buscarPorMedidor","verificarDatosCoutaFija","consumoData","guardarCuotaFija","Consumo","capturarCoutaFija","obtenerDatosCorte","Usuario","obtenerDatosContratoCorte","DatosContrato","push","RealizarCorteAPI","datosCorte","Motivo","Persona","Estado","Longitud","Latitud","Ejercicio","Evidencia","realizarCorteTomaSuinpac","resultCorte","jsonError","parse","ListaCortes","Mes","Anio","listarCortesUsuario","cortes","SplashScreen","Plugins","Home","history","useHistory","useState","User","setUserName","passwors","setPassword","loading","setLoading","setMessage","setRemember","useEffect","hide","handleRequestPermissions","recordarCredenciales","useIonViewWillEnter","validateUserData","setTimeout","then","replace","catch","err","finally","color","fullscreen","class","className","src","type","placeholder","onIonChange","e","detail","slot","checked","onClick","cssClass","isOpen","onDidDismiss","header","MenuLeft","selectedIndex","setSelectedIndex","setLogo","appPages","title","selects","icon","water","path","reader","cutOutline","timerOutline","logOut","itemSelected","cargarLogo","dir","window","location","pathname","toString","split","selected","undefined","map","pageIndex","index","side","menuId","contentId","name","button","ios","md","FormDatosTomaPage","setUser","sectores","setSectores","idSector","setIdSector","lecturas","setLecuras","typeErro","setTypeError","permissions","hideAlertButons","setHideAlertbuttons","block","setBlock","tipoMessage","setTipoMessage","tokenExpired","setTokenExpired","textoBusqueda","setTextoBusqueda","serched","setSerched","paginas","setPaginas","showPagination","setShowPagination","nombreCliente","setNombreCliente","setBusqueda","filtro","setFiltro","placeHolder","setPlaceHolder","alertButtons","text","handler","cargarSectores","buscarPorSector","handle","activarMenu","setActivarMenu","isSessionValid","valid","nombreCorto","prepararPantalla","camera","gps","storageUser","sessionValid","expired","abrirCapturaDatos","metodo","esPapa","punteroBuscarPorSector","handleSector","setSector","punteroBuscarPorClave","porContrato","zeroFill","porMedidor","number","width","onIonCancel","interface","filter","size","texto","shape","searchCircle","disabled","cancelText","itemIndex","arrowBackOutline","arrowForwardOutline","arrayData","estatus","cobro","leyendaCobro","functionValidarLectura","Estatus","M_etodoCobro","cuentaPapa","ContratoVigente","Medidor","Toma","style","fontsize","backdropDismiss","buttons","useTakePhoto","getPhoto","useCamera","takePhoto","resultType","CameraResultType","Uri","source","CameraSource","Camera","quality","cameraPhoto","generarFechas","listaMeses","listaAnios","generarAnios","obtenerBase64","leerArchivo","fetch","file","blob","blobFile","convertBase64","imgEncode","Promise","resolve","reject","FileReader","onerror","onloadend","baseSplit","readAsDataURL","defaultAnio","menorAnio","anioMaximo","idAnio","obtenerCoordenadas","Geolocation","getCurrentPosition","coords","CapturaDeLectura","Object","datosContribuyente","setDatosContribuyente","setLecturaAnterior","anomalias","setAnomalias","setConsumo","activarGaleria","setActivarGaleria","fotoActiva","setFotoActiva","fotosEvidencia","setFotosEvidencia","indexFoto","setIndexFoto","useIonToast","pressentToast","fotosCodificadas","setFotosCodificadas","setlistaMeses","mesDefautl","setMesDefault","indexMes","setIndexMes","anioActual","setAnioActual","indexAnioActual","setIndexAnioActual","setAnioLectura","setListaAnios","bloquearCampos","setBloquearcampos","btnInactivo","setComparaMes","setComparaAnio","seleccionAnomalia","setSeleccionAnomalia","setLecturaActual","setTipoLectura","setMesLectura","refreshControl","setRefreshControl","defaultLectura","setDefaultLectura","defaultAnomalia","setDefaultAnomalia","enbleButtons","setEnbleButtons","promedioLectura","setPromedioLectura","toma","setToma","municipio","setMunicipio","localidad","setLocalidad","direccion","setDireccion","bloqueoAnomalias","setBloqueoAnomalias","consumoMinimo","setConsumoMinimo","fija","setFija","fecha","cargarContribuyente","useIonViewDidEnter","extraerLectura","promedio","parseFloat","toFixed","Municipio","Localidad","Direccion","cargarFechas","LecturaActual","BloquearCampos","Anomalias","anioDefault","Meses","Anios","lecturaCasoUno","lecturaCasoDos","lecturaCasoTres","anioResult","meses","anhioLista","esteMes","anios","generarAniosPosterior","mesResult","mesComparacion","anioComparar","mensajeConsumoCero","handleBtnGuardar","validarConsumo","procesoConsumo","datosCapturados","latitude","longitude","guardarDatosCuotaFija","Fotos","handleAbrirCamera","agregarImagenEncode","webPath","imgDir","formatindex","numIndex","consumoProcesado","pencil","consumido","calcularConsumo","displayFormat","min","max","ActualizarAdelante","ActualizarAtras","Minima","handleSelectAnomalia","clave","descripci_on","foto","cambiarFotoActiva","generarGaleria","fotosTemporal","fotosEncoded","duration","position","checkmarkCircle","borrarFotoEvidencia","selectedText","chevronBackCircleOutline","saveOutline","HistorialLecturas","setFechaInicio","fechaFinal","setFechaFinal","historial","setHistorial","tipoMensaje","setTipoMensaje","setConectionErro","Boolean","expiredToken","setExpiredToken","alertsButtons","getDate","desde","hasta","validateFechas","editarContribuyente","idLectua","pickerFormat","doneText","handleSelectFechaInicio","handleSelectFechaFin","Fecha","eyeOutline","EditarLecturaAgua","setBloquearDatos","anhioLectura","setAnhioLectura","validarAnhio","setValidarAnhio","validarMes","setValidarMes","listaAnhios","setListaAnhios","setListaMeses","tipoAnomalia","setTipoAnomalia","fechaLectura","setFechaLectura","showToast","setShowToast","connectionError","setConnectionError","setTokenExpered","traceError","setTraceError","lecturaRegistrada","setLecturaRegistrada","alertRetriButtons","cargarDatos","guardarLectura","generarFechasAnhios","A_no","filtrarLectura","bloqueoCampos","goBack","LecturaAnterior","Observaci_on","FechaLectura","handleCalcularconsumo","Padr_onAgua","consumoCalculado","idPadron","regresarPantalla","Nombre","Colonia","Calle","Exterior","Interior","selectAnomalia","checkmarkCircleOutline","DatosContribuyente","setTelefono","setEmail","typeMessage","setTypeMessage","hideButtons","setHideButtons","handleBtnGuardarContacto","Celular","Email","sesionValid","saveSharp","PrincipalCortes","tipoFiltro","setTipoFiltro","setContrato","listaContratos","setListaContratos","setMensaje","sesionValida","setSessionValida","PorContrato","mostrarDatosContrato","expand","RealizarCorte","datosContrato","setDatosContrato","setDatosUsuario","fechaActual","setFechaActual","tipoInspeccion","setTipoInspecion","setArregloFotos","arregloFotosVista","setArregloFotosVista","motivoInspeccion","setMotivoInspeccion","ejercicio","setEjercicio","bloquearCorte","setBloquearCorte","setErrorCarga","errorCampos","setErrorCampos","extraerDatos","dia","formatoFecha","handleAbrirCamara","erro","base64Encode","guardarInspeccion","coordenadas","validarCampos","Rfc","Cuenta","PersonaNombre","Puesto","BuscarCorte","setAnios","setMeses","setAnioSeleccionado","mesSelecionado","setMesSeleccionado","arregloCortes","setArregloCortes","listaEstados","preparaPantalla","aniosMeses","obtenerCortes","flex","justifyContent","borderWidth","marginTop","FechaCorte","App","exact","to","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackAsyncContext","req","__webpack_require__","o","ids","keys","module","exports"],"mappings":"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","file":"static/js/main.b45b43fb.chunk.js","sourcesContent":["import { lockClosed } from \"ionicons/icons\";\n\n//controlador del LocalStorage\nexport function restoreUser() {\n    let remenberMe = localStorage.getItem(\"@Storage:recordarUsuario\");\n    if (remenberMe != null) {\n        let value = remenberMe == \"true\";\n        if (value) {\n            let user = {\n                pass: localStorage.getItem(\"@Storage:contraseniaX\"),\n                user: localStorage.getItem(\"@Storage:usuario\"),\n                remember: value\n            }\n            return user;\n        } else {\n            localStorage.removeItem('@Storage:contraseniaX');\n            localStorage.removeItem('\"@Storage:usuario\"');\n            let user = {\n                pass: '',\n                user: '',\n                remember: value\n            }\n            return user;\n        }\n    } else {\n        let user = {\n            pass: '',\n            user: '',\n            remember: false\n        }\n        return user;\n    }\n}\nexport function guardarDatosCliente(basicData: { usuario: string, idUsuario: Number, cliente: Number, token: string, recordar: boolean, contrasenia: string, userName: string }) {\n    basicData.recordar ? localStorage.setItem(\"@Storage:contraseniaX\", basicData.contrasenia) : localStorage.removeItem(\"@Storage:contraseniaX\");\n    localStorage.setItem(\"@Storage:usuario\", basicData.usuario);\n    localStorage.setItem(\"@Storage:idUsuario\", String(basicData.idUsuario));\n    localStorage.setItem(\"@Storage:cliente\", String(basicData.cliente));\n    localStorage.setItem(\"@Storage::userToken\", basicData.token);\n    localStorage.setItem(\"@Storage:recordarUsuario\", String(basicData.recordar));\n    localStorage.setItem(\"@Storage:userName\", basicData.userName);\n    console.log(basicData.userName)\n}\nexport function getUsuario() {\n    return localStorage.getItem(\"@Storage:usuario\");\n}\nexport function obtenerDatosCliente() {\n    let result = {\n        cliente: localStorage.getItem(\"@Storage:cliente\"),\n        idUsuario: localStorage.getItem(\"@Storage:idUsuario\"),\n        token: localStorage.getItem(\"@Storage::userToken\")\n    }\n    return result;\n}\nexport function guardarContratos(contratos: string) {\n    localStorage.setItem(\"@Storage:contratos\", contratos);\n}\nexport function guardarDatosLectura(idLectura: string, contribuyente: string, contratoVigente: string, medidor: string) {\n    localStorage.setItem('@Storage:idLectura', idLectura);\n    localStorage.setItem('@Storage:nContribuyente', contribuyente);\n    localStorage.setItem('@Storage:contratoVigente', contratoVigente);\n    localStorage.setItem('@Storage:medidor', medidor);\n    return true;\n}\nexport function getDatosLecturaStorage() {\n    let lectura = {\n        idLectura: localStorage.getItem('@Storage:idLectura'),\n        contribuyente: localStorage.getItem('@Storage:nContribuyente'),\n        contratoVigente: localStorage.getItem('@Storage:contratoVigente'),\n        medidor: localStorage.getItem('@Storage:medidor'),\n        //NOTE: TESTING: datos para el guardado de la lectura\n        nCliente: localStorage.getItem(\"@Storage:cliente\"),\n        token: localStorage.getItem(\"@Storage::userToken\"),\n        idUsuario: localStorage.getItem(\"@Storage:idUsuario\")\n    }\n    return lectura;\n}\nexport function getContratos() {\n    let datos = localStorage.getItem(\"@Storage:contratos\");\n    return datos;\n}\nexport function guardarDatosEditarLectura(idLectua: string, contrato: string, contribuyente: string, medidor: string) {\n    localStorage.setItem('@Storage:editarIdLectura', idLectua);\n    localStorage.setItem('@Storage:editarContratoVigente', contrato);\n    localStorage.setItem('@Storage:editarNContribuyente', contribuyente);\n    localStorage.setItem('@Storage:editarMedidor', medidor);\n    return true;\n}\nexport function extraerDatosEditarLectura() {\n    let result = {\n        idLectura: localStorage.getItem('@Storage:editarIdLectura'),\n        contrato: localStorage.getItem('@Storage:editarContratoVigente'),\n        contribuyente: localStorage.getItem('@Storage:editarNContribuyente'),\n        medidor: localStorage.getItem('@Storage:editarMedidor')\n    }\n    return result;\n}\nexport function obtenerDatosClienteEditar() {\n    let lecturaData = {\n        idConsulta: localStorage.getItem('@Storage:editarIdLectura'),\n        nCliente: localStorage.getItem('@Storage:cliente'),\n    }\n    return { datosLectura: lecturaData, token: localStorage.getItem('@Storage::userToken') };\n}\nexport async function cerrarSesion() {\n    //Olvidando credenciales\n    let remenber = localStorage.getItem(\"@Storage:recordarUsuario\");\n    if (remenber == \"false\") {\n        localStorage.removeItem(\"@Storage:usuario\");\n        localStorage.removeItem(\"@Storage:idUsuario\");\n        localStorage.removeItem(\"@Storage:cliente\");\n        localStorage.removeItem(\"@Storage::userToken\");\n        localStorage.removeItem(\"@Storage:contraseniaX\");\n    } else {\n        localStorage.removeItem(\"@Storage:idUsuario\");\n        localStorage.removeItem(\"@Storage:cliente\");\n        localStorage.removeItem(\"@Storage::userToken\");\n    }\n    return true\n}\nexport function verifyingSession() {\n    /* localStorage.setItem(\"@Storage::userToken\",\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczpcL1wvYXBpLnNlcnZpY2lvZW5saW5lYS5teFwvYXBpLW1vdmlsXC9sb2dpbi1wcmVzaWRlbnRlUHJ1ZWJhIiwiaWF0IjoxNjIxMzY1OTk0LCJleHAiOjE2MjE0MDE5OTQsIm5iZiI6MTYyMTM2NTk5NCwianRpIjoiV0w3VE9EeUZpQkhWZzZqRSIsInN1YiI6MzgwMCwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.5aG5sSnugBRIPvmj0QcbhHuqxPfBRkwrxN74bGz1uho\");\n     */let token = localStorage.getItem(\"@Storage::userToken\");\n    return token != null;\n}\nexport function obtenerIdReporte() {\n    let reporte = {\n        userName: localStorage.getItem(\"@Storage:userName\"),\n        id: localStorage.getItem(\"@Storage:idReporte\")\n    }\n    return reporte;\n\n}\nexport function obtenerToken() {\n    return String(localStorage.getItem(\"@Storage::userToken\"));\n}\nexport function guardarIdReporte(id: number) {\n    localStorage.setItem(\"@Storage:idReporte\", String(id));\n}\nexport function contribuyenteBuscado() {\n    let data = localStorage.getItem(\"@Storage:serched\");\n    if (data == null) {\n        return false;\n    } else {\n        return data === \"true\";\n    }\n}\nexport function setContribuyenteBuscado(value: Boolean) {\n    localStorage.setItem(\"@Storage:serched\", String(value));\n}\nexport function setPuntero(value: number){\n    localStorage.setItem(\"@Storage:cursor\",String(value))\n}\nexport function getPuntero(){\n    let cursor =  localStorage.getItem(\"@Storage:cursor\");\n    let puntero = Number(cursor);\n    if(isNaN(puntero)){\n        return 0;\n    }else{\n        return puntero\n    }\n}\nexport function setNumeroPaginas(value: number){\n    localStorage.setItem(\"@Storage:pages\",String(value));\n}\nexport function getNumeroPaginas(){\n    let noPages = localStorage.getItem(\"@Storage:pages\");\n    let pages = Number(noPages);\n    if(isNaN(pages)){\n        return 0\n    }else{\n        return pages;\n    }\n}\nexport function deleteContratos(){\n    localStorage.removeItem(\"@Storage:contratos\");\n}\nexport async function getLogoStorage(){\n    return localStorage.getItem(\"@Storage:logoCliente\");\n}\nexport async function setLogoStorage(logoEncode: string){\n    localStorage.setItem(\"@Storage:logoCliente\",logoEncode);\n}\nexport  function setClienteNombreCorto(clienteNombreCorto: string){\n    localStorage.setItem(\"@Storage:clienteNombreCorto\",clienteNombreCorto)\n}\nexport  function getClienteNombreCorto() {\n    return localStorage.getItem(\"@Storage:clienteNombreCorto\");\n}\nexport  function setContribuyente(contribuyente: string) {\n    localStorage.setItem(\"@Storage:idContribuyente\",contribuyente);\n}\nexport  function getContribuyente() {\n    return localStorage.getItem(\"@Storage:idContribuyente\");\n}\nexport function setSector(sector: string) {\n    localStorage.setItem(\"@Storage:idSector\",sector);\n}\nexport function getSector() {\n    return localStorage.getItem(\"@Storage:idSector\");\n}\nexport function clearState(){\n    localStorage.removeItem(\"@Storage:idSector\");\n    localStorage.removeItem(\"@Storage:cursor\");\n    localStorage.removeItem(\"@Storage:pages\");\n    localStorage.removeItem(\"@Storage:lecturaDesde\");\n    localStorage.removeItem(\"@Storage:lecturaHasta\");\n    localStorage.removeItem(\"@Storage:reporteDesde\");\n    localStorage.removeItem(\"@Storage:reporteHasta\");\n}\nexport function setFechasHistorialLectura (desde: string, hasta: string) {\n    localStorage.setItem(\"@Storage:lecturaDesde\",desde);\n    localStorage.setItem(\"@Storage:lecturaHasta\",hasta);\n}\nexport function getFechasHistorialLectura(){\n    let datos = localStorage.getItem(\"@Storage:lecturaDesde\");\n    if(datos != null){\n        let data = {\n            desde: localStorage.getItem(\"@Storage:lecturaDesde\"),\n            hasta: localStorage.getItem(\"@Storage:lecturaHasta\")\n        }\n        return data;\n    }else{\n        return null;\n    }\n}\nexport function setFechasHistorialReportes(desde: string, hasta: string){\n    localStorage.setItem(\"@Storage:reporteDesde\",desde);\n    localStorage.setItem(\"@Storage:reporteHasta\",hasta);\n}\nexport function getFechasHistorialReportes(){\n    let dato = localStorage.getItem(\"@Storage:reporteDesde\");\n    if(dato!=null){\n        let data = {\n            desde: localStorage.getItem(\"@Storage:reporteDesde\"),\n            hasta: localStorage.getItem(\"@Storage:reporteHasta\")\n        }\n        return data;\n    }else{\n        return null;\n    }\n}\nexport function setPunteroBusqueda(puntero: number){\n    console.log(puntero)\n    localStorage.setItem(\"@Storage:punteroBusqueda\",String(puntero));\n}\nexport function getPunteroBusqueda(){\n    let data = localStorage.getItem(\"@Storage:punteroBusqueda\");\n    let puntero = Number(data);\n    if(isNaN(puntero)){\n        return 0;\n    }else{\n        return puntero;\n    }\n}\nexport function setPaginasBusqueda(paginas: number){\n    localStorage.setItem(\"@Storage:paginasBusqueda\",String(paginas));\n}\nexport function getPaginasBusqueda(){\n   let data = localStorage.getItem(\"@Storage:paginasBusqueda\");\n   let pages = Number(data);\n   if(isNaN(pages)){\n       return 0;\n   }else{\n        return pages;\n   }\n}\nexport function setInspeccionPadronAgua(contribuyente: string){\n    localStorage.setItem(\"@Storage:inspeccionPadron\",contribuyente);\n}\nexport function getInspeccionPadronAgua(){\n    return localStorage.getItem(\"@Storage:inspeccionPadron\");\n}\nexport function obtnerCliente(){\n    return localStorage.getItem(\"@Storage:cliente\")\n}\nexport function setCuentasPapas(papas:String){\n    localStorage.setItem(\"@Storage:CuentasPapas\",String(papas));\n}\nexport function getCuentasPapas(){\n    return localStorage.getItem(\"@Storage:CuentasPapas\") != null ? localStorage.getItem(\"@Storage:CuentasPapas\"): \"\";\n}\nexport function setContratoCorte(item:string){\n    localStorage.setItem(\"@Storage:ContratoCorte\",item);\n}\nexport function getContratoCorte(){\n    return localStorage.getItem(\"@Storage:ContratoCorte\") != null ? localStorage.getItem(\"@Storage:ContratoCorte\") : \"\";\n}\nexport function getIdUsuario(){\n    return localStorage.getItem(\"@Storage:idUsuario\") != null ? localStorage.getItem(\"@Storage:idUsuario\") : 0;\n}","import { Motion } from '@capacitor/core';\nimport { AndroidPermissions } from '@ionic-native/android-permissions';\nimport { thermometer } from 'ionicons/icons';\nimport { Console } from 'node:console';\nimport { _private } from 'workbox-core';\nimport { APIservice } from '../api/api-laravel.service';\nimport {\n    guardarDatosCliente,\n    obtenerDatosCliente,\n    guardarContratos,\n    guardarDatosLectura,\n    getContratos,\n    obtenerDatosClienteEditar,\n    getDatosLecturaStorage,\n    setLogoStorage,\n    setClienteNombreCorto,\n    getContribuyente,\n    setContribuyente,\n    obtnerCliente,\n    obtenerToken,\n    extraerDatosEditarLectura,\n    setCuentasPapas,\n    getContratoCorte,\n    getIdUsuario,\n} from '../controller/storageController';\nimport DatosContribuyente from '../pages/datos-contribuyente/datos-del-contribuyente';\nconst service = new APIservice();\nconst date = new Date();\n//INDEV: Errores del sistema\nconst netwokError = new Error(\"Error al intentar comunicarse con la API. Verifique que su dispositivo se encuentre conectado a la red\");\nconst sesionNotValidError = new Error(\"Sesion no valida\");\nconst failedLoginError = new Error(\"Usuario y/o contraseña incorrectos\");\nconst userNotValidError = new Error(\"No puedes iniciar sesión con este usuario\");\nconst lecturaCodeError = new Error('Consulte con su administrador que el código de lecturas de agua se encuentre en el rango de 1-3');\nconst noRowSelect = new Error(\"No se encontraron registros\");\nconst LecturaNull = new Error(\"No se ha calculado el consumo\");\nconst LecturaMenor = new Error(\"La lectura actual no puede ser menor a la anterior\");\nconst mesMayor = new Error(\"Aun no puedes realizar registros para el mes seleccionado\");\nconst mesRegistrado = new Error(\"El mes seleccionado ya fue registrado\");\nconst anioMayor = new Error(\"Aun no puedes realizar registros para este año\");\nconst anioRegistrado = new Error(\"Ya no puedes realizar registros para este año\");\nconst mesIgual = new Error(\"este mes ya fue registrado\");\nconst API223 = new Error(\"Revisa que los campos esten rellenados de forma correcta\");\nconst APIError = new Error(\"Error del servidor\");\nconst atrasError = new Error(\"El mes seleccionada debe se mayor a la actual\");\nconst adelanteError = new Error(\"El mes de la lectura debe ser menor al actual\");\nconst PermissionsError = new Error(\"Para poder hacer uso de todas las funciones de la aplicaciòn por favor acepta los permisos solicitados por la misma\");\nconst errorCarga = new Error(\"Error al obtener los datos del contrato 403\");\nconst errorImagenes = new Error(\"Corte realizado\\nHubo un error al subir las imagenes\");\nexport async function Login(user: string, password: string, remerber: boolean) {\n    const acceso = {\n        usuario: user,\n        passwd: password\n    }\n    try {\n        let result = await service.getAuth(acceso);\n        //Verificanos si el inicio de session es valido\n        let sessionValida = result.data.Status;\n        if (sessionValida == true) {\n            let data = {\n                usuario: user,\n                cliente: result.data.cliente,\n                idUsuario: result.data.idUsuario,\n                token: result.data.token,\n                recordar: remerber,\n                contrasenia: password,\n                userName: result.data.datosUsuario.NombreCompleto\n            }\n            console.log(data.token);\n            let verified = await verificarUsuarioLecturista(data);\n            if (verified === true) {\n                return verified;\n            } else {\n                throw verified;\n            }\n        } else {\n            throw failedLoginError;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n\n}\nasync function verificarUsuarioLecturista(userData: any) {\n    try {\n        let datos = {\n            usuario: userData.idUsuario,\n            cliente: userData.cliente\n        }\n        if (datos.cliente === \"-1\") {\n            throw userNotValidError;\n        }\n        let result = await service.verificarUsuarioLecturista(datos, userData.token);\n        let esLecturista = result.data.Status;\n        if (esLecturista) {\n            guardarDatosCliente(userData);\n            return true;\n        } else {\n            throw userNotValidError;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function buscarSectores() {\n    try {\n        let basicData = obtenerDatosCliente();\n        const datosConsulta = {\n            nCliente: basicData.cliente,\n            idUsuario: basicData.idUsuario,\n        }\n        let result = await service.buscarSectores(datosConsulta, basicData.token + \"\");\n        return result.data.Sectores;\n    } catch (error) {\n        throw conectionError(error)\n    }\n}\nexport async function lecturasPorSector(sector: string) {\n    try {\n        let basicData = obtenerDatosCliente();\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        const datosConsulta = {\n            nCliente: basicData.cliente,\n            Sector: sector,\n            mes: mes,\n            a_no: anio\n        }\n        let result = await service.buscarLecturasPorSector(datosConsulta, basicData.token + \"\");\n        let mensaje = result.data.mensaje;\n        guardarContratos(JSON.stringify(mensaje));\n        if (mensaje.legth === 0 || mensaje === \"No se encontraron registros\") {\n            throw noRowSelect;\n        } else {\n            return mensaje;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function extraerDatosLectura(keyLectura: string) {\n    try {\n        //Extrallendo los datos de la lectura\n        let basicData = obtenerDatosCliente();\n        let datos = {\n            nCliente: basicData.cliente,\n            idLectura: keyLectura\n        }\n        let result = await service.extraesDatosLectura(datos, basicData.token + \"\");\n        console.log(result);\n        let tipoLectura = result.data.ValorLectura[0].Valor;\n        if (tipoLectura != '1' && tipoLectura != '2' && tipoLectura != '3') {\n            throw lecturaCodeError\n        } else {\n            return result.data;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function guardarCaptura(datosCaptura: any) {\n    try {\n        let result = await validarDatosLectura(datosCaptura);\n        console.log(result);\n        if (result === true) {\n            //NOTE: se manda a llamar al metodo de guardado\n            let result = await enviarDatosLectura(datosCaptura);\n            return result;\n        } else {\n            throw result;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\n/**\n * Funcion para verificar los datos de al guardar la captura del agua\n */\nasync function validarDatosLectura(data: any) {\n    let anomalia = parseInt(data.anomalia);\n    let tipoLectura = data.lectura;\n    let arrayAnios = data.arrayAnios;\n    let mesActual = date.getMonth() + 2;\n    if (!Number.isInteger(anomalia)) {\n        anomalia = NaN;\n    }\n    //Validamos que la lectura no este vacia\n    if (data.lecturaActual == null) {\n        throw LecturaNull;\n    }\n    //Validamos que el consumo no sea menor a 0 \n    let consumo = parseInt(data.consumoFinal);\n    if (!isNaN(anomalia)) {\n        if (consumo < 0) {\n            throw LecturaMenor;\n        }\n    } else {\n        if (consumo <= 0) {\n            throw LecturaMenor;\n        }\n    }\n    //REVIEW: Esto creo que no es necesario\n    if (tipoLectura == 3) {\n        let anioSeleccionado = arrayAnios[data.indexAnio - 1].anio;\n        //mayor \n        if (data.comparaMes < data.mesCaptura) {\n            throw mesMayor;\n        }\n        if (data.comparaAnio < anioSeleccionado) {\n            throw anioMayor\n        }\n        //menor\n        if (data.comparaMes > data.mesCaptura) {\n            throw mesRegistrado\n        }\n        if (data.comparaAnio > anioSeleccionado) {\n            throw anioRegistrado\n        }\n        if (mesActual == 13) {\n            mesActual = 1;\n        }\n        if (mesActual == data.mesLectura) {\n            throw mesIgual\n        }\n    } else\n        if (tipoLectura == 2) {\n            let anhioSeleccionado = arrayAnios[data.indexAnio - 1].anio;\n\n            if (data.comparaMes < data.mesCaptura) {\n                throw mesMayor;\n            }\n            if (data.comparaMes > data.mesCaptura) {\n                throw mesRegistrado\n            }\n            if (data.comparaAnio < anhioSeleccionado) {\n                throw anioMayor\n            }\n            if (data.comparaAnio > anhioSeleccionado) {\n                throw anioRegistrado\n            }\n            if (data.mesCaptura >= data.comparaAnio && data.anhioCaptura >= data.comparaAnio) {\n                throw mesIgual\n            }\n\n        } else\n            if (tipoLectura == 1) {\n                let anhioSeleccionado = arrayAnios[data.indexAnio - 1].anio;\n                let mesActual, anhioActual;\n                if (data.mesCaptura > data.comparaMes) {\n                    throw mesMayor\n                }\n                if (anhioSeleccionado > data.comparaAnio) {\n                    throw anioMayor\n                }\n                if (data.mesCaptura < data.comparaMes) {\n                    throw mesRegistrado\n                }\n                if (anhioSeleccionado < data.comparaAnio) {\n                    throw anioRegistrado\n                }\n                mesActual = date.getMonth() + 2;\n                anhioActual = date.getFullYear();\n                if (mesActual == 13) {\n                    mesActual = 1;\n                    anhioActual = date.getFullYear() + 1;\n                }\n                if (mesActual == data.mesCaptura && anhioActual == data.comparaAnio) {\n                    throw mesMayor\n                }\n            }\n    return true;\n\n}\nasync function enviarDatosLectura(data: any) {\n    const datos = {\n        idToma: data.idToma,\n        cliente: data.nCliente,\n        lecturaAnterior: data.lecturaAnterior,\n        lecturaActual: data.lecturaActual,\n        consumoFinal: data.consumoFinal,\n        mesCaptura: data.mesCaptura,\n        anhioCaptura: data.anhioCaptura,\n        fechaCaptura: data.fechaCaptura,\n        anomalia: data.anomalia,\n        idUsuario: data.idUsuario,\n        latitud: data.Latidude,\n        longitud: data.Longitude,\n        tipoCoordenada: 1,\n        fotos: [],\n        arregloFotos: data.arregloFotos,\n        ruta: data.route\n    }\n    let result = await service.guardarDatosLectura(datos, data.token);\n    console.log(result);\n    let code = result.data.Mensaje;\n    let message = \"\";\n    switch (code) {\n        case 200:\n            message = \"Ok\";\n            break;\n        case 224:\n            throw new Error(\"No se pudo realizar el registro\");\n            break;\n        case 223:\n            throw API223;\n        case 400:\n            throw new Error(\"El mes ya fue capturado\");\n            break;\n        default:\n            throw APIError;\n            break;\n    }\n    return message;\n}\nexport async function obtenerSiguienteIndice(idLectura: number) {\n    let contratos = getContratos();\n    let arrayContratos = new Array;\n    let indice = -1;\n    if (contratos != null) {\n        arrayContratos = JSON.parse(contratos);\n        arrayContratos.map((item, index) => {\n            if (item.id == idLectura)\n                indice = index + 1;\n        })\n    }\n    let result = false;\n    if (indice < arrayContratos.length) {\n        let lecturaSiguiente = arrayContratos[indice];\n        result = guardarDatosLectura(lecturaSiguiente.id, lecturaSiguiente.Contribuyente, lecturaSiguiente.ContratoVigente, lecturaSiguiente.Medidor)\n    }\n    return result;\n}\n//INDEV: dando soporte a los errores\nexport async function historialFechas(fechaInicio: string, fechaFin: string) {\n    try {\n        //Obteniedo los datos para la consulta\n        let basicData = obtenerDatosCliente();\n        let data = {\n            idUsuario: basicData.idUsuario,\n            nCliente: basicData.cliente,\n            fechaInicioH: fechaInicio,\n            fechaFinH: fechaFin\n        }\n        let result = await service.extraerHistorial(data, basicData.token + \"\");\n        if (result.data.Status) {\n            return result.data;\n        } else {\n            throw noRowSelect;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function getDatosLecturaEditar() {\n    try {\n        let { datosLectura, token } = obtenerDatosClienteEditar()\n        if (token != null) {\n            let result = await service.extraerDatoseditar(datosLectura, token);\n            return result.data\n        } else {\n            throw null;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function validorDatosEditarLectura(lecturaDatos: any) {\n    if (lecturaDatos.lecturaActual == \"\" || lecturaDatos.lecturaActual == null)\n        throw LecturaNull;\n    else if (lecturaDatos.consumo < 0)\n        throw LecturaMenor;\n    else if (lecturaDatos.validarAnhio < lecturaDatos.anhioLectura)\n        throw anioMayor;\n    else if (lecturaDatos.validarAnhio > lecturaDatos.anhioLectura)\n        throw anioRegistrado;\n    else if (lecturaDatos.mesLectura < lecturaDatos.validarMes)\n        throw mesRegistrado\n    else if (lecturaDatos.mesLectura > lecturaDatos.validarMes)\n        throw mesMayor;\n    else\n        return null\n\n}\nexport async function actualizarLectura(lecturaDatos: any) {\n    try {\n        let result = await validorDatosEditarLectura(lecturaDatos);\n        let { datosLectura, token } = obtenerDatosClienteEditar();\n        if (result == null) {\n            let data = {\n                idPadronLetura: datosLectura.idConsulta,\n                idToma: lecturaDatos.idPadron,\n                cliente: datosLectura.nCliente,\n                anhioCaptura: lecturaDatos.anhioLectura,\n                consumoFinal: lecturaDatos.consumo,\n                fechaCaptura: lecturaDatos.fechaLectura,\n                lecturaActual: lecturaDatos.lecturaActual,\n                lecturaAnterior: lecturaDatos.lecturaAnterior,\n                mesCaptura: lecturaDatos.mesLectura,\n                anomalia: lecturaDatos.tipoAnomalia\n            }\n            let result = await service.actualizarDatosLectura(data, token + \"\")\n            return result.data;\n        } else {\n            throw result;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function crearReporte(data: { colonia: String, calle: String, numero: String, descripcion: String, contrato: string, fallaAdministrativa: number }) {\n    try {\n        let valid = validarDatosReporte(data);\n        if (valid) {\n            //Llamada a la API\n            let basicData = obtenerDatosCliente();\n            let datosreporte = {\n                cliente: basicData.cliente,\n                usuario: basicData.idUsuario,\n                colonia: data.colonia,\n                calle: data.calle,\n                numero: data.numero,\n                descripcion: data.descripcion,\n                contrato: data.contrato,\n                fallaAdministrativa: data.fallaAdministrativa,\n            }\n            let result = await service.crearReporte(datosreporte, basicData.token + \"\")\n            if (result.data.Status)\n                return result.data.Mensaje\n            else\n                throw new Error(result.data.Mensaje);\n        } else {\n            throw new Error(\"Los campos que presentan * son obligatorios\");\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nfunction validarDatosReporte(data: { colonia: String, calle: String, numero: String, descripcion: String, contrato: string }) {\n    if (data.colonia == \"\" || data.calle == \"\" || data.descripcion == \"\") {\n        return false\n    } else {\n        return true;\n    }\n}\nexport async function historialReportes(fechaInicio: string, fechaFin: string) {\n    try {\n        let basicData = obtenerDatosCliente();\n        let data = {\n            idUsuario: basicData.idUsuario,\n            cliente: basicData.cliente,\n            fechaInicio: fechaInicio,\n            fechaFin: fechaFin\n        }\n        let result = await service.extraerHistorialReportes(data, basicData.token + \"\");\n        if (result.data.Mensaje.length <= 0) {\n            throw noRowSelect;\n        } else {\n            return result.data.Mensaje;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function extraerReporte(id: String) {\n    try {\n        //Obteniendo datos basicos para la consulta;\n        let basicData = obtenerDatosCliente();\n        let data = {\n            cliente: basicData.cliente,\n            idUsuario: basicData.idUsuario,\n            id: id\n        }\n        let result = await service.extraerReporte(data, String(basicData.token));\n        if (result.data.Mensaje.length <= 0) {\n            throw noRowSelect;\n        } else {\n            return result.data.Mensaje;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function obtenerContribuyente(busqueda: string,offset: number,sector: String) {\n    try {\n        let { token, cliente } = obtenerDatosCliente();\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        let datos = {\n            nCliente: cliente,\n            datoBusqueda: busqueda,\n            mes: mes,\n            a_no: anio,\n            Offset: offset,\n            sector:sector\n        }\n        let result = null;\n        if(sector != \"-1\"){\n            result = await service.obtenerDatosSectorPalabraClave(datos,String(token));\n            console.log(\"Se utiliso el sector: \" + sector);\n        }else{\n            result = await service.extraerContribuyente(datos, String(token));\n        }\n        //Mensaje \"Campos vacios\", \"No se encontraron registros\"\n        let data = result.data.mensaje;\n        let isArray = Array.isArray(data);\n        if (isArray) {\n            return data;\n        } else {\n            let message = String(data);\n            throw new Error(message);\n        }\n    } catch (err) {\n        throw conectionError(err);\n    }\n}\nexport async function obtenerTotalDatosSectores(sector: string) {\n    try {\n        let basicData = obtenerDatosCliente();\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        const datosConsulta = {\n            cliente: basicData.cliente,\n            sector: sector,\n            mes: mes,\n            anio: anio\n        }\n        let result = await service.extraerNumeroItems(datosConsulta, String(basicData.token));\n        let exist = result.data.Mensaje.length;\n        if (exist >= 1) {\n            let items = result.data.Mensaje[0].cantidad;\n            let pages = items / 20;\n            let resid = pages % 1;\n            if (resid > 0) {\n                pages++;\n            }\n            return pages;\n        } else {\n            return 0;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function lecturasPorSectorPage(sector: string, offset: number,) {\n    try {\n        let basicData = obtenerDatosCliente();\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        const datosConsulta = {\n            nCliente: basicData.cliente,\n            Sector: sector,\n            mes: mes,\n            a_no: anio,\n            Offset: offset\n        }\n        let result = await service.buscarLecturasPorSector(datosConsulta, basicData.token + \"\");\n        let mensaje = result.data.mensaje;        \n        setCuentasPapas(result.data.Papas);\n        guardarContratos(JSON.stringify(mensaje));\n        if (mensaje.legth === 0 || mensaje === \"No se encontraron registros\") {\n            throw noRowSelect;\n        } else {\n            return mensaje;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function obtenerPromedioConsumo() {\n    try {\n        let { idLectura, token, nCliente } = getDatosLecturaStorage();\n        let datos = {\n            idLectura: idLectura,\n            nCliente: nCliente,\n        }\n        let result = await service.extraerPromedioContribuyente(datos, String(token));\n        let data = result.data.Mensaje;\n        data = Math.round(data);\n        return data;\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function obtenerLogo() {\n    try {\n        let { cliente, token } = obtenerDatosCliente();\n        let data = {\n            nCliente: cliente\n        }\n        let logo = await service.obtenerLogoCliente(data, String(token));\n        setClienteNombreCorto(String(logo.data.Data));\n        setLogoStorage(String(logo.data.Mensaje));\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function obtenerDatosContribuyente() {\n    try {\n        let { idLectura, token } = getDatosLecturaStorage();\n        let { cliente } = obtenerDatosCliente();\n        let datos = {\n            nCliente: cliente,\n            idBusqueda: idLectura\n        }\n        let data = await service.extraerContactoContribuyente(datos, String(token));\n        let result = data.data.Mensaje[0];\n        if( data.data.Code == 200 ){\n            if(data.data.Mensaje.length > 0){\n                setContribuyente(result.Contribuyente);\n            }else{\n                console.log(\"Mensaje de prueba\");\n                throw noRowSelect;\n            }\n        }else{\n\n        }\n        \n        return result;\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function actualizarContribuyente(contacto: { telefono: String, email: String }) {\n    try {\n        let { nCliente, token } = getDatosLecturaStorage();\n        let contribuyente = getContribuyente();\n        let data = {\n            cliente: nCliente,\n            id: contribuyente,\n            telefono: contacto.telefono,\n            email: contacto.email\n        }\n        let result = await service.guardarContribuyente(data, String(token));\n        return result.data.Mensaje;\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function obtenerTotalDatosBusqueda(clave: string, sector: string) {\n    try {\n        let { cliente, token } = obtenerDatosCliente()\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        let data = {\n            cliente: cliente,\n            mes: mes,\n            anio: anio,\n            busqueda: clave,\n            sector: sector\n        }\n        let result = null;\n        if(sector != \"-1\"){\n            console.log(data);\n            result = await service.obtenerNumeroItemsBusquedaSector(data, String(token));\n        }else{\n            result = await service.extraerNumeroItemsBusqueda(data, String(token));\n        }\n        /* return result.data.Mensaje.length; */\n        let exist = result.data.Mensaje.length;\n        if(exist >= 1){\n            let items = result.data.Mensaje[0].Total;\n            let pages = items / 20;\n            let resid = pages % 1;\n            if(resid > 0){\n                pages++;\n            }\n            return pages\n        }else{\n            return 0;\n        }\n    } catch (error) {\n        throw conectionError(error);\n    }   \n}\nfunction conectionError(error: any) {\n    let errorMessage = String(error.message);\n    let errorCode = String(error.code);\n    let typeError = error;\n    if (errorMessage.includes(\"Network Error\")) {\n        typeError = netwokError;\n    } else if (errorMessage.includes(\"400\")) {\n        typeError = sesionNotValidError;\n    } else if (errorCode.includes(\"ECONNABORTED\")) {\n        typeError = netwokError;\n    }\n    return typeError;\n}\nexport async function verifyPermissions() {\n    let list = [\n        AndroidPermissions.PERMISSION.CAMERA,\n        AndroidPermissions.PERMISSION.ACCESS_COARSE_LOCATION,\n    ]\n    let validPermissions = \"Salida:\";\n    list.map((item, index) => {\n        let data = AndroidPermissions.checkPermission(item);\n        validPermissions += data + \"\";\n    })\n    return validPermissions;\n}\nexport async function verifyCameraPermission() {\n    let value = await AndroidPermissions.checkPermission(AndroidPermissions.PERMISSION.CAMERA);\n    return value.hasPermission;\n}\nexport async function verifyGPSPermission() {\n    let value = await AndroidPermissions.checkPermission(AndroidPermissions.PERMISSION.ACCESS_COARSE_LOCATION);\n    return value.hasPermission;\n}\nexport async function obtenerContribuyenteInspeccion(busqueda: String){\n    try{\n        let { cliente, token } = obtenerDatosCliente();\n        let data = {\n            Cliente: cliente,\n            Busqueda: busqueda\n        }\n        let result = await service.obtenerContribuyenteInspeccion(data,String(token));\n        let listaDatos =  result.data.mensaje;\n        if(listaDatos instanceof Array){\n            return listaDatos;\n        }else{\n            throw noRowSelect;\n        }\n    }catch(error){\n        throw conectionError(error);\n    }   \n}\n/**\n * Funcion para pedir permisos Camara, gps, storage\n * Si se utilza en web marca un error (Cordova_web_notabiable) solo se utilza en dispisitivos fisicos y emuladoress\n */\nexport async function solicitarPermisos() {\n    let result = await AndroidPermissions.requestPermissions([\n        AndroidPermissions.PERMISSION.CAMERA,\n        AndroidPermissions.PERMISSION.ACCESS_COARSE_LOCATION,\n    ]);\n    return result;\n}\nexport async function obtnerContribuyenteInspeccion(id:String){\n    try{\n        let datos = {\n            Cliente: obtnerCliente(),\n            Padron: id\n        };\n        let result = await service.obtenerDatosContribuyentePorPadron(datos,obtenerToken());\n        console.log(result.data.mensaje.length);\n        let datosContribuyente = result.data.mensaje;\n        if(datosContribuyente.length > 0){\n            return datosContribuyente[0];\n        }else{\n            throw noRowSelect;\n        }\n    }catch(error){\n        throw conectionError(error);\n    }\n}\nexport async function  obtenerPromedioEditar(padron: number){\n    try {\n        let { token, nCliente } = getDatosLecturaStorage();\n        let datosLectura = extraerDatosEditarLectura();\n        let datos = {\n            Cliente: nCliente,\n            Padron: padron,\n            Lectura: datosLectura.idLectura //Esta es la lectura que se va a editar\n        }\n        let result = await service.obtenerPromedioEditar(datos, String(token));\n        let data = result.data.Mensaje;\n        data = Math.round(data);\n        return data;\n    } catch (error) {\n        throw conectionError(error);\n    }\n}\n\nexport async function buscarContrato(busqueda:string){\n    try{\n        console.log(\"Buscando por contrato\");\n        let { cliente,token } = obtenerDatosCliente();\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        let datos = {\n            Cliente: cliente,\n            Contrato: busqueda,\n            mes: mes,\n            a_no: anio\n        };\n        let result = await service.buscarPorContrato(datos,String(token));\n        let data = result.data.Mensaje;\n        setCuentasPapas(result.data.Papas);\n        let isArray = Array.isArray(data);\n        if (isArray) {\n            return data;\n        } else {\n            let message = String(data);\n            throw new Error(message);\n        }\n    }catch (error) {\n        throw conectionError(error);\n    }\n}\nexport async function buscarPorMedidor(busqueda:string){\n    try{\n        let { cliente,token } = obtenerDatosCliente();\n        let mes = date.getMonth() + 1;\n        let anio = date.getFullYear();\n        let datos = {\n            Cliente: cliente,\n            Contrato: busqueda,\n            mes: mes,\n            a_no: anio\n        };\n        let result = await service.buscarPorMedidor(datos,String(token));\n        let data = result.data.Mensaje;\n        setCuentasPapas(result.data.Papas);\n        console.log(result.data.Papas);\n        let isArray = Array.isArray(data);\n        if (isArray) {\n            return data;\n        } else {\n            let message = String(data);\n            throw new Error(message);\n        }\n    }catch(error){\n        throw conectionError(error);\n    }\n}\nfunction verificarDatosCoutaFija( consumoData: string ){\n    //NOTE: Verificamos que el consumo sea valido\n    let consumo = parseInt(consumoData);\n    if(!isNaN(consumo)){\n        if(consumo < 0 ){\n            throw LecturaMenor;\n        }else{\n            return true;\n        }\n    }else{\n        throw LecturaNull;\n    }\n}\nexport async function guardarCuotaFija(data:any){\n    try{\n        //NOTE: Verificamos los datos del consumo\n        if( verificarDatosCoutaFija(data.Consumo)){\n            //Enviamo los datoa a la API\n            let basicData = obtenerDatosCliente();\n            let token = basicData.token;\n            //NOTE: damos formato a los datos en la interfaz\n            let result = await service.capturarCoutaFija(data,String(token));\n            console.log(result);\n            if(result.data.Code == 200){\n                return true;\n            }else if(result.data.Code == 404){\n                throw noRowSelect;\n            }else if(result.data.Code == 423){\n                throw mesMayor;\n            }else if(result.data.Code == 424){\n                throw mesRegistrado;\n            }\n        }\n    }catch(error){\n        throw conectionError(error);\n    }\n\n}\nexport async function obtenerDatosCorte(){\n    try {\n        let { cliente,token } = obtenerDatosCliente(); \n        let padron = getContratoCorte();\n        let Usuario = getIdUsuario();\n        let datos = {\n            'Padron': padron,\n            'Cliente': cliente,\n            'Usuario': Usuario\n        };\n        let result = await service.obtenerDatosContratoCorte(datos,String(token));\n        let DatosContrato = [];\n        if( result.data.code == 200 ){\n            DatosContrato.push(result.data.Mensaje[0]);\n            DatosContrato.push(result.data.Usuario[0]);\n            console.log(DatosContrato);\n            return DatosContrato;\n        }else if ( result.data.code == 403 ){\n            throw errorCarga;\n        }else if ( result.data.code == 404 ){\n            throw noRowSelect;\n        }\n    }catch(error){\n        throw conectionError(error);\n    }\n}\nexport async function RealizarCorteAPI( datos: {Evidencia:any,Motivo:string, Padron: number, Persona:number, Estado: number, Usuario: number, Longitud:string, Latitud: string, Ejercicio: number} ){\n    try {\n        let { cliente, token } = obtenerDatosCliente();\n        let datosCorte = {\n            Cliente: cliente,\n            Motivo: datos.Motivo,\n            Padron: datos.Padron,\n            Persona: datos.Persona,\n            Usuario: datos.Usuario,\n            Estado: datos.Estado,\n            Longitud:datos.Longitud,\n            Latitud: datos.Latitud,\n            Ejercicio: datos.Ejercicio,\n            Evidencia:datos.Evidencia\n        };\n        let resultCorte = await service.realizarCorteTomaSuinpac( datosCorte, String(token));\n        if(resultCorte.data.Code == 200){\n            return (\"OK\");\n        }else if(resultCorte.data.Code == 206){\n            throw errorImagenes;\n        }else if(resultCorte.data.Code == 400){\n            let jsonError = JSON.parse(resultCorte.data.Mensaje);\n            throw new Error(`Error ${jsonError.Code}:\\n${jsonError.Mensaje}`);\n        }\n    }catch( error ){\n        throw conectionError(error);\n    }\n}\nexport async function ListaCortes(Mes: string, Anio: number){\n    try{\n        let { cliente ,idUsuario, token } = obtenerDatosCliente();\n        let data = {\n            \"Cliente\": cliente,\n            \"Usuario\": idUsuario,\n            \"Ejercicio\": Anio,\n            \"Mes\": Mes\n        };\n        let cortes = await service.listarCortesUsuario( data,String(token) );\n        if(cortes.data.Code == 200){\n            return cortes.data.Mensaje;\n        }else if(cortes.data.Code == 404){\n            throw noRowSelect;\n        }\n    }catch(error){\n        throw conectionError(error);\n    }\n}","import axios from 'axios'\nimport { returnUpBackOutline } from 'ionicons/icons';\nexport class APIservice {\n    //llamada a la api en la\n    getAuth(data: object) {\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/login-presidentePrueba`, data)\n    }\n    verificarUsuarioLecturista(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/verificarUsuarioLecturistaPrueba`, data, { headers });\n    }\n    buscarSectores(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post('https://api.servicioenlinea.mx/api-movil/buscarSectores', data, { headers })\n    }\n    buscarLecturasPorSector(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/datosLecturaPorSector`, data, { headers });\n    }\n    extraesDatosLectura(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post('https://api.servicioenlinea.mx/api-movil/extrarDatosLecturaPrueba', data, { headers })\n    }\n    guardarDatosLectura(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/guardarDatosLecturaPrueba`, data, { headers })\n    }\n    extraerHistorial(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerHistorialPrueba`, data, { headers });\n    }\n    extraerDatoseditar(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerDatosEditarPrueba`, data, { headers });\n    }\n    actualizarDatosLectura(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/actualizarRegistroPrueba`, data, { headers });\n    }\n    crearReporte(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/crearReportePrueba`, data, { headers });\n    }\n    extraerHistorialReportes(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/listaReportes`, data, { headers });\n    }\n    extraerReporte(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerReporte`, data, { headers });\n    }\n    extraerContribuyente(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/datosLecturaAguaPrueba`, data, { headers });\n    }\n    extraerNumeroItems(data: object, token: String) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/paginas`, data, { headers });\n    }\n    extraerPromedioContribuyente(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/obtenerConsumoPromedio`, data, { headers });\n    }\n    obtenerLogoCliente(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerLogo`, data, { headers });\n    }\n    extraerContactoContribuyente(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerContribuyente`, data, { headers });\n    }\n    guardarContribuyente(data: object, token: string) {\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/guardarContribuyente`,data,{headers});\n    }\n    extraerNumeroItemsBusqueda(data: object,token:string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/paginasBusqueda`,data,{headers});\n    }\n    obtenerContribuyenteInspeccion(data:object, token:string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/inspeccionContribuyente`,data,{headers});\n    }\n    obtenerDatosContribuyentePorPadron(data: object,token:String){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/obtenerPadronContribyenteDatos`,data,{headers})\n    }\n    obtenerDatosSectorPalabraClave(data: object,token: String){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(\"https://api.servicioenlinea.mx/api-movil/buscarSectorPalabraClave\",data,{headers});\n    }\n    obtenerNumeroItemsBusquedaSector(data:object,token: String){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(\"https://api.servicioenlinea.mx/api-movil/paginasBusqueaSector\",data,{headers});\n    }\n    obtenerPromedioEditar(data:object,token:String){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(\"https://api.servicioenlinea.mx/api-movil/ObtenerPromedioEditar\",data,{headers});\n    }\n    buscarPorContrato(data:object,token:string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/buscarPorContrato`,data,{headers})\n    }\n    buscarPorMedidor(data:object,token:string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/buscarPorMedidor`,data,{headers})\n    }\n    capturarCoutaFija(data:object,token:string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/consumo`,data,{headers})\n    }\n    obtenerDatosContratoCorte( data: object, token: string){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/DatosTomaCorte`,data,{headers});\n    }\n    realizarCorteTomaSuinpac( data: object ,token: string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/RealizarCorte`,data,{headers});\n    }\n    listarCortesUsuario( data:object, token:string ){\n        let headers = {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer' + token\n        }\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/listaCortes`,data,{headers});\n    }\n}\n\n","import { IonAlert, IonButton, IonCard, IonCheckbox, IonContent, IonHeader, IonImg, IonInput, IonItem, IonLabel, IonLoading, IonPage, IonTitle, IonToolbar, useIonViewWillEnter } from '@ionic/react';\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport { Plugins } from '@capacitor/core'\nimport './Home.css';\nimport { Login, obtenerLogo, solicitarPermisos, } from '../controller/apiController';\nimport { restoreUser,clearState } from '../controller/storageController';\nconst { SplashScreen } = Plugins\nconst Home: React.FC = () => {\n  const history = useHistory();\n  const [User, setUserName] = useState('');\n  const [passwors, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [remember, setRemember] = useState(false);\n  useEffect(() => {\n    SplashScreen.hide();\n    handleRequestPermissions();\n    recordarCredenciales();\n  }, [])\n  useIonViewWillEnter(clearState)\n  const recordarCredenciales = async () => {\n    let user = restoreUser();\n    if (user.pass != null && user.user != null) {\n      setUserName(user.user);\n      setPassword(user.pass);\n      setRemember(user.remember);\n    }\n  }\n  const handleBtnLoginPress = () => {\n    setLoading(true)\n    validateUserData();\n  }\n  const validateUserData = async () => {    \n    if (User != \"\" && passwors != \"\" && User != null && passwors != null) {\n      try {\n        setTimeout(() => {\n          if (loading) {\n            throw new Error(\"Tiempo de espera agotado.\");\n          }\n        }, 8000)\n        await Login(User, passwors, remember)\n          .then(async (result) => {\n            await obtenerLogo();\n            history.replace('./form-datos-toma.page');\n          })\n          .catch((err) => {\n            setMessage(err.message);\n          })\n          .finally(() => { setLoading(false) })\n      } catch (err) {\n        setMessage(err.message);\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n      setMessage(\"Campos vacios\")\n    }\n  }\n  const handleRequestPermissions = async () => {\n    await solicitarPermisos().then((result) => {\n      console.log(result)\n    })\n  }\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar color=\"danger\" >\n          <IonTitle>Inicio de sessión</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonCard class=\"ion-text-center\" className=\"box\">\n          <IonImg src={\"../assets/Imagenes/Logo_suinpac.jpeg\"}></IonImg>\n          <IonItem className=\"input\">\n            <IonInput type=\"text\" placeholder=\"Usuario\" onIonChange={e => setUserName(e.detail.value!)} value={User}>\n            </IonInput>\n          </IonItem>\n          <IonItem className=\"input\">\n            <IonInput type=\"password\" placeholder=\"Contraseña\" onIonChange={e => setPassword(e.detail.value!)} value={passwors}>\n            </IonInput>\n          </IonItem>\n          <IonItem class=\"ion-text-center\">\n            <IonCheckbox slot=\"start\" color=\"primary\" checked={remember} onIonChange={e => setRemember(e.detail.checked)}></IonCheckbox>\n            <IonLabel>Recordar Usuario y Contraseña</IonLabel>\n          </IonItem>\n          <IonButton color=\"danger\" onClick={handleBtnLoginPress} className=\"input button\">INICIAR SESSIÓN</IonButton>\n        </IonCard>\n        <IonLoading\n          cssClass=\"my-custom-class\"\n          isOpen={loading}\n          onDidDismiss={() => setLoading(false)}\n          message=\"Por favor espere\"\n        />\n        <IonAlert\n          cssClass=\"my-custom-class\"\n          header={\"ERROR\"}\n          message={message}\n          isOpen={message.length > 0}\n          onDidDismiss={() => { setMessage('') }}\n        />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Home;","\nimport './left-menu.css';\nimport { create, logOut, reader, water, cutOutline, timerOutline } from 'ionicons/icons'\nimport { IonMenu, IonContent, IonImg, IonItemDivider, IonMenuToggle, IonRouterOutlet, IonItem, IonLabel, IonIcon, IonSpinner } from '@ionic/react'\nimport { useEffect, useState } from 'react';\nimport { RouteComponentProps, useHistory } from 'react-router-dom'\nimport { cerrarSesion, getLogoStorage} from '../controller/storageController'\ninterface ContainerProps { }\n\nconst MenuLeft: React.FC<ContainerProps> = () => {\n    const history = useHistory();\n    let [selectedIndex, setSelectedIndex] = useState(-1);\n    const [logo,setLogo] = useState(\"\");\n    useEffect(()=>{\n\n    },[])\n    const appPages = [\n        {\n            title: 'Toma de agua',\n            selects: ['form-datos-toma.page','datos-contribuyente.page'],\n            icon: water,\n            path: '/form-datos-toma.page'\n        }, {\n            title: 'Historial de lecturas',\n            selects: ['historial-lecturas.page','editar-lecturas-agua.page'],\n            icon: reader,\n            path: '/historial-lecturas.page'\n        }, /*{\n\n            title: 'Fallos en infraestructura',\n            selects: ['reportes.page'],\n            path: '/reportes.page',\n            icon: construct\n        },\n        {\n            title: 'Historial reportes',\n            selects: ['historial-reportes.page', 'detalles-reportes.page'],\n            path: '/historial-reportes.page',\n            icon: newspaper\n        },*/\n        {\n            title: 'Cortes',\n            selects: ['buscar-contrato','realizar-corte'],\n            path: '/buscar-contrato',\n            icon: cutOutline\n        },\n        {\n            title: 'Historial Cortes',\n            selects: ['buscar-corte'],\n            path: '/buscar-corte',\n            icon: timerOutline\n        },\n        /*{\n            title: 'Inspecciones',\n            selects: ['inspeccciones.page'],\n            path: '/inspeccciones.page',\n            icon: newspaper\n        },*/\n        {\n            title: 'Salir',\n            selects: ['inicio-de-sesion.page'],\n            icon: logOut\n        },\n    ];\n    useEffect(() => {\n        itemSelected();\n        cargarLogo();\n    });\n    \n    const itemSelected = () => {\n        let dir = window.location.pathname.toString().split(\"/\")[1];\n        let selected = false;\n        if (dir != undefined) {\n            appPages.map((item, pageIndex) => {\n                item.selects.map((item, index) => {\n                    if (item == dir) {\n                        console.log(item);\n                        setSelectedIndex(pageIndex);\n                        selected = true;\n                    }\n                })\n            })\n            if (!selected) {\n                setSelectedIndex(0);\n            }\n        }\n    }\n    const btnSelected = (dir: any) => {\n        if (dir.title == 'Salir') {\n            cerrarSesion()\n                .then((result) => {\n                    history.replace(\"/home\")\n                })\n        } else {\n            history.replace(dir.path);\n        }\n    }\n    const cargarLogo = async ()=>{\n        if(logo == \"\"){\n            await getLogoStorage().then((result)=>{\n                setLogo(String(result));\n            });\n        }\n    }\n    return (\n        <div>\n            <IonMenu side=\"start\" menuId=\"first\" contentId=\"main-content\" >\n            <IonContent >\n                    <div className = \"center\">\n                        {   logo != \"\" ? \n                            <IonImg  src= {\"data:image/png;base64,\"+logo}/* \"../assets/Imagenes/Logo recortado.png\" */></IonImg> : \n                            <IonSpinner className = \"spinerItem\" color = \"danger\" name = \"lines\"></IonSpinner>}\n                    </div>\n                    <IonItemDivider className=\"menuLeft\" />\n                    <IonMenuToggle  >\n                        {\n                            appPages.map((item, index) => {\n                                return <IonItem key={index} button={true} className={index == selectedIndex ? \"selected\" : \"\"} onClick={() => { btnSelected(item) }}>\n                                    <IonLabel>{item.title}</IonLabel>\n                                    <IonIcon slot=\"start\" ios={item.icon + \"-outline\"} md={item.icon + \"-sharp\"} color=\"blue\"></IonIcon>\n                                </IonItem>\n                            })\n                        }\n                    </IonMenuToggle>\n                    <IonItemDivider />\n                </IonContent>\n            </IonMenu>\n            <IonRouterOutlet id = \"main-content\"></IonRouterOutlet>\n        </div>\n    )\n}\n\nexport default MenuLeft;","import React, { useEffect, useState } from \"react\";\nimport {\n  IonPage,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonContent,\n  IonItem,\n  IonButtons,\n  IonMenuButton,\n  IonCard,\n  IonCardHeader,\n  IonLabel,\n  IonSelect,\n  IonAlert,\n  IonSelectOption,\n  IonCardContent,\n  IonItemDivider,\n  IonList,\n  IonLoading,\n  IonButton,\n  IonInput,\n  IonIcon,\n  IonGrid,\n  IonRow,\n  IonCol,\n  useIonViewWillEnter,\n  IonNote,\n  \n} from \"@ionic/react\";\nimport { useHistory } from 'react-router-dom'\nimport \"./form-datos-toma.page.css\";\nimport MenuLeft from '../../components/left-menu';\nimport { buscarSectores, lecturasPorSectorPage, solicitarPermisos, verifyCameraPermission, verifyGPSPermission, obtenerContribuyente, obtenerTotalDatosSectores, obtenerTotalDatosBusqueda,buscarContrato,buscarPorMedidor} from '../../controller/apiController';\nimport { getUsuario, guardarDatosLectura, cerrarSesion, verifyingSession, setContribuyenteBuscado, setPuntero, getPuntero, getNumeroPaginas, setNumeroPaginas, getClienteNombreCorto, setSector, getSector, getPunteroBusqueda, getPaginasBusqueda, setPunteroBusqueda, setPaginasBusqueda,getCuentasPapas } from '../../controller/storageController';\nimport { searchCircle, arrowForwardOutline, arrowBackOutline, cogSharp } from 'ionicons/icons'\nconst FormDatosTomaPage: React.FC = () => {\n  const history = useHistory();\n  const [user, setUser] = useState('');\n  const [sectores, setSectores] = useState<any[]>([]);\n  const [message, setMessage] = useState('');\n  const [idSector, setIdSector] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [lecturas, setLecuras] = useState<any[]>([])\n  const [typeErro, setTypeError] = useState('');\n  const [permissions, setPermissons] = useState(true);\n  const [hideAlertButons, setHideAlertbuttons] = useState(false);\n  const [block, setBlock] = useState(false);\n  const [tipoMessage, setTipoMessage] = useState(\"ERROR\");\n  const [tokenExpired, setTokenExpired] = useState(false);\n  const [textoBusqueda, setTextoBusqueda] = useState(String);\n  const [serched, setSerched] = useState(false);\n  const [paginas, setPaginas] = useState(Number);\n  const [showPagination, setShowPagination] = useState(false);\n  const [nombreCliente, setNombreCliente] = useState(String);\n  const [busqueda, setBusqueda] = useState(false);\n  const [filtro,setFiltro] = useState(1);\n  const [placeHolder,setPlaceHolder] = useState(\"Buscar por contrato\");\n  const alertButtons = [\n    {\n      text: \"Reintentar\", handler: () => {\n        setMessage(\"\");\n        typeErro == \"sectores\" ? cargarSectores() : buscarPorSector(idSector);\n      }\n    },\n    {\n      text: \"Cancelar\", handle: () => {\n        setMessage(\"\");\n      }\n    }\n  ]\n  const [activarMenu,setActivarMenu] = useState(true);\n  const isSessionValid = async () => {\n    let valid = verifyingSession();\n    setTokenExpired(!valid);\n    setBlock(!valid);\n    let nombreCorto = await getClienteNombreCorto();\n    setNombreCliente(String(nombreCorto));\n  }\n\n  useEffect(() => { isSessionValid() }, []);\n  useEffect(() => { tokenExpired ? logOut(tokenExpired) : prepararPantalla() }, [tokenExpired])\n\n  const logOut = (valid: boolean) => {\n    if (valid) {\n      setTipoMessage(\"Sesión no valida\");\n      setMessage(\"Inicie sesión por favor\\nRegresando...\");\n      setHideAlertbuttons(true);\n      setTimeout(async () => {\n        setTipoMessage('Error');\n        setMessage('');\n        await cerrarSesion()\n          .then((result) => {\n            history.replace(\"/home\")\n          })\n      }, 2500);\n    }\n  }\n  const prepararPantalla = async () => {\n    await solicitarPermisos()\n      .then(async (err) => {\n        let camera = await verifyCameraPermission();\n        let gps = await verifyGPSPermission();\n        if (camera && gps) {\n          let storageUser = getUsuario();\n          setUser(storageUser + \"\");\n          cargarSectores()\n        } else {\n          setHideAlertbuttons(true);\n          setMessage(\"Debe otorgar permisos para usar la aplicación\");\n          setBlock(true)\n          setTimeout(() => {\n            history.replace(\"/home\")\n          }, 2500)\n        }\n      }).catch(() => {\n        //Quitar antes de la vercion final (solo sirve en web)\n        let storageUser = getUsuario();\n        setUser(storageUser + \"\");\n        cargarSectores()\n      })\n    /**\n   * Activar el metodo solo para la version web de prueba\n   */\n\n    //setMessage(\"EL IOIOA\")\n  }\n  const cargarSectores = async () => {\n    await buscarSectores()\n      .then(result => setSectores(result))\n      .catch(err => {\n        let errorMessage = String(err.message);\n        let sessionValid = errorMessage.includes(\"Sesion no valida\");\n        setTokenExpired(sessionValid);\n        setIdSector(\"\");\n        if (!sessionValid) {\n          setMessage(err.message)\n          setTypeError(\"sectores\")\n        }\n      })\n  }\n  useIonViewWillEnter(()=>{setActivarMenu(true)});\n  const buscarPorSector = async (idSector:string) => {\n    setBusqueda(false)\n    setLoading(true);\n    await obtenerTotalDatosSectores(idSector).then((result) => {\n      console.log(result);\n      setNumeroPaginas(parseInt(result + \"\"))\n      setPaginas(parseInt(result + \"\"));\n      setPuntero(0)\n    })\n    await lecturasPorSectorPage(idSector, 0)\n      .then((result) => {\n        setShowPagination(true);\n        setLecuras(result);\n        setSerched(false)\n        setPuntero(0);\n      })\n      .catch((err) => {\n        setLecuras([]);\n        let errorMessage = String(err.message);\n        let expired = errorMessage.includes(\"Sesion no valida\");\n        setTokenExpired(expired);\n        if (!expired) {\n          setHideAlertbuttons(true)\n          setTypeError(\"Error\");\n          setMessage(err.message)\n        }\n      })\n      .finally(() => { setLoading(false) })\n  }\n  const abrirCapturaDatos = async (idLectura: string, contribuyente: string, contratoVigente: string, medidor: string,metodo:number,esPapa:boolean) => {\n    console.log(metodo);\n    if(!esPapa){\n      setContribuyenteBuscado(serched);\n      let result = guardarDatosLectura(idLectura, contribuyente, contratoVigente, medidor);\n      if (result === true) {\n        setActivarMenu(false);\n        //Redireccion a toma de lectura\n        history.push('/captura-de-lectura.page');\n      }\n     }\n   }\n  const buscarPalabraClave = async () => {\n\n    if(idSector == \"\"){\n      setBusqueda(true);\n      setLecuras([]);\n      setShowPagination(true);\n      setLoading(true);\n      await obtenerTotalDatosBusqueda(textoBusqueda,\"-1\").then((result) => {\n        let paginas = parseInt(String(result));\n        setPunteroBusqueda(0);\n        setPaginasBusqueda(paginas);\n        setPaginas(paginas);\n      });\n      await obtenerContribuyente(textoBusqueda,0,\"-1\").then((result) => {\n        console.log(result);\n        setSerched(true);\n        setLecuras(result);\n      }).catch((err) => {\n        setLecuras([]);\n        let errorMessage = String(err.message);\n        let sessionValid = errorMessage.includes(\"Sesion no valida\");\n        if (!sessionValid) {\n          setHideAlertbuttons(true);\n          setTipoMessage(\"ERROR\");\n          setMessage(errorMessage);\n        } else {\n          setTokenExpired(true);\n        }\n      }).finally(() => { setLoading(false) });\n    }else{\n      console.log(\"Busqueda por sector\");\n      handleBuscarSectorParablaClave();\n    }\n  }\n  const handleInputSerh = (texto: string) => {\n    setTextoBusqueda(texto);\n  }\n  const handleNextPage = () => {\n    setLoading(true);\n    let puntero = getPuntero();\n    setPuntero(puntero + 1);\n    puntero++;\n    let pages = getNumeroPaginas();\n    let itemIndex = 0;\n    if (puntero >= pages) {\n      setPuntero(0);\n      puntero = 0;\n      itemIndex = puntero * 20;\n    } else {\n      itemIndex = puntero * 20;\n    }\n    console.log(itemIndex, idSector);\n    punteroBuscarPorSector(itemIndex, idSector);\n  }\n  const handlePreviousPage = () => {\n    let puntero = getPuntero();\n    if (puntero - 1 < 0) {\n      puntero = getNumeroPaginas() - 1;\n      setPuntero(puntero);\n    } else {\n      setPuntero(puntero - 1);\n      puntero--;\n    }\n    let pages = getNumeroPaginas();\n    let itemIndex = (puntero * 20);\n    punteroBuscarPorSector(itemIndex, idSector);\n  }\n  const punteroBuscarPorSector = async (offset: number, sector: string) => {\n    setBusqueda(false);\n    setLoading(true);\n    await lecturasPorSectorPage(sector, offset)\n      .then((result) => {\n        setLecuras(result);\n        setSerched(false)\n      })\n      .catch((err) => {\n        console.log(err)\n        setLecuras([]);\n        let errorMessage = String(err.message);\n        let expired = errorMessage.includes(\"Sesion no valida\");\n        setTokenExpired(expired);\n        if (!expired) {\n          setHideAlertbuttons(true)\n          setTypeError(\"Error\");\n          setMessage(err.message)\n        }\n      })\n      .finally(() => { setLoading(false) })\n  }\n  const handleSector = (sector: string) => {\n    setIdSector(sector);\n    setSector(sector);\n    buscarPorSector(sector);\n\n  }\n  const handleNextPageBusqueda = () => {\n    setLoading(true); \n    let puntero = getPunteroBusqueda();\n    setPunteroBusqueda(puntero + 1);\n    puntero++;\n    let pages = getPaginasBusqueda()\n    let itemIndex = 0;\n    if (puntero >= pages) {\n      setPunteroBusqueda(0);\n      puntero = 0;\n      itemIndex = puntero * 20;\n    } else {\n      itemIndex = puntero * 20;\n    }\n    console.log(itemIndex, textoBusqueda);\n    punteroBuscarPorClave(itemIndex);\n  }\n  const handlePreviousPageBusqueda = () => {\n    setLoading(true);\n    let puntero = getPunteroBusqueda();\n    if (puntero - 1 < 0) {\n      puntero = getPaginasBusqueda() - 1;\n      setPunteroBusqueda(puntero);\n    } else {\n      setPunteroBusqueda(puntero - 1);\n      puntero--;\n    }\n    let itemIndex = (puntero * 20);\n    console.log(itemIndex, textoBusqueda);\n    punteroBuscarPorClave(itemIndex);\n  }\n  const punteroBuscarPorClave = async (offset: number) => {\n      setBusqueda(true);\n      await obtenerContribuyente(textoBusqueda,offset,\"-1\").then((result) => {\n        setSerched(true);\n        setLecuras(result);\n      }).catch((err) => {\n        let errorMessage = String(err.message);\n        let sessionValid = errorMessage.includes(\"Sesion no valida\");\n        if (!sessionValid) {\n          setHideAlertbuttons(true);\n          setTipoMessage(\"ERROR\");\n          setMessage(errorMessage);\n        } else {\n          setTokenExpired(true);\n        }\n      }).finally(() => { setLoading(false) });\n  }\n  const handleCancelSector = () =>{\n    setIdSector(\"\");\n  }\n  const handleBuscarSectorParablaClave = async () =>{\n    setBusqueda(true);\n    setLecuras([]);\n    setShowPagination(true);\n    setLoading(true);\n    await obtenerTotalDatosBusqueda(textoBusqueda,idSector).then((result) => {\n      let paginas = parseInt(String(result));\n      setPunteroBusqueda(0);\n      setPaginasBusqueda(paginas);\n      setPaginas(paginas);\n    });\n    await obtenerContribuyente(textoBusqueda,0,idSector).then((result) => {\n      console.log(result);\n      setSerched(true);\n      setLecuras(result);\n    }).catch((err) => {\n      setLecuras([]);\n      let errorMessage = String(err.message);\n      let sessionValid = errorMessage.includes(\"Sesion no valida\");\n      if (!sessionValid) {\n        setHideAlertbuttons(true);\n        setShowPagination(false);\n        setTipoMessage(\"Mensaje\");\n        setMessage(errorMessage);\n      } else {\n        setTokenExpired(true);\n      }\n    }).finally(() => { setLoading(false) });\n  }  \n  const handleCancelFiltro = () =>{\n    setFiltro(1);\n  }\n  const buscarFiltro = () =>{\n    if(filtro == 1){\n      porContrato();\n    }\n    if(filtro == 2){\n      porMedidor();\n    }\n    if(filtro == 3){\n    }\n  }\n  const porContrato = async () =>{\n    setBusqueda(true);\n    setLecuras([]);\n    setShowPagination(false);\n    setLoading(true);\n    console.log(zeroFill(textoBusqueda));\n    await buscarContrato(zeroFill(textoBusqueda))\n    .then(result =>{\n      setLecuras(result);\n    }).catch(err=>{\n      setLecuras([]);\n      let errorMessage = String(err.message);\n      let expired = errorMessage.includes(\"Sesion no valida\");\n      setTokenExpired(expired);\n      if (!expired) {\n        setHideAlertbuttons(true)\n        setTypeError(\"Error\");\n        setMessage(err.message)\n      }\n    }).finally(\n     ()=>{setLoading(false);} \n    )\n  }\n  const porMedidor = async () =>{ \n    setBusqueda(true);\n    setLecuras([]);\n    setShowPagination(false);\n    setLoading(true);\n    console.log(zeroFill(textoBusqueda,10));\n    await buscarPorMedidor(zeroFill(textoBusqueda,10))\n    .then(result =>{\n      setLecuras(result);\n    }).catch(err=>{\n      setLecuras([]);\n      let errorMessage = String(err.message);\n      let expired = errorMessage.includes(\"Sesion no valida\");\n      setTokenExpired(expired);\n      if (!expired) {\n        setHideAlertbuttons(true)\n        setTypeError(\"Error\");\n        setMessage(err.message)\n      }\n    }).finally(\n     ()=>{setLoading(false);} \n    )\n  }\n  const functionValidarLectura = (estatus: number, cobro:number) =>{\n    let leyendaCobro = \"\";\n    let result = [\"\",false];\n    if(cobro == 1){\n      leyendaCobro = \"Cuota Fija \";\n    }\n  switch(estatus){\n    case 1:\n      result = [ leyendaCobro + \"\",cobro == 1];\n    break;\n    case 2:\n     result = [leyendaCobro + \"\",cobro == 1];\n    break;\n    case 3:\n      result = [ leyendaCobro + \"Baja Temporal\",true];\n    break;\n    case 4:\n      result = [ leyendaCobro +  \"Baja Permanente\",true];\n    break;\n    case 5:\n      result = [ leyendaCobro + \"Inactivo\",true];\n    break;\n    case 6:\n      result = [ leyendaCobro +  \"Nueva\",true];\n    break;    \n    case 9:\n      result = [ leyendaCobro +  \"Sin Toma\",true];\n    break;\n    case 10:\n      result = [ leyendaCobro +  \"Multada\",true]\n    break;\n  }\n  return result;\n  }\n  function zeroFill( number:string,width:number = 9)\n{\n  while(number.length < width){\n    number = \"0\"+number;\n  }\n  return number;\n  }\n  const handleSelectFiltro = (filter: number) => {\n  setFiltro(filter); \n  if(filtro == 1){\n    setPlaceHolder(\"Buscar por Medidor\");\n  }\n  if(filtro == 2){\n    setPlaceHolder(\"Buscar por Contrato\");\n  }\n  }\n  return (\n    <IonPage>\n      {\n        activarMenu ? \n        <MenuLeft />: <></>\n      }\n      <IonHeader>\n        <IonToolbar color=\"danger\" >\n          <IonTitle>{`${user} - ${nombreCliente}`}</IonTitle>\n          <IonButtons slot=\"start\" className=\"btnMenu\">\n            <IonMenuButton ></IonMenuButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonCard class=\"ion-text-center\" className=\"box\">\n          <IonCardHeader>\n            <div>\n              <h3>Lectura de agua potable</h3>\n              <IonLabel>Puedes realizar busquedas por:</IonLabel>\n              <p>Contrato, Medidor, Nombre comercial o nombre del propietario</p>\n              <br />\n            </div>\n            <IonGrid>\n            <IonRow>\n                <IonCol>\n                <IonItem>\n                  <IonLabel>Filtrar Por:</IonLabel>\n                <IonSelect onIonCancel = {handleCancelFiltro} value = {filtro} placeholder = \"Seleccione el filtro\" interface = \"action-sheet\" onIonChange = {e => {handleSelectFiltro(parseInt(e.detail.value+\"\"))}}>\n                    <IonSelectOption value={1} >Contrato</IonSelectOption>\n                    <IonSelectOption value={2} >Medidor</IonSelectOption>\n                  </IonSelect>\n                </IonItem>\n                </IonCol>\n              </IonRow>\n              <IonRow>\n                <IonCol size=\"10\">\n                  <IonItem>\n                    <IonInput type=\"number\" placeholder = {placeHolder} onIonChange={e => { handleInputSerh(String(e.detail.value)) }}></IonInput>\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"2\" class=\"btnSerch\">\n                  <IonButton color=\"danger\" size=\"large\" shape=\"round\" onClick={buscarFiltro}><IonIcon icon={searchCircle} color=\"light\" size=\"large\"></IonIcon></IonButton>\n                </IonCol>\n              </IonRow>\n              <IonItem>\n                <IonLabel className=\"center\" color=\"\">o seleccione un sector</IonLabel>\n              </IonItem>\n            </IonGrid>\n            <IonItem>\n              <IonLabel>Sectores</IonLabel>\n              <IonSelect\n                placeholder=\"Seleccionar uno\"\n                onIonChange={e => { handleSector(e.detail.value) }}\n                interface=\"action-sheet\"\n                disabled={block}\n                cancelText=\"Cancelar\"\n                value={idSector}\n              >\n                {\n                  sectores != null  ?\n                    sectores.map(function (item, index) {\n                      return <IonSelectOption key={index} value={item.id}>{item.Sector}</IonSelectOption>\n                    }) :\n                    <IonSelectOption disabled>\n                      Sin Sectores\n                    </IonSelectOption>\n                }\n              </IonSelect>\n            </IonItem>\n          </IonCardHeader>\n          <IonCardContent >\n            <IonItemDivider >\n              {showPagination ? <IonGrid>\n                <IonRow>\n                  <IonCol size=\"2\">\n                    <IonButton shape=\"round\" color=\"danger\" size=\"small\" onClick={busqueda ? handlePreviousPageBusqueda : handlePreviousPage} /* disabled={getPuntero() == 0} */>\n                      <IonIcon icon={arrowBackOutline} size=\"small\" ></IonIcon>\n                    </IonButton></IonCol>\n                  <IonCol size=\"8\"><IonLabel>Resultados: Pagina {busqueda ? getPunteroBusqueda() + 1 : getPuntero() + 1} de {paginas}</IonLabel></IonCol>\n                  <IonCol size=\"2\">\n                    <IonButton shape=\"round\" color=\"danger\" onClick={busqueda ? handleNextPageBusqueda : handleNextPage} /* disabled = {getPuntero()+1==getNumeroPaginas()} */>\n                      <IonIcon icon={arrowForwardOutline} size=\"small\" ></IonIcon>\n                    </IonButton>\n                  </IonCol>\n                </IonRow>\n              </IonGrid> : <IonLabel className=\"center\" class=\"ion-text-center\" >Mostrando Resultados</IonLabel>\n              }\n            </IonItemDivider>\n            <IonList >\n              {\n                lecturas.map(function (item, index) {\n                  let papas = getCuentasPapas();\n                  let arrayData = functionValidarLectura(parseInt(item.Estatus),parseInt(item.M_etodoCobro));\n                  let cuentaPapa = String(papas).includes(item.id);\n                  if(cuentaPapa){\n                    arrayData[0] += \"Desarrollo\";  \n                  }\n                  return <div className = { ( cuentaPapa || arrayData[1]) ? 'cuotaFija':''} key={index} onClick={() => {  abrirCapturaDatos(item.id, item.Contribuyente, item.ContratoVigente, item.Medidor,item.M_etodoCobro,cuentaPapa) }}>\n                    <IonItem detail={true} >\n                      <IonList>\n                        <IonLabel>{item.Contribuyente}</IonLabel>\n                        <p>Contrato: {item.ContratoVigente},\n                           Medidor: {item.Medidor}, \n                           Toma: {item.Toma}\n                           &nbsp;&nbsp;&nbsp;&nbsp;\n                           {\n                             (cuentaPapa || arrayData[1]) ? <IonNote style ={{fontsize: 20}} color=\"danger\">{arrayData[0]}</IonNote> :\"\"\n                           }\n                        </p>\n                      </IonList>\n                    </IonItem>\n                  </div>\n                })\n              }\n            </IonList>\n          </IonCardContent>\n        </IonCard>\n        <IonAlert\n          cssClass=\"my-custom-class\"\n          header={tipoMessage}\n          message={message}\n          isOpen={message.length > 0}\n          backdropDismiss={false}\n          buttons={hideAlertButons ? [{ text: \"Aceptar\", handler: () => { setMessage(\"\") } }] : alertButtons}\n        />\n        <IonLoading\n          cssClass=\"my-custom-class\"\n          isOpen={loading}\n          onDidDismiss={() => { setLoading(false); }}\n          message=\"Por favor espere\"\n        />\n        <IonAlert\n          cssClass=\"my-custom-class\"\n          header={\"ERROR\"}\n          message={'Para poder hacer uso de todas las funciones de la aplicaciòn por favor acepta los permisos solicitados por la misma'}\n          isOpen={!permissions}\n        />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default FormDatosTomaPage;","import { useCamera, } from '@capacitor-community/react-hooks/camera';\nimport { CameraResultType, CameraSource, Geolocation } from '@capacitor/core'\nexport function useTakePhoto( ) {\n  const { getPhoto } = useCamera();\n  const takePhoto = async () => {\n    const cameraPhoto = await getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 50,\n    });\n    return cameraPhoto;\n  }\n  return {\n    takePhoto\n  }\n}\n\nexport async function generarFechas(anio: number) {\n  let result = new Array;\n  let listaMeses = new Array;\n  listaMeses = [\n    {\n      id: 1,\n      mes: \"Enero\"\n    }, {\n      id: 2,\n      mes: \"Febrero\"\n    },\n    {\n      id: 3,\n      mes: \"Marzo\"\n    },\n    {\n      id: 4,\n      mes: \"Abril\"\n    }, {\n      id: 5,\n      mes: \"Mayo\"\n    }, {\n      id: 6,\n      mes: \"Junio\"\n    }, {\n      id: 7,\n      mes: \"Julio\"\n    }, {\n      id: 8,\n      mes: \"Agosto\"\n    }, {\n      id: 9,\n      mes: \"Septiembre\"\n    }, {\n      id: 10,\n      mes: \"Octubre\"\n    }, {\n      id: 11,\n      mes: \"Noviembre\"\n    }, {\n      id: 12,\n      mes: \"Diciembre\"\n    }]\n  let listaAnios = generarAnios(anio);\n  result.push({ 'Meses': listaMeses });\n  result.push({ 'Anios': listaAnios });\n  return result;\n}\nexport function generarAniosPosterior(anio: number) {\n  let listaAnios = new Array;\n  let anioActual = new Date().getFullYear() + 1;\n  let idAnio = 1;\n  for (let anios = anio; anios <= anioActual; anios++) {\n    listaAnios.push({ 'id': idAnio, anio: anios });\n    idAnio++;\n  }\n  return listaAnios;\n}\nexport function obtenerBase64(path: string) {\n  let imgEncode = leerArchivo(path);\n  return imgEncode;\n}\nasync function leerArchivo(path: string) {\n  let file = await fetch(path);\n  let blobFile = await file.blob();\n  let imgEncode = await convertBase64(blobFile);\n  return imgEncode;\n}\nasync function convertBase64(blobFile: Blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader;\n    reader.onerror = reject;\n    reader.onloadend = () => {\n      let baseSplit  = reader.result;/* ?.toString().split(',')[1] */\n      resolve(baseSplit);\n    }\n    reader.readAsDataURL(blobFile);\n  })\n}\nexport function generarAnios(defaultAnio: number) {\n  let listaAnios = new Array;\n  let menorAnio = (defaultAnio - 10);\n  let anioMaximo = (defaultAnio + 3);\n  let idAnio = 1;\n  for (menorAnio; menorAnio <= anioMaximo; menorAnio++) {\n    listaAnios.push({ 'id': idAnio, anio: menorAnio });\n    idAnio++;\n  }\n  return listaAnios;\n\n}\nexport async function obtenerCoordenadas() {\n  try {\n    let coords = await Geolocation.getCurrentPosition();\n  return coords.coords;\n  } catch (err) {\n    throw err;\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n    IonAlert,\n    IonButton,\n    IonButtons,\n    IonCard,\n    IonCardContent,\n    IonCardHeader,\n    IonCol,\n    IonContent,\n    IonDatetime,\n    IonGrid,\n    IonHeader,\n    IonIcon,\n    IonImg,\n    IonInput,\n    IonItem,\n    IonLabel,\n    IonLoading,\n    IonMenuButton,\n    IonPage,\n    IonRow,\n    IonSelect,\n    IonSelectOption,\n    IonTitle,\n    IonToolbar,\n    useIonToast,\n    IonChip,\n    useIonViewWillEnter,\n    useIonViewDidEnter\n} from '@ionic/react'\nimport { camera, checkmarkCircle, saveOutline, pencil, chevronBackCircleOutline } from 'ionicons/icons';\nimport './captura-de-lectura.page.css';\nimport MenuLeft from '../../components/left-menu';\nimport { extraerDatosLectura, guardarCaptura, obtenerSiguienteIndice, obtenerPromedioConsumo, guardarCuotaFija} from '../../controller/apiController';\nimport { useTakePhoto, generarFechas, obtenerBase64, generarAniosPosterior, generarAnios, obtenerCoordenadas } from '../../utilities';\nimport { getDatosLecturaStorage, verifyingSession, contribuyenteBuscado, setContribuyenteBuscado, setPuntero, setNumeroPaginas, deleteContratos } from '../../controller/storageController';\nimport { useHistory } from 'react-router';\nconst CapturaDeLectura: React.FC = () => {\n    const history = useHistory();\n    const [datosContribuyente, setDatosContribuyente] = useState(Object);\n    const [lecturaAnterior, setLecturaAnterior] = useState(Number);\n    const [message, setMessage] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [anomalias, setAnomalias] = useState<any[]>([])\n    const [consumo, setConsumo] = useState(Number);\n    const [activarGaleria, setActivarGaleria] = useState(false);\n    const [fotoActiva, setFotoActiva] = useState('');\n    const [fotosEvidencia, setFotosEvidencia] = useState<any[]>([]);\n    const [indexFoto, setIndexFoto] = useState(-1);\n    const [pressentToast, dismissToast] = useIonToast();\n    const [fotosCodificadas, setFotosCodificadas] = useState<any[]>([]);\n    const [listaMeses, setlistaMeses] = useState<any[]>([]);\n    const [mesDefautl, setMesDefault] = useState('');\n    const [indexMes, setIndexMes] = useState(Number);\n    const [anioActual, setAnioActual] = useState(Number);\n    const [indexAnioActual, setIndexAnioActual] = useState(11);\n    const [anioLectura, setAnioLectura] = useState(Number);\n    const [listaAnios, setListaAnios] = useState<any[]>([]);\n    const { takePhoto } = useTakePhoto();\n    const [bloquearCampos, setBloquearcampos] = useState(false);\n    const [btnInactivo, setBtnInactivo] = useState(false);\n    const [comparaMes, setComparaMes] = useState(Number)\n    const [comparaAnio, setComparaAnio] = useState(Number)\n    const [seleccionAnomalia, setSeleccionAnomalia] = useState(Number);\n    const [lecturaActual, setLecturaActual] = useState(Number);\n    const [tipoLectura, setTipoLectura] = useState(Number);\n    const [mesLectura, setMesLectura] = useState(Number);\n    const [refreshControl, setRefreshControl] = useState(false);\n    const [defaultLectura, setDefaultLectura] = useState(Number);\n    const [defaultAnomalia, setDefaultAnomalia] = useState(Number);\n    const [enbleButtons, setEnbleButtons] = useState(false);\n    const [tipoMessage, setTipoMessage] = useState(\"ERROR\");\n    const [promedioLectura, setPromedioLectura] = useState(Number);\n    const [toma, setToma] = useState(String);\n    const [municipio, setMunicipio] = useState(String);\n    const [localidad, setLocalidad] = useState(String);\n    const [direccion, setDireccion] = useState(String);\n    const [bloqueoAnomalias, setBloqueoAnomalias] = useState(false);\n    const [consumoMinimo,setConsumoMinimo] = useState(20);\n    const [activarMenu,setActivarMenu] = useState(true);\n    const [ fija, setFija ] = useState(false);\n    const alertButtons = [\n        {\n            text: \"Reintentar\", handler: () => {\n                setMessage(\"\");\n                setTipoMessage(\"Error\");\n                isSessionValid();\n            }\n        },\n        {\n            text: \"Cancelar\"\n        }]\n    const fecha = new Date();\n    const isSessionValid = () => {\n        let valid = verifyingSession();\n        logOut(valid)\n    }\n    useEffect(() => { isSessionValid(); }, [refreshControl])\n    useEffect(() => {\n        //FIXME: obtenemos los datos actuales\n        if (refreshControl) {\n            setConsumo(0)\n        }\n    }, [defaultLectura])\n    useEffect(() => { console.log(promedioLectura) }, [promedioLectura])\n    const logOut = (valid: boolean) => {\n        if (!valid) {\n            setTipoMessage(\"Sesión no valida\");\n            setMessage(\"Inicie sesión por favor\\nRegresando...\");\n            setTimeout(() => {\n                setTipoMessage(\"ERROR\");\n                setMessage('');\n                history.replace(\"/home\");\n            }, 2500)\n        } else {\n            setLoading(true);\n            cargarContribuyente();\n            setDefaultLectura(0);\n        }\n    }\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\n    const cargarContribuyente = async () => {\n        let result = getDatosLecturaStorage();\n        if(result.contribuyente == \"null\"){\n            result.contribuyente = \"\";\n        }\n        setDatosContribuyente(result);\n        extraerLectura(result.idLectura);\n        setRefreshControl(false);\n    }\n    const extraerLectura = async (idLectura: any) => {\n        await obtenerPromedioConsumo().then( async (promedio)=>{\n            promedio = parseFloat(promedio).toFixed(2);\n            setPromedioLectura(promedio);\n            console.log(idLectura);\n            await extraerDatosLectura(idLectura)\n            .then((result) => {\n                setFija(result.Mensaje[0].M_etodoCobro == \"1\");\n                if(result.Mensaje != 300){\n                    setToma(result.Mensaje[0].Toma)\n                    setMunicipio(result.Mensaje[0].Municipio);\n                    setLocalidad(result.Mensaje[0].Localidad);\n                    setDireccion(result.Mensaje[0].Direccion);\n                    //FIXED: hay un bug para los contraros sin lecturas y estatus de letura 1\n                    let data = parseInt(result.Mensaje[0]['A_no']);\n                    let mesLectura = parseInt(result.Mensaje[0].Mes);\n                    //NOTE: si todo es NaN seleccionamos la fecha actual\n                    isNaN(data) ? data = fecha.getFullYear() : data = data;\n                    isNaN( mesLectura ) ? mesLectura = fecha.getMonth() : mesLectura = mesLectura;\n                    setMesLectura(mesLectura);\n                    setAnioLectura(data);\n                    cargarFechas(data, result.ValorLectura[0].Valor, mesLectura);\n                    setLecturaAnterior(result.Mensaje[0].LecturaActual != null ? result.Mensaje[0].LecturaActual : 0 );\n                }else{\n                    cargarFechas(fecha.getFullYear(), \"1\" , fecha.getMonth());\n                }\n                setBloquearcampos(result.BloquearCampos[0].Valor == 1);\n                setAnomalias(result.Anomalias);\n                setTipoLectura(result.ValorLectura[0].Valor)\n                setConsumo(0);\n            })\n            .catch((err) => {\n                console.log(\"aqui esta el error\");\n                let errorMessage = err.message + \"\";\n                if (errorMessage.includes(\"API\")) {\n                    setEnbleButtons(true);\n                }\n                setMessage(err.message);\n            })\n            .finally(() => { setLoading(false) });\n        }).catch((error)=>{\n\n        }).finally(()=>{setLoading(false)})\n        //Fin de extraer Consumo promedio del contribuyente\n    }\n    const cambiarFotoActiva = (foto: string, index: number) => {\n        setFotoActiva(foto);\n        setIndexFoto(index);\n    }\n    const borrarFotoEvidencia = () => {\n        let fotosTemporal = new Array;\n        let fotosEncoded = new Array;\n        fotosEvidencia.map((item, index) => {\n            if (index != indexFoto) {\n                fotosTemporal.push(item);\n            }\n        });\n        fotosCodificadas.map((item, index) => {\n            if (index != indexFoto) {\n                fotosEncoded.push(item);\n            }\n        })\n        setFotosEvidencia(fotosTemporal);\n        setFotosCodificadas(fotosEncoded);\n        setFotoActiva('');\n        pressentToast({\n            message: \"Se elimino la foto de la lista'\",\n            duration: 2000,\n            position: 'top',\n            buttons: [\n                {\n                    side: 'start',\n                    icon: checkmarkCircle,\n                }\n            ]\n        })\n    }\n    const cargarFechas = async (anioDefault: number, tipoLectura: string, mes: number) => {\n        const mesActual = (parseInt(fecha.getMonth().toString()));\n        await generarFechas(anioDefault).then((result) => {\n            setMesDefault(result[0].Meses[mesActual].mes);\n            setIndexMes(result[0].Meses[mesActual].id);\n            setlistaMeses(result[0].Meses);\n            setListaAnios(result[1].Anios);\n            // Se debe separar por casos\n            switch (tipoLectura) {\n                case '1':\n                    lecturaCasoUno(anioDefault, mes, result[0].Meses);\n                    break;\n                case '2':\n                    lecturaCasoDos(anioDefault, result[0].Meses[mesActual].id, result[0].Meses, result[1].Anios);\n                    break;\n                case '3':\n                    lecturaCasoTres(result[0].Meses);\n                    break;\n            }\n        })\n    }\n    const calcularConsumo = (consumido: number) => {\n        let result = consumido - lecturaAnterior;\n        setLecturaActual(consumido);\n        setDefaultLectura(consumido)\n        isNaN(result) ? setConsumo(0) : setConsumo(result)\n    }\n    const lecturaCasoUno = (anioResult: number, mes: number, meses: any[]) => {\n        let anhioLista = anioResult;\n        let esteMes = mes + 1;\n        setComparaAnio(anhioLista); //NOTE: se envia este compara anio al metodo de verificacion\n        let listaAnios = generarAniosPosterior(anioResult);\n        setListaAnios(listaAnios);\n        if (esteMes == 13) {\n            anhioLista = anioResult + 1;\n            esteMes = meses[0].id;\n            setMesDefault(meses[0].mes);\n            setComparaAnio(anioResult + 1);\n        }\n        setComparaMes(esteMes); //NOTE: se envia este compara anio al metodo de verificacion\n        setIndexMes(esteMes);\n\n        listaAnios.map((item, index) => {\n            if (item.anio == anhioLista) {\n                setIndexAnioActual(item.id);\n                setAnioActual(item.anio)\n            }\n        })\n        if (lecturaAnterior == null) {\n            setLecturaAnterior(0);\n        }\n    }\n    const lecturaCasoDos = (anioResult: number, mesResult: number, meses: any[], anios: any[]) => {\n        // se tomara la fecha actual para generar la lectura\n        let anhioLista = fecha.getFullYear();\n        let esteMes = fecha.getMonth();\n        meses.map((item, index) => {\n            if (item.id == esteMes) {\n                setIndexMes(item.id);\n                setMesDefault(item.mes);\n            }\n        })\n        setComparaMes(fecha.getMonth());    //NOTE: se envia este compara anio al metodo de verificacion\n        setComparaAnio(fecha.getFullYear());    //NOTE: se envia este compara anio al metodo de verificacion\n        //Generar lista de los años\n        let listaAnios = generarAnios(anhioLista);\n        setListaAnios(listaAnios);\n        listaAnios.map((item, index) => {\n            if (anhioLista == item.anio) {\n                setIndexAnioActual(item.id);\n                setAnioActual(item.anio);\n            }\n        })\n        if (lecturaAnterior == null) {\n            setLecturaAnterior(0);\n        }\n    }\n    const lecturaCasoTres = (meses: any[]) => {\n        // se Obtienen las fechas actuales\n        let mesComparacion = fecha.getMonth() + 1\n        setComparaMes(mesComparacion);  //NOTE: se envia este compara anio al metodo de verificacion\n        let anioComparar = fecha.getFullYear()\n        let esteMes = fecha.getMonth() + 1\n\n        if (esteMes == 13) {\n            anioComparar = fecha.getFullYear() + 1\n            esteMes = meses[0].id;\n            setMesDefault(meses[0].mes);\n            setComparaAnio(anioComparar);\n            setComparaMes(meses[0].id);\n        }\n\n        setAnioActual(anioComparar);\n        setComparaAnio(anioComparar);     //NOTE: se envia este compara anio al metodo de verificacion\n        setIndexMes(esteMes);\n        let listaAnios = generarAnios(anioComparar);\n        setListaAnios(listaAnios);\n        listaAnios.map((item, index) => {\n            if (item.anio == anioComparar) {\n                setIndexAnioActual(item.id);\n            }\n        })\n        if (lecturaAnterior == null) {\n            setLecturaAnterior(0);\n        }\n    }\n    const siguienteLectura = async () => {\n        await obtenerSiguienteIndice(datosContribuyente.idLectura)\n            .then((result) => {\n                if (result) {\n                    /*setTipoMessage(\"Mensaje\");\n                    setMessage(\"Lectura guardada\\nPasando a siguiente lectura...\");\n                    setTimeout(() => {\n                        setLoading(false);\n                        //Limpiando Componentes\n                        setActivarGaleria(false)\n                        setDefaultLectura(0)\n                        setFotoActiva('');\n                        setFotosCodificadas([]);\n                        setFotosEvidencia([]);\n                        setIndexFoto(0);\n                        setSeleccionAnomalia(-1)\n                        setDefaultAnomalia(-1)\n                        setRefreshControl(true);\n                        handleCancelAnomalia();\n                    }, 1000);*/\n                    setTipoMessage(\"Mensaje\");\n                    setMessage(\"Final de los datos en la pagina\\nRegresado...\");\n                    setPuntero(0);\n                    setNumeroPaginas(0);\n                    deleteContratos();\n                    setTimeout(() => {\n                        history.replace(\"/form-datos-toma.page\");\n                    }, 2500);\n                } else {\n                    setTipoMessage(\"Mensaje\");\n                    setMessage(\"Final de los datos en la pagina\\nRegresado...\");\n                    setPuntero(0);\n                    setNumeroPaginas(0);\n                    deleteContratos();\n                    setTimeout(() => {\n                        history.replace(\"/form-datos-toma.page\");\n                    }, 2500);\n                }\n\n            }).catch(err => {\n                setMessage(err.message);\n            }).finally(() => {\n                setLoading(false);\n            })\n    }\n    const mensajeConsumoCero = async () => {\n        //let value = contribuyenteBuscado();\n        /*if (!value) {\n            if (consumo <= 0) {\n                setEnbleButtons(false);\n                setTipoMessage(\"Mensaje\");\n                setMessage(\"El Consumo se calculo como el promedio de 12 meses\");\n                setTimeout(() => {\n                    setMessage(\"\");\n                    siguienteLectura();\n                }, 2000);\n            } else {\n                siguienteLectura();\n            }\n        } else {\n\n        }*/\n        setLoading(false);\n        setTipoMessage(\"Mensaje\");\n        setMessage(\"Lectura guardada\\nRegresado...\");\n        setTimeout(() => {\n            setContribuyenteBuscado(false);\n            history.replace(\"/form-datos-toma.page\");\n        }, 2500);\n    }\n    //Manejadores de la interfaz\n    const handleBtnGuardar = async () => {\n        try {\n            setLoading(true);\n            setTimeout(() => {\n                if (loading) {\n                    throw 0;\n                }\n            }, 20000);\n            if (!(fotosEvidencia.length == 0 && activarGaleria)) {\n                let mes = fecha.getMonth() + 1;\n                let anio = fecha.getFullYear();\n                let coords = await obtenerCoordenadas();\n                let validarConsumo = procesoConsumo(); // Falta la validacion del consumo\n                console.log(lecturaActual);\n                //NOTE: Verificamos la cuotafija\n                if( !fija ){\n                    let datosCapturados = {\n                        route: anio + \"\" + mes + \"/\",\n                        lecturaAnterior:  lecturaAnterior,\n                        lecturaActual: bloqueoAnomalias ? lecturaAnterior : lecturaActual,\n                        consumoFinal: validarConsumo,\n                        mesCaptura: indexMes,\n                        anhioCaptura: anioActual,\n                        fechaCaptura: fecha,\n                        anomalia: seleccionAnomalia == 0 ? \"\" : seleccionAnomalia,\n                        tipoCoordenada: 1,\n                        arregloFotos: fotosCodificadas,\n                        comparaMes: comparaMes,\n                        comparaAnio: comparaAnio,\n                        lectura: 1,\n                        arrayAnios: listaAnios,\n                        indexAnio: indexAnioActual,\n                        mesLectura: mesLectura,\n                        nCliente: datosContribuyente.nCliente,\n                        token: datosContribuyente.token,\n                        idUsuario: datosContribuyente.idUsuario,\n                        idToma: datosContribuyente.idLectura,\n                        Latidude:  String(coords.latitude) ,\n                        Longitude: String(coords.longitude),\n                    }\n                    await guardarCaptura(datosCapturados)\n                        .then((result) => { mensajeConsumoCero(); })\n                        .catch((err) => { setLoading(false); setMessage(err.message) });\n                }else{\n                    guardarDatosCuotaFija(validarConsumo,coords);\n                }\n            } else {\n                setMessage(\"Debe capturar almenos 1 foto\")\n                setLoading(false);\n            }\n        } catch (err) {\n            console.log(err);\n            setLoading(false);\n            setMessage(`Tiempo de espera agotado.\n            Asegúrese de activar la ubicación del dispositivo`)\n        }\n    }\n    //NOTE: metodo para enviar los datos de la cuotafija\n    const guardarDatosCuotaFija = async ( consumo:Number, coords: any ) => {\n        //NOTE: creamos el formato de los datos\n        let datos = {\n            Cliente: datosContribuyente.nCliente,\n            Consumo: consumo,\n            Anio: anioActual,\n            padron: datosContribuyente.idLectura,\n            mes: indexMes,\n            anomalia: seleccionAnomalia == 0 ? \"\" : seleccionAnomalia,\n            idUsuario: datosContribuyente.idUsuario,\n            Fotos: fotosCodificadas,\n            tipoCoordenada: 1,\n            Latidude:  String(coords.latitude),\n            Longitude: String(coords.longitude),\n        };\n        console.log(datos);\n        await guardarCuotaFija(datos)\n        .then(()=>{\n            mensajeConsumoCero();\n        })\n        .catch(( error )=>{\n            setLoading(false); setMessage(error.message);\n        }).finally(()=>{\n            setLoading(false);\n        })\n    }\n\n    const handleSelectAnio = (value: number) => {\n        listaAnios.map((item, index) => {\n            if (item.id == value) {\n                setAnioActual(item.anio)\n                setIndexAnioActual(item.id)\n            }\n        })\n    }\n    const handleSelectMes = (value: number) => {\n        listaMeses.map((item, index) => {\n            if (item.id == value) {\n                setIndexMes(item.id);\n                setMesDefault(item.mes);\n            }\n        })\n    }\n    const handleSelectAnomalia = (seleccionAnomalia: number) => {\n        setSeleccionAnomalia(seleccionAnomalia);\n        setDefaultAnomalia(seleccionAnomalia);\n        setConsumo(promedioLectura);\n        setBloqueoAnomalias(seleccionAnomalia != 0);\n        console.log(defaultLectura);\n        anomalias.map((item, index) => {\n            if (item.id == seleccionAnomalia) {\n                    setActivarGaleria(true);\n                    console.log(item.ActualizarAdelante + \" - \" + item.ActualizarAtras + \" Se activa: \" + (parseInt(item.ActualizarAdelante) == 0 || parseInt(item.ActualizarAtras) == 0));\n                    if(parseInt(item.ActualizarAdelante) == 1 || parseInt(item.ActualizarAtras) == 1 ){\n                        setBloqueoAnomalias(false);\n                        setLecturaActual( defaultLectura );\n                    }else{\n                        setBloqueoAnomalias(true);\n                        setLecturaActual( defaultLectura );\n                    }\n                    setConsumoMinimo(item.Minima);\n                    if(defaultLectura != 0){\n                        console.log(\"Procesando Consumo\");\n                        setConsumo(procesoConsumo());\n                    }\n                    if(seleccionAnomalia == 24){\n                        setConsumo(promedioLectura);\n                    }\n            }\n        });\n    }\n    const handleCancelAnomalia = () => { \n        setActivarGaleria(false);\n        setDefaultAnomalia(0);\n        setBloqueoAnomalias(false);\n    }\n    const handleAbrirCamera = async () => {\n        setLoading(true);\n        await takePhoto()\n            .then(async (result) => {\n                if (fotosEvidencia.length <= 2) {\n                    setLoading(true);\n                    agregarImagenEncode(result.webPath + \"\");\n                }\n                else {\n                    setLoading(false)\n                    setMessage(\"Solo se permiten 3 fotos como máximo\")\n                }\n            })\n            .catch((err) => {\n                let errorType = err.message + \"\";\n                if (errorType.includes(\"denied\")) {\n                    setMessage(\"La aplicación no tiene permisos para usar la cámara\")\n                }\n            }).finally(() => { setLoading(false) })\n    }\n    //llamada al metodo de convercion\n    const agregarImagenEncode = async (imgDir: string) => {\n        await obtenerBase64(imgDir).then((result) => {\n            setFotoActiva(imgDir);\n            setFotosEvidencia(fotosEvidencia => [...fotosEvidencia, imgDir]);\n            setIndexFoto(fotosEvidencia.length);\n            setFotosCodificadas(fotosCodificadas => [...fotosCodificadas, result])\n        }).finally(() => { setLoading(false) })\n    }\n    //METODOS PARA GENERAR ETIQUETAS DE LA INTERFAZ\n    const generarGaleria = () => {\n        if (activarGaleria) {\n            let data =\n                <div>\n                    <IonItem>\n                        <IonLabel >Adjuntar evidencia (maximo 3 fotos)</IonLabel>\n                        <IonIcon icon={camera} className=\"iconStyle\" onClick={handleAbrirCamera}></IonIcon>\n                    </IonItem>\n                    {\n                        fotosEvidencia.length > 0 ?\n                            <IonItem>\n                                <IonRow>\n                                    {\n                                        fotosEvidencia.map((item, index) => {\n                                            return <IonCol key={index}><IonImg src={item} onClick={() => { cambiarFotoActiva(item, index) }} className=\"imgFormat\"></IonImg></IonCol>\n                                        })\n                                    }\n                                </IonRow>\n                            </IonItem> : <></>\n                    }\n                </div>;\n            return data;\n        }\n    }\n    const formatindex = (index: string) => {\n        let result = \"\";\n        let numIndex = Number(index);\n        if (isNaN(numIndex)) {\n            result = '00';\n        } else {\n            numIndex <= 9 ? result = String(\"0\" + numIndex) : result = String(numIndex);\n        }\n        return result;\n    }\n    const btnDetallesContribuyente = () => {\n        history.push(\"/datos-contribuyente.page\");\n    }\n    const btnRegresar = () =>{\n        history.replace(\"/form-datos-toma.page\");\n    }\n    const procesoConsumo = () => {\n        let consumoProcesado = 0;\n        if(seleccionAnomalia != 0){\n            if(bloqueoAnomalias){ // este es el proceso de las anomalias sin capturas\n                if (promedioLectura < consumoMinimo){\n                    consumoProcesado = consumoMinimo;\n                }else{\n                    consumoProcesado = promedioLectura;\n                }\n            }else{ //este el el proceso de las anomalias con captura\n                if(consumo < promedioLectura){\n                    consumoProcesado = promedioLectura;\n                }\n                if(promedioLectura < consumoMinimo){\n                    consumoProcesado = consumoMinimo;\n                }\n                if(consumoMinimo < consumo){\n                    consumoProcesado =  consumo;\n                }\n            }\n        }else{ // este es el proceso de captura normal\n            consumoProcesado = consumo;\n        }\n        if(seleccionAnomalia == 47){\n            consumoProcesado = consumoMinimo;\n        }\n        if(seleccionAnomalia == 99){\n            if(lecturaActual < consumoMinimo){\n                consumoProcesado = consumoMinimo;\n            }else{\n                consumoProcesado = lecturaActual;\n            }\n        }\n        if(seleccionAnomalia == 24){\n            consumoProcesado = promedioLectura;\n        }\n        setConsumo(consumoProcesado);\n        return consumoProcesado;\n    }\n    return (\n        <IonPage>\n      {\n        activarMenu ? \n        <MenuLeft />: <></>\n      }\n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                    <IonTitle>Captura de lectura</IonTitle>\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\n                        <IonMenuButton ></IonMenuButton>\n                    </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <IonCard>\n                    <IonCardHeader className=\"headerData\">\n                        <div className=\"datosContribuyete\">\n                            <h3>{datosContribuyente.contribuyente}</h3>\n                            <p>Contrato: {datosContribuyente.contratoVigente}, &nbsp;&nbsp; Medidor: {datosContribuyente.medidor == \"null\" ? \"S/N\" : datosContribuyente.medidor }, &nbsp;&nbsp; Toma: {toma}</p>\n                            <p>Municipio: {municipio}, &nbsp;&nbsp; Localidad: {localidad}</p>\n                            <p>{`Dirección: ${direccion}`}</p>\n                            <IonGrid>\n                                <IonRow>\n                                    <IonCol size=\"11\">\n                                    </IonCol>\n                                    <IonCol size=\"1\">\n                                        <IonChip color=\"danger\" onClick={btnDetallesContribuyente}>\n                                            <IonIcon icon={pencil} className=\"btnEditar\" />\n                                        </IonChip>\n                                    </IonCol>\n                                </IonRow>\n                            </IonGrid>\n                        </div>\n                    </IonCardHeader>\n                    <IonCardContent>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Lectura anterior:</IonLabel>\n                            <IonInput disabled className=\"disabledInput\">{`${lecturaAnterior}`}</IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Lectura actual:</IonLabel>\n                            <IonInput disabled = {bloqueoAnomalias} type=\"number\" placeholder=\"0\" value={defaultLectura} onIonChange={e => { calcularConsumo(parseFloat(e.detail.value + \"\")) }}></IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Consumo:</IonLabel>\n                            <IonInput disabled className=\"disabledInput\" value={consumo}></IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Fecha de lectura:</IonLabel>\n                            <IonDatetime disabled displayFormat=\"DD/MM/YYYY\" min=\"2000\" max=\"2026\" value={`${fecha}`}></IonDatetime>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Anomalía</IonLabel>\n                            <IonSelect interface=\"action-sheet\" onIonCancel = {handleCancelAnomalia} value={defaultAnomalia} onIonChange={e => { handleSelectAnomalia(e.detail.value) }}>\n                                {\n                                    anomalias.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.id}>\n                                            {`${item.clave <= 10 ? formatindex(item.clave) : item.clave} - ${item.descripci_on}`}\n                                        </IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <br />\n                        {\n                            generarGaleria()\n                        }\n                        {\n                            fotoActiva != '' ?\n                                <IonItem>\n                                    <IonCard className=\"centrar\">\n                                        <IonImg src={fotoActiva} />\n                                        <IonCardContent >\n                                            <IonButtons>\n                                                <IonButton color=\"secondary\" onClick={() => { setFotoActiva('') }}>Cerrar</IonButton>\n                                                <IonButton color=\"danger\" onClick={() => { borrarFotoEvidencia() }} >Eliminar</IonButton>\n                                            </IonButtons>\n                                        </IonCardContent>\n                                    </IonCard>\n                                </IonItem> : <></>\n                        }\n                        <IonItem>\n                            <IonLabel>Mes: </IonLabel>\n                            <IonSelect interface=\"action-sheet\" value={indexMes} selectedText={`${mesDefautl}`} disabled={bloquearCampos} onIonChange={e => handleSelectMes(e.detail.value)}>\n                                {\n                                    listaMeses.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.id} >{item.mes}</IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <IonItem>\n                            <IonLabel>Año: </IonLabel>\n                            <IonSelect interface=\"action-sheet\" value={indexAnioActual} selectedText={`${anioActual}`} disabled={bloquearCampos} onIonChange={e => handleSelectAnio(e.detail.value)}>\n                                {\n                                    listaAnios.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.id}>{item.anio}</IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <br />\n                        <div className=\"centrar\">\n                            <IonGrid>\n                                <IonRow>\n                                    <IonCol size=\"4\">\n                                        <IonButton color=\"secondary\" onClick = {btnRegresar}>\n                                            <IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon>\n                                            Regresar\n                                        </IonButton>\n                                    </IonCol>\n                                    <IonCol size=\"4\" ></IonCol>\n                                    <IonCol size=\"4\" >\n                                        <IonButton color=\"danger\" onClick={handleBtnGuardar} disabled={btnInactivo}>\n                                            Guardar\n                                            <IonIcon icon={saveOutline} slot=\"end\"></IonIcon>\n                                        </IonButton>\n                                    </IonCol>\n                                </IonRow>\n                            </IonGrid>\n\n                        </div>\n                    </IonCardContent>\n                </IonCard>\n                <IonAlert\n                    cssClass=\"my-custom-class\"\n                    header={tipoMessage}\n                    message={message}\n\n                    isOpen={message.length > 0}\n                    backdropDismiss={false}\n                    buttons={enbleButtons ? alertButtons : [{ text: 'Aceptar', handler: () => { setMessage(\"\") } }]}\n                />\n                <IonLoading\n                    cssClass=\"my-custom-class\"\n                    isOpen={loading}\n                    onDidDismiss={() => { setLoading(false); }}\n                    message=\"Por favor espere\"\n                />\n            </IonContent>\n        </IonPage>\n    );\n}\n\nexport default CapturaDeLectura;","import { IonAlert, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonCol, IonContent, IonDatetime, IonGrid, IonHeader, IonIcon, IonItem, IonItemDivider, IonLabel, IonList, IonLoading, IonMenuButton, IonPage, IonRow, IonTitle, IonToolbar, useIonViewWillEnter } from \"@ionic/react\";\nimport React, { useEffect, useState } from \"react\";\nimport MenuLeft from '../../components/left-menu';\nimport { contractOutline, eyeOutline } from 'ionicons/icons';\nimport { historialFechas } from '../../controller/apiController';\nimport { guardarDatosEditarLectura, verifyingSession, cerrarSesion, setFechasHistorialLectura, getFechasHistorialLectura } from '../../controller/storageController';\nimport { useHistory } from 'react-router-dom'\nconst HistorialLecturas: React.FC = () => {\n    const fecha = new Date();\n    const history = useHistory();\n    const [fechaInicio, setFechaInicio] = useState('');\n    const [fechaFinal, setFechaFinal] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [historial, setHistorial] = useState<any[]>([])\n    const [message, setMessage] = useState('');\n    const [tipoMensaje, setTipoMensaje] = useState(\"MENSAJE\");\n    const [block, setBlock] = useState(false);\n    const [conectionError, setConectionErro] = useState(false);\n    const [expiredToken, setExpiredToken] = useState(Boolean);\n    const alertsButtons = [\n        {\n            text: \"Reintentar\",\n            handler: () => { setMessage(\"\"); setConectionErro(false); extraerHistorial(fechaInicio,fechaFinal); }\n        },\n        {\n            text: \"Cancelar\",\n            handler: () => { setConectionErro(false) }\n        }\n    ]\n    const isSessionValid = () => {\n        let valid = verifyingSession();\n        setExpiredToken(!valid);\n        setBlock(!valid);\n    }\n    useEffect(() => {\n        setFechaInicio(fecha.getFullYear() + \"-\" + (fecha.getMonth() + 1) + \"-\" + (fecha.getDate()));\n        setFechaFinal(fecha.getFullYear() + \"-\" + (fecha.getMonth() + 1) + \"-\" + (fecha.getDate()));\n        console.log(fechaInicio, \"\\n\\n\", fechaFinal)\n        isSessionValid();\n    }, [])\n    useEffect(() => { logOut() }, [expiredToken]);\n    const verificarFechas = () =>{\n        let data = getFechasHistorialLectura();\n        if(data != null){\n            setFechaInicio(String(data.desde));\n            setFechaFinal(String(data.hasta));\n            extraerHistorial(String(data.desde),String(data.hasta));\n\n        }\n    }\n    useIonViewWillEnter(verificarFechas)\n\n    const logOut = () => {\n        if (expiredToken) {\n            setTipoMensaje(\"Sesión no valida\");\n            setMessage(\"Inicie sesión por favor\\nRegresando...\");\n            setTimeout(() => {\n                cerrarSesion().then((result) => {\n                    setTipoMensaje('MENSAJE');\n                    setMessage('');\n                    history.replace('/home');\n                })\n            }, 2500)\n        }\n    }\n    const extraerHistorial = async (desde: string,hasta:string) => {\n        let selectionValid = validateFechas(desde,hasta);\n        if (selectionValid) {\n            setLoading(true)\n            await historialFechas(desde, hasta)\n                .then((result) => {\n                    if (result.Status) {\n                        console.log(result.Mensaje)\n                        setHistorial(result.Mensaje);\n                    } else {\n                        setHistorial([]);\n                        setTipoMensaje(\"MENSAJE\");\n                        setMessage(\"No se encontraron resultados.\");\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                    let errorMessage = String(err.message);\n                    setExpiredToken(errorMessage.includes(\"Sesion no valida\"));\n                    setConectionErro(errorMessage.includes(\"API\"));\n                    if (!expiredToken) {\n                        setTipoMensaje(\"ERROR\");\n                        setMessage(errorMessage);\n                    }\n                })\n                .finally(() => { setLoading(false) })\n        }else{\n            setTipoMensaje(\"Mensaje\")\n            setMessage(\"Selección de fechas no validas\");\n        }\n    }\n    //manejadores de la interfaz\n    const handleSelectFechaInicio = (date: String) => {\n        setFechaInicio(date.split(\"T\")[0]);\n        console.log(fechaInicio);\n    }\n    const handleSelectFechaFin = (date: any) => {\n        setFechaFinal(date.split(\"T\")[0]);\n        console.log(fechaFinal)\n    }\n    const validateFechas = (desde: string,hasta: string) => {\n        let fechaDesde = new Date(desde);\n        let fechaHasta = new Date(hasta);\n        if (fechaDesde <= fechaHasta) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    const editarContribuyente = (datos: any) => {\n        //Guardar fechas historial\n        setFechasHistorialLectura(fechaInicio,fechaFinal);\n        guardarDatosEditarLectura(datos.idLectura, datos.ContratoVigente, datos.Contribuyente, datos.Medidor);\n        // Mostrar editarLecturaAgua\n        history.replace('/editar-lecturas-agua.page');\n    }\n    return (\n        <IonPage>\n            <IonContent>\n                <MenuLeft />\n                <IonHeader>\n                    <IonToolbar color=\"danger\" >\n                        <IonTitle>Historial de lecturas</IonTitle>\n                        <IonButtons slot=\"start\" className=\"btnMenu\">\n                            <IonMenuButton ></IonMenuButton>\n                        </IonButtons>\n                    </IonToolbar>\n                </IonHeader>\n                <IonCard>\n                    <IonCardHeader>\n                        <div className=\"center\">\n                            <h5>Seleccione la fecha</h5>\n                        </div>\n                    </IonCardHeader>\n                    <IonItem>\n                        <IonGrid>\n                            <IonRow>\n                                <IonCol size=\"6\">\n                                    <div className=\"center\">\n                                        <label>Desde: </label>\n                                        <IonDatetime disabled={block} value={fechaInicio} displayFormat=\"DD-MM-YYYY\" pickerFormat=\"DD-MM-YYYY\" cancelText=\"Cancelar\" doneText=\"Aceptar\" onIonChange={e => { handleSelectFechaInicio(e.detail.value + \"\") }} >{fechaInicio}</IonDatetime>\n                                    </div>\n                                </IonCol>\n                                <IonCol size=\"6\">\n                                    <div className=\"center\">\n                                        <label>Hasta: </label>\n                                        <IonDatetime disabled={block} value={fechaFinal} displayFormat=\"DD-MM-YYYY\" cancelText=\"Cancelar\" doneText=\"Aceptar\" onIonChange={e => { handleSelectFechaFin(e.detail.value + \"\") }} >{fechaFinal}</IonDatetime>\n                                    </div>\n                                </IonCol>\n                            </IonRow>\n                        </IonGrid>\n                    </IonItem>\n                    <br />\n                    <div className=\"center\">\n                        <IonButton disabled={block} color=\"danger\" onClick={()=>{extraerHistorial(fechaInicio,fechaFinal)}}>Generar</IonButton>\n                    </div>\n                </IonCard>\n                <IonCard>\n                    <IonCardContent>\n                        <IonList>\n                            {\n                                historial.map((item, index) => {\n                                    return <IonItem key={index} onClick={() => { editarContribuyente(item) }}>\n                                        <IonList>\n                                            <h6>{item.Fecha}</h6>\n                                            <label>{item.Contribuyente}</label><br />\n                                            <label>{`Contrato: ${item.ContratoVigente} , Medidor: ${item.Medidor}, Toma: ${item.Toma}`}</label>\n                                        </IonList>\n                                        <label slot=\"end\" ><IonIcon icon={eyeOutline} color=\"primary\"></IonIcon></label>\n                                    </IonItem>\n                                })\n                            }\n                        </IonList>\n                    </IonCardContent>\n                </IonCard>\n                <IonLoading\n                    cssClass=\"my-custom-class\"\n                    isOpen={loading}\n                    onDidDismiss={() => { setLoading(false); }}\n                    message=\"Por favor espere\"\n                />\n                <IonAlert\n                    cssClass=\"my-custom-class\"\n                    header={tipoMensaje}\n                    message={message}\n                    isOpen={message.length > 0}\n                    backdropDismiss={false}\n                    onDidDismiss={() => { setConectionErro(false) }}\n                    buttons={conectionError ? alertsButtons : [{ text: \"Aceptar\", handler: () => { setMessage(\"\"); } }]}\n                />\n            </IonContent>\n        </IonPage>\n    )\n}\nexport default HistorialLecturas;","import React, { useEffect, useState } from 'react';\nimport {\n    IonPage,\n    IonButtons,\n    IonHeader,\n    IonMenuButton,\n    IonTitle,\n    IonToolbar,\n    IonContent,\n    IonCard,\n    IonCardHeader,\n    IonCardContent,\n    IonItem,\n    IonLabel,\n    IonInput,\n    IonDatetime,\n    IonSelect,\n    IonSelectOption,\n    IonButton,\n    IonIcon,\n    IonAlert,\n    IonToast,\n    IonLoading,\n    IonGrid,\n    IonRow,\n    IonCol\n} from '@ionic/react';\nimport LeftMenu from '../../components/left-menu';\nimport { getDatosLecturaEditar, actualizarLectura, obtenerPromedioEditar} from '../../controller/apiController';\nimport { saveOutline, checkmarkCircleOutline, chevronBackCircleOutline, star, } from 'ionicons/icons';\nimport { useHistory } from \"react-router-dom\";\nimport { useTakePhoto, generarFechas, obtenerBase64, generarAniosPosterior, generarAnios, obtenerCoordenadas } from '../../utilities';\nimport { cerrarSesion, extraerDatosEditarLectura, verifyingSession } from '../../controller/storageController';\nconst EditarLecturaAgua: React.FC = () => {\n    const history = useHistory();\n    const [datosContribuyente, setDatosContribuyente] = useState(Object)\n    const [loading, setLoading] = useState(false);\n    const [anomalias, setAnomalias] = useState<any[]>([]);\n    const [bloquearCampos, setBloquearDatos] = useState(true);\n    const [tipoLectura, setTipoLectura] = useState(Number);\n    const [anhioLectura, setAnhioLectura] = useState(Number);\n    const [mesLectura, setMesLectura] = useState(Number)\n    const [validarAnhio, setValidarAnhio] = useState(Number);\n    const [validarMes, setValidarMes] = useState(Number);\n    const [message, setMessage] = useState(String);\n    const [listaAnhios, setListaAnhios] = useState<any[]>([]);\n    const [listaMeses, setListaMeses] = useState<any[]>([]);\n    const [consumo, setConsumo] = useState(Number);\n    const [lecturaActual, setLecturaActual] = useState(Number);\n    const [lecturaAnterior, setLecturaAnterior] = useState(Number);\n    const [tipoAnomalia, setTipoAnomalia] = useState(Number);\n    const [fechaLectura, setFechaLectura] = useState(Date);\n    const [tipoMensaje, setTipoMensaje] = useState(String);\n    const [showToast, setShowToast] = useState(false);\n    const [connectionError, setConnectionError] = useState(false);\n    const [block, setBlock] = useState(false);\n    const [tokenExpired, setTokenExpered] = useState(false);\n    const [traceError, setTraceError] = useState(String);\n    //INDEV: Actualizar el registro de la lectura\n    const [bloqueoAnomalias, setBloqueoAnomalias] = useState(false);\n    const [seleccionAnomalia,setSeleccionAnomalia] = useState(0);\n    const [promedioLectura,setPromedioLectura] = useState(Number);\n    const [consumoMinimo,setConsumoMinimo] = useState(20);\n    const [lecturaRegistrada,setLecturaRegistrada] = useState(Number);\n    let consumoDatos = 0;\n    const fecha = new Date();\n    const alertRetriButtons = [\n        { text: \"Reintentar\", handler: () => { setMessage(\"\"); traceError == \"onLoad\" ? cargarDatos() : guardarLectura(); } },\n        { text: \"Aceptar\", handler: () => { setTraceError(\"\"); setMessage(\"\"); } }\n    ]\n    const alertAcceptButtons = [{ text: \"Aceptar\", handler: () => { } }];\n    const isSessionValid = () => {\n        let valid = verifyingSession(); //Verificamos si existe algun token guardado\n        setTokenExpered(!valid);        //Validacion para ver si el token expiro (Si valid == false se lanza el error de la sesion)\n        setBlock(!valid);               //Si existe el token\n    }\n    \n    const cargarDatos = async () => {\n        setLoading(true);\n        let result = extraerDatosEditarLectura();\n        setDatosContribuyente(result);\n        //Obtenemos el promedio de las lecturas\n        await getDatosLecturaEditar()\n            .then((result) => {\n                if (result.Status) {\n                    //Me falta contrato vigente\n                    console.log(result.Mensaje);\n                    setDatosContribuyente(result.Mensaje[0]);\n                    generarFechasAnhios(parseInt(result.Mensaje[0].A_no));\n                    filtrarLectura(result)\n\n                } else {\n                    setTipoMensaje(\"Mensaje\");\n                    setMessage(\"No se encontraron resultados.\");\n                }\n            })\n            .catch((err) => {\n                let errorMessage = String(err.message);\n                setConnectionError(errorMessage.includes(\"API\"));\n                let sessionValid = errorMessage.includes(\"Sesion no valida\");\n                console.log(\"El toke es valido ?\", sessionValid)\n                setTokenExpered(sessionValid);\n                if (!sessionValid) {\n                    setTraceError(\"onLoad\");\n                    setMessage(err.message)\n                    setTipoMensaje(\"ERROR\");\n                }\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n    useEffect(() => { isSessionValid(); }, [anhioLectura]);\n    useEffect(() => { logOut(tokenExpired); }, [tokenExpired])\n    const logOut = (valid: boolean) => {\n        if (valid) {\n            setTipoMensaje(\"Sesión no valida\");\n            setMessage(\"Inicie sesión por favor\\nRegresando...\");\n            setTimeout(async () => {\n                setMessage('');\n                setTipoMensaje('MENSAJE')\n                await cerrarSesion().then((result) => {\n                    history.replace(\"/home\");\n                })\n            }, 2500)\n        } else {\n            cargarDatos();\n        }\n    }\n    const filtrarLectura = async (result: any) => {\n        console.log(result.tipoLectura[0].Valor);\n        result.bloqueoCampos[0].Valor == 0 ? setBloquearDatos(false) : setBloquearDatos(true);\n        setTipoLectura(result.tipoLectura[0].Valor);\n        setAnomalias(result.Anomalias);\n        let lectura = result.tipoLectura[0].Valor;\n        if (lectura == 1 || lectura == 2 || lectura == 3) {\n            setAnhioLectura(result.Mensaje[0]['A_no']);\n            setMesLectura(result.Mensaje[0]['Mes'])\n            setValidarAnhio(result.Mensaje[0]['A_no']);\n            setValidarMes(result.Mensaje[0]['Mes']);\n            //Obtenemos el promedio\n            await obtenerPromedioEditar(result.Mensaje[0]['Padr_onAgua']).then((result)=>{\n                setPromedioLectura(result);\n            }).catch((e)=>{\n                setPromedioLectura(0);\n            });\n        } else {\n            //Mensaje de error\n            setTipoMensaje('ERROR')\n            setMessage('Consulte con su administrador que el código de lecturas de agua se encuentre en el rango de 1-3');\n            setTimeout(() => {\n                history.goBack();\n            }, 2000)\n        }\n        let datosLectura = result.Mensaje[0];\n        setConsumo(datosLectura.Consumo);\n        consumoDatos = datosLectura.Consumo;\n        setLecturaActual(datosLectura.LecturaActual);\n        setLecturaRegistrada(datosLectura.LecturaActual);\n        setLecturaAnterior(datosLectura.LecturaAnterior);\n        datosLectura.Observaci_on == null ? setTipoAnomalia(0) : setTipoAnomalia(datosLectura.Observaci_on);\n        setFechaLectura(datosLectura.FechaLectura);\n    }\n    const generarFechasAnhios = async (anio: number) => {\n        let data = await generarFechas(anio);\n        setListaAnhios(data[1].Anios);\n        setListaMeses(data[0].Meses);\n    }\n    const handleCalcularconsumo = (consumido: number) => {\n        //Calculando el consumo\n        let result = consumido - lecturaAnterior;\n        setLecturaActual(consumido);\n        isNaN(result) ? setConsumo(0) : setConsumo(result)\n        \n    }\n    const guardarLectura = async () => {\n        setLoading(true);\n        //localStorage.setItem(\"@Storage::userToken\",\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczpcL1wvYXBpLnNlcnZpY2lvZW5saW5lYS5teFwvYXBpLW1vdmlsXC9sb2dpbi1wcmVzaWRlbnRlUHJ1ZWJhIiwiaWF0IjoxNjIxMzY1OTk0LCJleHAiOjE2MjE0MDE5OTQsIm5iZiI6MTYyMTM2NTk5NCwianRpIjoiV0w3VE9EeUZpQkhWZzZqRSIsInN1YiI6MzgwMCwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.5aG5sSnugBRIPvmj0QcbhHuqxPfBRkwrxN74bGz1uho\");\n        console.log(anhioLectura, mesLectura,datosContribuyente.Padr_onAgua);\n        let consumoCalculado = procesoConsumo();\n        if(consumoCalculado == 0){\n            setTipoMensaje(\"MENSAJE\");\n            setMessage(\"No se ha calculado el consumo\");\n            setLoading(false);\n        }else if(consumoCalculado < 0){\n            setTipoMensaje(\"MENSAJE\");\n            setMessage(\"La lectura actual no puede ser menor a la anterior\");\n            setLoading(false);\n        }else{\n            //Enviamos los datos a editar\n            let data = {\n                anhioLectura: anhioLectura,\n                consumo: consumoCalculado,\n                fechaLectura: fechaLectura,\n                lecturaActual: lecturaActual,\n                lecturaAnterior: lecturaAnterior,\n                mesLectura: mesLectura,\n                tipoAnomalia: tipoAnomalia,\n                validarAnhio: validarAnhio,\n                validarMes: validarMes,\n                idPadron: datosContribuyente.Padr_onAgua,\n            }\n            console.log(data);\n            setLoading(false);\n                 /*await actualizarLectura(data)\n            .then((result) => {\n                setShowToast(true);\n                console.log(result)\n            })\n            .catch((err) => {\n                let errorMessage = String(err.message);\n                setConnectionError(errorMessage.includes(\"API\"));\n                let sessionValid = errorMessage.includes(\"Sesion no valida\");\n                setTokenExpered(sessionValid);\n                if (!sessionValid) {\n                    setTraceError(\"onUpdate\");\n                    setTipoMensaje(\"ERROR\");\n                    setMessage(err.message)\n                }\n            })\n            .finally(() => {\n                setLoading(false);\n            })*/\n        }\n   \n    }\n    const regresarPantalla = async () => {\n        if (showToast) {\n            setShowToast(false);\n            history.replace('/historial-lecturas.page');\n        }\n    }\n    //Manejadores de \n    const handleSelectMes = (mes: string) => {\n        setMesLectura(parseInt(mes));\n    }\n    const handleSelectAnio = (anio: string) => {\n        setAnhioLectura(parseInt(anio));\n    }\n    const handlebtnRegresar = () => {\n        history.replace(\"/historial-lecturas.page\");\n        console.log(\"Regresando\");\n    }\n    const handleSelectAnomalia = (selectAnomalia: number) =>{\n        setSeleccionAnomalia(selectAnomalia);\n        setTipoAnomalia(selectAnomalia);\n        anomalias.map((item,index)=>{\n            if(item.id == selectAnomalia){\n                if(parseInt(item.ActualizarAdelante) == 1 || parseInt(item.ActualizarAtras) == 1){\n                    setBloqueoAnomalias(false);\n                }else{\n                    setBloqueoAnomalias(true);\n                    setLecturaActual(lecturaAnterior);\n                }\n                setConsumoMinimo(item.Minima);\n                console.log(item.Minima + \"Consumo calculado\");\n                if(lecturaActual != 0){\n                    setConsumo(procesoConsumo());\n                }\n                if(selectAnomalia == 24){\n                    setConsumo(promedioLectura);\n                }\n            }\n        });\n    }\n    const handleCancelAnomalia = () =>{\n        setTipoAnomalia(0);\n        setSeleccionAnomalia(0);\n        setBloqueoAnomalias(false);\n        handleCalcularconsumo(lecturaActual);\n        setLecturaActual(lecturaRegistrada);\n    }\n    const procesoConsumo = () => {\n        let consumoProcesado = 0;\n        console.log(seleccionAnomalia);\n        if( seleccionAnomalia != 0){\n            if(bloqueoAnomalias){ // este es el proceso de las anomalias sin capturas\n                if (promedioLectura < consumoMinimo){\n                    consumoProcesado = consumoMinimo;\n                }else{\n                    consumoProcesado = promedioLectura;\n                }\n            }else{ //este el el proceso de las anomalias con captura\n                if(consumo < promedioLectura){\n                    consumoProcesado = promedioLectura;\n                }\n                if(promedioLectura < consumoMinimo){\n                    consumoProcesado = consumoMinimo;\n                }\n                if(consumoMinimo < consumo){\n                    consumoProcesado =  consumo;\n                }\n            }\n        }else{ // este es el proceso de captura normal\n            if(consumo < consumoMinimo && consumo > 0){\n                consumoProcesado = consumoMinimo;\n            }else{\n                consumoProcesado = consumo;\n            }\n        }\n        if(tipoAnomalia == 47){\n            consumoProcesado = consumoMinimo;\n        }\n        if(tipoAnomalia == 99){\n            if(lecturaActual < consumoMinimo){\n                consumoProcesado = consumoMinimo;\n            }else{\n                consumoProcesado = lecturaActual;\n            }\n        }\n        if(tipoAnomalia == 24){\n            consumoProcesado = promedioLectura;\n        }\n        \n        setConsumo(consumoProcesado);\n        return consumoProcesado;\n    }\n    return (\n        <IonPage>\n            <LeftMenu />\n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                    <IonTitle>Editar lectura</IonTitle>\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\n                        <IonMenuButton ></IonMenuButton>\n                    </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <IonCard>\n                    <IonCardHeader>\n                        <div className=\"datosContribuyete\">\n                            <h3>{datosContribuyente.Nombre}</h3>\n                            <p>Contrato: {datosContribuyente.ContratoVigente}, &nbsp;&nbsp; Medidor: {datosContribuyente.Medidor}, &nbsp;&nbsp; Toma: {datosContribuyente.Toma}</p>\n                            <p>Municipio: {datosContribuyente.Municipio}, &nbsp;&nbsp; Localidad: {datosContribuyente.Localidad}</p>\n                            <p>Colonia: {datosContribuyente.Colonia} &nbsp;&nbsp; Calle: {datosContribuyente.Calle} &nbsp;&nbsp; Exterior: {datosContribuyente.Exterior} &nbsp;&nbsp; Interior: {datosContribuyente.Interior}</p>\n                        </div>\n                    </IonCardHeader>\n                    <IonCardContent>\n                        <br />\n                        <IonItem>\n                            <IonLabel> Lectura anterior:</IonLabel>\n                            <IonInput disabled value={lecturaAnterior}></IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Lectura actual:</IonLabel>\n                            <IonInput disabled  value={lecturaActual} onIonChange={e => { handleCalcularconsumo(parseFloat(e.detail.value + \"\")) }}></IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Consumo :</IonLabel>\n                            <IonInput disabled value={consumo}></IonInput>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Fecha de lectura: </IonLabel>\n                            <IonDatetime disabled displayFormat=\"DD/MM/YYYY\" value={fechaLectura}></IonDatetime>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Anomalía:</IonLabel>\n                            <IonSelect \n                                disabled\n                                placeholder=\"Seleccione uno\" \n                                interface=\"action-sheet\" \n                                cancelText=\"Cancelar\" \n                                value={tipoAnomalia}\n                                onIonCancel = {handleCancelAnomalia}\n                                onIonChange = { e => { handleSelectAnomalia(e.detail.value) } } >\n                                <IonSelectOption value={null}></IonSelectOption>\n                                {\n                                    //Lista de anomalias\n                                    anomalias.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.id}>\n                                            {`${item.clave}-${item.descripci_on}`}\n                                        </IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel> Mes: </IonLabel>\n                            <IonSelect disabled={bloquearCampos} interface=\"action-sheet\" placeholder=\"Seleccione uno\" cancelText=\"Cancelar\" value={mesLectura} onIonChange={e => { handleSelectMes(e.detail.value) }}>\n                                {\n                                    listaMeses.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.id}>\n                                            {item.mes}\n                                        </IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel>Año: </IonLabel>\n                            <IonSelect disabled={bloquearCampos} interface=\"action-sheet\" placeholder=\"Seleccione uno\" cancelText=\"Cancelar\" value={anhioLectura} onIonChange={e => { handleSelectAnio(e.detail.value) }}>\n                                {\n                                    listaAnhios.map((item, index) => {\n                                        return <IonSelectOption key={index} value={item.anio}>\n                                            {item.anio}\n                                        </IonSelectOption>\n                                    })\n                                }\n                            </IonSelect>\n                        </IonItem>\n                        <br />\n                        <div className=\"centrar\">\n                            <IonGrid>\n                                <IonRow>\n                                    <IonCol>\n                                        <IonButton color=\"secondary\" onClick={handlebtnRegresar} >Regresar<IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon> </IonButton>\n                                    </IonCol>\n                                </IonRow>\n                            </IonGrid>\n\n\n                        </div>\n                    </IonCardContent>\n                </IonCard>\n                <IonAlert\n                    cssClass=\"my-custom-class\"\n                    header={tipoMensaje}\n                    message={message}\n                    isOpen={message.length > 0}\n                    backdropDismiss={false}\n                    buttons={connectionError ? alertRetriButtons : [{ text: \"Aceptar\", handler: () => { setMessage(\"\") } }]}\n                />\n                <IonToast\n                    isOpen={showToast}\n                    onDidDismiss={regresarPantalla}\n                    message=\"Los datos se actualizaron correctamente\"\n                    duration={2000}\n                    position=\"top\"\n                    buttons={[{ side: \"end\", icon: checkmarkCircleOutline, handler: regresarPantalla }]}\n                ></IonToast>\n                <IonLoading\n                    cssClass=\"my-custom-class\"\n                    isOpen={loading}\n                    onDidDismiss={() => { setLoading(false); }}\n                    message=\"Por favor espere\"\n                />\n            </IonContent>\n        </IonPage>\n    )\n}\n\nexport default EditarLecturaAgua;","import { IonIcon, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonContent, IonHeader, IonInput, IonItem, IonLabel, IonMenuButton, IonPage, IonTitle, IonToolbar, IonAlert, IonLoading, IonGrid, IonCol, IonRow, IonFooter, IonFab, IonFabButton } from '@ionic/react';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './datos-del-contribuyente.css'\nimport MenuLeft from '../../components/left-menu';\nimport { obtenerDatosContribuyente, actualizarContribuyente } from '../../controller/apiController';\nimport { backspaceOutline, chevronBackCircleOutline, saveOutline, saveSharp, logoFacebook, compassOutline } from 'ionicons/icons';\nimport { cerrarSesion } from '../../controller/storageController';\nconst DatosContribuyente: React.FC = () => {\n    const history = useHistory();\n    const [datosContribuyente, setDatosContribuyente] = useState(Object);\n    const [telefono, setTelefono] = useState(String);\n    const [email, setEmail] = useState(String);\n    const [message, setMessage] = useState(String);\n    const [typeMessage, setTypeMessage] = useState(String);\n    const [loading, setLoading] = useState(false);\n    const [hideButtons, setHideButtons] = useState(true);\n    const [tokenExpired, setTokenExpired] = useState(false);\n    const [ typeError, setTypeError ] = useState(String);\n    useEffect(() => { obtenerContribuyente() }, []);\n    useEffect(() => { logOut() }, [tokenExpired]);\n    const alertButtons = [\n        { text: \"Reintentar\", handler: () => { setMessage(\"\"); typeError == \"onLoad\" ? obtenerContribuyente() : handleBtnGuardarContacto();} },\n        { text: \"Aceptar\", handler: () => { setMessage(\"\"); } }\n    ]\n    const logOut = () => {\n        if (tokenExpired) {\n            setTypeMessage(\"Session no valida\");\n            setMessage(\"Inicie sesión por favor\\nRegresando...\");\n            setHideButtons(true);\n            setTimeout(async () => {\n                await cerrarSesion().then((result) => {\n                    setTypeMessage(\"Error\");\n                    setMessage('');\n                    history.replace('/home');\n                })\n            }, 2500)\n        }\n    }\n    const obtenerContribuyente = async () => {\n        setLoading(true);\n        await obtenerDatosContribuyente()\n            .then((result) => {\n                if( result != null ){\n                    setTelefono(result.Celular == null ? \"\" : result.Celular);\n                    setEmail(result.Email == null ? \"\" : result.Email);\n                    setDatosContribuyente(result);\n                }else{\n                    setTypeMessage(\"ERROR\");\n                    setTypeError(\"onLoad\");\n                    setMessage(\"No se encontro el contribuyente\");\n                }\n            })\n            .catch((error) => { \n                setHideButtons(false);\n                let errorMessage = String(error.message);\n                let validSession = errorMessage.includes(\"Sesion no valida\");\n                if(!validSession){\n                    setTypeMessage(\"ERROR\");\n                    setTypeError(\"onLoad\");\n                    setMessage(errorMessage);\n                }\n             })\n            .finally(() => { setLoading(false) });\n    }\n    const handleTelefono = (value: string) => {\n        setTelefono(value);\n    }\n    const handleEmail = (value: string) => {\n        setEmail(value);\n    }\n    const handleBtnGuardarContacto = async () => {\n        setLoading(true);\n        let datos = {\n            telefono: telefono,\n            email: email\n        }\n        await actualizarContribuyente(datos)\n            .then((result) => {\n                setHideButtons(true);\n                setTypeMessage(\"MENSAJE\");\n                setMessage(result);\n            })\n            .catch(err => {\n                setTypeError(\"onUpdate\");\n                let errorMessage = String(err.message);\n                let sesionValid = errorMessage.includes(\"Sesion no valida\");\n                let connectionError = errorMessage.includes(\"API\");\n                setHideButtons(connectionError);\n                if (!sesionValid) {\n                    setHideButtons(false);\n                    setTypeMessage(\"Error\");\n                    setMessage(err.message);\n                } else {\n                    setTokenExpired(true);\n                }\n            })\n            .finally(() => { setLoading(false) })\n    }\n    const handleBtnRegresar = () =>{\n        console.log(\"REGRESANDO!!\");\n        history.replace(\"/captura-de-lectura.page\")\n    }\n    return (\n        <IonPage>\n            <IonContent fullscreen = {true}>\n                <MenuLeft />\n                <IonHeader>\n                    <IonToolbar color=\"danger\" >\n                        <IonTitle>Detalles contribuyente</IonTitle>\n                        <IonButtons slot=\"start\" className=\"btnMenu\">\n                            <IonMenuButton ></IonMenuButton>\n                        </IonButtons>\n                    </IonToolbar>\n                </IonHeader>\n                <IonCard >\n                    <IonCardHeader className=\"headerData\">\n                        <div className=\"datosContribuyete\">\n                            <h3>{datosContribuyente.Nombre}</h3>\n                            <p>Contrato: {datosContribuyente.ContratoVigente}, &nbsp;&nbsp; Medidor: {datosContribuyente.Medidor}, &nbsp;&nbsp; Toma: {datosContribuyente.Toma}</p>\n                            <p>Municipio: {datosContribuyente.Municipio}, &nbsp;&nbsp; Localidad: {datosContribuyente.Localidad}</p>\n                            <p>Colonia: {datosContribuyente.Colonia} &nbsp;&nbsp; Calle: {datosContribuyente.Calle} &nbsp;&nbsp; Exterior: {datosContribuyente.Exterior} &nbsp;&nbsp; Interior: {datosContribuyente.Interior}</p>\n                        </div>\n                    </IonCardHeader>\n                    <IonCardContent className=\"centrar\">\n                        <IonItem>\n                            <IonLabel className=\"center\" color=\"\">Datos de contacto</IonLabel>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel className=\"input\" position=\"floating\">Telefono</IonLabel>\n                            <IonInput type=\"tel\" placeholder=\"Telefono del contribuyente\" value={telefono} onIonChange={e => { handleTelefono(String(e.detail.value)) }} />\n                        </IonItem>\n                        <IonItem>\n                            <IonLabel className=\"input\" position=\"floating\" >Correo Electronico</IonLabel>\n                            <IonInput type=\"email\" placeholder=\"Correo Electronico\" value={email} onIonChange={e => { handleEmail(String(e.detail.value)) }} />\n                        </IonItem>\n                        <br />\n                        <IonGrid>\n                            <IonRow>\n                                <IonCol size=\"4\">\n                                    <IonButton color=\"secondary\" onClick = {handleBtnRegresar}>\n                                        Regresar\n                                        <IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon>\n                                    </IonButton>\n                                </IonCol>\n                                <IonCol size=\"4\" ></IonCol>\n                                <IonCol size=\"4\">\n                                    <IonButton color=\"danger\" onClick={handleBtnGuardarContacto}>\n                                        Guardar\n                                        <IonIcon icon={saveSharp} slot=\"end\"></IonIcon>\n                                    </IonButton>\n                                </IonCol>\n                            </IonRow>\n                        </IonGrid>\n                    </IonCardContent>\n                </IonCard>\n                <IonAlert\n                    isOpen={message.length > 0}\n                    header={typeMessage}\n                    message={message}\n                    backdropDismiss={false}\n                    buttons={hideButtons ? [\"Aceptar\"] : alertButtons}\n                />\n                <IonLoading\n                    cssClass=\"my-custom-class\"\n                    isOpen={loading}\n                    message={\"Por favor espere\"}\n                    backdropDismiss={false}\n                />\n            </IonContent>\n        </IonPage>\n    )\n}\n\nexport default DatosContribuyente;","import { IonAlert, IonButton, IonCard, IonCardHeader, IonCol, IonContent, IonGrid, IonIcon, IonInput, IonItem, IonItemDivider, IonLabel, IonList, IonLoading, IonNote, IonPage, IonRow, IonSelect, IonSelectOption, useIonViewDidEnter, useIonViewWillEnter } from \"@ionic/react\"\nimport { useEffect, useState } from \"react\"\nimport MenuLeft from '../../components/left-menu';\nimport { IonHeader,IonToolbar,IonTitle,IonButtons,IonMenuButton } from '@ionic/react';\nimport { buscarContrato, solicitarPermisos, verifyGPSPermission,verifyCameraPermission, buscarPorMedidor } from '../../controller/apiController';\nimport { searchCircle } from \"ionicons/icons\";\nimport { getCuentasPapas, getUsuario, setContratoCorte } from \"../../controller/storageController\";\nimport { useHistory } from 'react-router-dom';\n\nconst PrincipalCortes: React.FC = () => {\n    const history = useHistory();\n    const [ activarMenu,setActivarMenu ] = useState(true);\n    const [ tipoFiltro , setTipoFiltro ] = useState(1);\n    const [user, setUser ] = useState(\"Prueba\");\n    const [ nombreCliente,setNombreCliente ] = useState(\"Demo OPD\");\n    const [ contrato, setContrato ] = useState(\"\");\n    const [ loading, setLoading ] = useState(false);\n    const [ listaContratos, setListaContratos ] = useState<any[]>([]);\n    const [ tipoMensaje, setTipoMensaje ] = useState(\"Mensaje\");\n    const [ mensaje, setMensaje ] = useState(\"\");\n    const [ sesionValida, setSessionValida ] = useState( true );\n\n    useEffect(()=>{ prepararPantalla(); });\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\n    const BuscarLectura = (  ) =>{\n        setLoading(true);\n        if(contrato != \"\"){\n            tipoFiltro == 1 ? PorContrato( contrato ) : porMedidor( contrato );\n        }else{\n            setLoading(false);\n        }\n    }\n    const PorContrato = async ( contrato: string ) =>{\n        await buscarContrato(zeroFill(contrato))\n        .then(( result )=>{\n        setListaContratos(result);\n        }).catch((error)=>{\n          let errorMessage = String(error.message);\n          let expired = errorMessage.includes(\"Sesion no valida\");\n          \n          if (!expired) {\n            setTipoMensaje(\"Error\");\n            setMensaje(error.message)\n          }\n        })\n        setLoading(false);\n    }\n    const porMedidor = async (medidor: string) =>{ \n      setLoading(true);\n      await buscarPorMedidor(zeroFill(medidor,10))\n      .then(result =>{\n        setListaContratos(result);\n      }).catch(err=>{\n        \n        let errorMessage = String(err.message);\n        let expired = errorMessage.includes(\"Sesion no valida\");\n        setSessionValida(expired);\n        if (!expired) {\n          setTipoMensaje(\"Error\");\n          setMensaje(err.message)\n        }else{\n          setMensaje(err.message+\"\\nRegresando...\");\n        }\n      }).finally(\n       ()=>{setLoading(false);} \n      )\n    }\n    function zeroFill( number:string,width:number = 9)\n    {\n        while(number.length < width){\n            number = \"0\"+number;\n        }\n        return number;\n    }\n    const functionValidarLectura = (estatus: number, cobro:number) =>{\n        let leyendaCobro = \"\";\n        let result = [\"\",false];\n        if(cobro == 1){\n          leyendaCobro = \"Cuota Fija \";\n        }\n      switch(estatus){\n        case 1:\n          result = [ leyendaCobro + \"\",cobro == 1];\n        break;\n        case 2:\n         result = [leyendaCobro + \"\",cobro == 1];\n        break;\n        case 3:\n          result = [ leyendaCobro + \"Baja Temporal\",true];\n        break;\n        case 4:\n          result = [ leyendaCobro +  \"Baja Permanente\",true];\n        break;\n        case 5:\n          result = [ leyendaCobro + \"Inactivo\",true];\n        break;\n        case 6:\n          result = [ leyendaCobro +  \"Nueva\",true];\n        break;    \n        case 9:\n          result = [ leyendaCobro +  \"Sin Toma\",true];\n        break;\n        case 10:\n          result = [ leyendaCobro +  \"Multada\",true]\n        break;\n      }\n      return result;\n    }\n    const prepararPantalla = async () => {\n        await solicitarPermisos()\n          .then(async (err) => {\n            console.log(\"Solicitando persmisos\");\n            let camera = await verifyCameraPermission();\n            let gps = await verifyGPSPermission();\n            if (camera && gps) {\n              let storageUser = getUsuario();\n              setUser(storageUser + \"\");\n            } else {\n            }\n          }).catch(() => {\n            //Quitar antes de la vercion final (solo sirve en web)\n            let storageUser = getUsuario();\n            setUser(storageUser + \"\");\n          })\n        /**\n        * Activar el metodo solo para la version web de prueba\n        */        \n    }\n    const mostrarDatosContrato = async (item:any ,esPapa:boolean) =>{\n      //NOTE: Verificamos si es una cuenta papa\n      if(!esPapa){\n        //INDEV: guardamos los datos en el storage para mostrar en la pantalla\n        setContratoCorte(item.id);\n        history.push(\"/realizar-corte\");\n      }\n    }\n\n    return (\n        <IonPage>\n            {\n                activarMenu ? \n                    <MenuLeft /> :<></>\n            }\n            {/* Cabezera */}            \n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                <IonTitle>{`${user} - ${nombreCliente}`}</IonTitle>\n                <IonButtons slot=\"start\" className=\"btnMenu\">\n                    <IonMenuButton ></IonMenuButton>\n                </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            {/* Contenido de la app */}\n            <IonContent>\n                <IonCard class=\"ion-text-center\" className=\"box\" >\n                    <IonCardHeader >\n                        <div>\n                        <h3>Realizar Corte</h3>\n                        <IonLabel >Puedes realizar busquedas por:</IonLabel>\n                        <p>Contrato o Medidor</p>\n                        <br/>\n                        </div>\n                        <IonGrid>\n                        <IonRow>\n                            <IonCol>\n                                <IonItem>\n                                    <IonLabel>Filtrar Por:</IonLabel>\n                                    <IonSelect value = {tipoFiltro}  onIonCancel = { ()=>{ setTipoFiltro(1); } } placeholder = \"Seleccione el filtro\" interface = \"action-sheet\" onIonChange = {e => { setTipoFiltro(e.detail.value) }} >\n                                        <IonSelectOption value={1} >Contrato</IonSelectOption>\n                                        <IonSelectOption value={2} >Medidor</IonSelectOption>\n                                    </IonSelect>\n                                </IonItem>\n                            </IonCol>\n                        </IonRow>\n                        <IonRow>\n                            <IonCol size=\"12\">\n                              <IonItem>\n                                  <IonInput type=\"number\" placeholder = { `Ingrese el ${tipoFiltro == 1 ?  \"contrato\" : \"medidor\"}` } onIonChange={e => { setContrato(String(e.detail.value)) }}></IonInput>\n                              </IonItem>\n                            </IonCol>\n                        </IonRow>\n                        <br />\n                        <IonButton color=\"danger\" expand = \"block\" onClick={ BuscarLectura }>\n                            <IonIcon icon={searchCircle} color=\"light\" size=\"large\"></IonIcon>\n                            \n                            </IonButton>\n                        <IonItem>\n                            <IonLabel className=\"center\" color=\"\">Contrato</IonLabel>\n                        </IonItem>\n                        </IonGrid>\n                    </IonCardHeader>\n                    <IonList>\n                        {\n                            listaContratos.map((item,index)=>{\n                                let papas = getCuentasPapas();\n                                let arrayData = functionValidarLectura(parseInt(item.Estatus),parseInt(item.M_etodoCobro));\n                                let cuentaPapa = String(papas).includes(item.id);\n                                if(cuentaPapa){\n                                  arrayData[0] += \"Desarrollo\";  \n                                }\n                                return <div className = { ( cuentaPapa || arrayData[1]) ? 'cuotaFija':''} key={index} onClick={() => { mostrarDatosContrato( item, cuentaPapa ); }}>\n                                  <IonItem detail={true} >\n                                    <IonList>\n                                      <IonLabel>{item.Contribuyente}</IonLabel>\n                                      <p>Contrato: {item.ContratoVigente},\n                                         Medidor: {item.Medidor}, \n                                         Toma: {item.Toma}\n                                         &nbsp;&nbsp;&nbsp;&nbsp;\n                                         {\n                                           (cuentaPapa || arrayData[1]) ? <IonNote style ={{fontsize: 20}} color=\"danger\">{arrayData[0]}</IonNote> :\"\"\n                                         }\n                                      </p>\n                                    </IonList>\n                                  </IonItem>\n                                </div>\n                            })\n                        }\n                    </IonList>\n                </IonCard>\n                <IonLoading\n                    cssClass=\"my-custom-class\"\n                    isOpen={loading}\n                    onDidDismiss={() => { setLoading(false); }}\n                    message=\"Por favor espere\"\n                />\n                <IonAlert\n                    cssClass=\"my-custom-class\"\n                    header={tipoMensaje}\n                    message={mensaje}\n                    onDidDismiss = {()=>{if(!sesionValida){ history.replace(\"./home\");}}}\n                    isOpen={mensaje.length > 0}\n                    backdropDismiss={false}\n                    buttons={ [{ text: 'Aceptar', handler: () => { setMensaje(\"\") } }] }\n                />\n            </IonContent>\n        </IonPage>\n    )\n}\nexport default PrincipalCortes;","import { IonAlert, IonApp, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonChip, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonImg, IonItem, IonLabel, IonLoading, IonMenuButton, IonPage, IonPicker, IonRippleEffect, IonRow, IonSelect, IonSelectOption, IonText, IonTextarea, IonTitle, IonToolbar, useIonToast, useIonViewDidEnter, useIonViewWillEnter } from \"@ionic/react\";\nimport { checkmarkCircle, chevronBackCircleOutline, contractOutline, pencil, saveOutline, triangle } from \"ionicons/icons\";\nimport { useEffect,useState } from 'react';\nimport MenuLeft from '../../components/left-menu';\nimport { obtenerDatosCorte, RealizarCorteAPI } from '../../controller/apiController';\nimport { getIdUsuario } from '../../controller/storageController';\nimport { useTakePhoto, obtenerBase64, obtenerCoordenadas } from '../../utilities';\nimport { camera } from 'ionicons/icons';\nimport './realizar-corte.css';\nimport { useHistory } from 'react-router';\n\nconst RealizarCorte: React.FC = () => {\n    const history = useHistory();\n    const [ activarMenu, setActivarMenu ] = useState(true);\n    const [ datosContrato, setDatosContrato ] = useState(Object);\n    const [ datosUsuario, setDatosUsuario ] = useState(Object);\n    const [ loading, setLoading ] = useState(true);\n    const [ fechaActual, setFechaActual ] = useState(\"\");\n    const [ tipoInspeccion, setTipoInspecion ] = useState(2);\n    /**NOTE: Manejadores de fotos */\n    const [ arregloFotos, setArregloFotos ] = useState<string[]>([]);\n    const [ arregloFotosVista, setArregloFotosVista ] = useState<string[]>([]);\n    const [ fotoActiva, setFotoActiva ] = useState(String);\n    const [ indexFoto, setIndexFoto ] = useState(Number);\n    const [ activarGaleria, setActivarGaleria ] = useState(false);\n    const { takePhoto } = useTakePhoto();\n    //NOTE: contradores de la base de datos\n    const [ motivoInspeccion, setMotivoInspeccion ] = useState(String);\n    const [ ejercicio, setEjercicio ] = useState(2020);\n    //NOTE: Validacion de toma si esta cortado\n    const [ bloquearCorte, setBloquearCorte ] = useState(true);\n    /**NOTE: Manejador de mensajes de error y advertencias */\n    const [ tipoMensaje, setTipoMensaje ] = useState(String);   \n    const [ mensaje, setMensaje ] = useState( String );\n    const [ errorCarga, setErrorCarga ] = useState(false);\n    const [ errorCampos, setErrorCampos ] = useState(false);\n    const [pressentToast, dismissToast] = useIonToast();\n    const alertButtons = [\n        {\n            text: \"Reintentar\", handler: () => {\n                setMensaje(\"\");\n                setTipoMensaje(\"Error\");\n                setLoading(true);\n                extraerDatos();\n                \n            }\n        },\n        {\n            text: \"Cancelar\"\n        }]\n    const modoPruebas = true; //INDEV: modo de pruebas \n    const fecha = new Date();\n    useEffect(()=>{\n        extraerDatos();\n    },[]);\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\n    const listaEstados = [\"Activo\",\"Cortado\",\"Baja Temporal\",\"Baja Permanente\",\"Inactivo\",\"Nueva\",\"\",\"\",\"Sin toma\",\"Multada\"];\n    const extraerDatos = async () =>{\n        //NOTE: extraer datos del contrato\n        let dia = fecha.getDate();\n        let mes = fecha.getMonth();\n        let anio = fecha.getFullYear();\n        setEjercicio( modoPruebas ? 2020 : anio);\n        setFechaActual( formatoFecha(dia,mes,anio) );\n        await obtenerDatosCorte()\n        .then(( result )=>{\n            if(result != undefined ){\n                console.log(result[1]);\n                setDatosContrato(result[0]);\n                setDatosUsuario(result[1]);\n                //NOTE: verificamos si\n                setBloquearCorte(result[0].Estatus != 1);\n            }\n        })\n        .catch(( error )=>{\n            setErrorCarga(true);\n            setMensaje(error.message);\n            setTipoMensaje(\"ERROR\");\n\n        }).finally(()=>{\n            setLoading(false);\n        });\n    }\n    const formatoFecha = ( dia: number, mes: number, anio:number  ) =>{\n        let formatoFecha = \"\";\n        dia < 10 ? formatoFecha += (\"0\"+dia+\"/\") : formatoFecha += dia +\"/\";\n        mes < 10 ? formatoFecha += (\"0\"+mes+\"/\") :  formatoFecha += mes + \"/\";\n        formatoFecha += anio;\n        return formatoFecha;\n    }\n    const handleAbrirCamara = async () =>{\n        if(!bloquearCorte){\n            console.log(\"Abriendo Camara...\");\n            setLoading(true);\n            await takePhoto()\n            .then((result)=>{\n                agregarImagenEncode( String(result.webPath) );\n                //NOTE: Verificamos que aun tenga fotos disponible\n            }).catch((erro)=>{\n                let errorType = erro.message + \"\";\n                if (errorType.includes(\"denied\")) {\n                    setMensaje(\"La aplicación no tiene permisos para usar la cámara\");\n                }\n            }).finally(()=>{\n                setLoading(false);\n            });\n        }\n    }\n    const agregarImagenEncode = async ( direccion: string ) =>{\n        await obtenerBase64(direccion)\n        .then(( base64Encode )=>{\n            setFotoActiva(direccion);\n            setArregloFotosVista(arregloFotosVista => [...arregloFotosVista, direccion]);\n            setIndexFoto(arregloFotosVista.length);\n            setArregloFotos( arregloFotos => [...arregloFotos,String(base64Encode)] );\n            setActivarGaleria(true);\n        }).catch((error)=>{\n\n        }).finally(()=>{\n            setLoading(false);;\n        })\n        \n    }\n    const generarGaleria = () => {\n        if (activarGaleria) {\n            let data =\n                <div>\n                    {\n                        arregloFotosVista.length > 0 ?\n                            <IonItem>\n                                <IonRow>\n                                    {\n                                        arregloFotosVista.map((item, index) => {\n                                            return <IonCol key={index} className = {\"ion-activatable ripple-parent \" + ( indexFoto == index ? \"selected\" : \"\")} >\n                                                        <IonImg src={item} onClick={() => { cambiarFotoActiva(item, index) }} className=\"imgFormat\"></IonImg>\n                                                        <IonRippleEffect></IonRippleEffect>\n                                                    </IonCol>\n                                        })\n                                    }\n                                </IonRow>\n                            </IonItem> : <></>\n                    }\n                </div>;\n            return data;\n        }\n    }\n    const cambiarFotoActiva = (foto: string, index: number) => {\n        setFotoActiva(foto);\n        setIndexFoto(index);\n    }\n    const guardarInspeccion = async(  ) =>{\n        try {\n            setLoading(true);\n            setTimeout(() => {\n                if (loading) {\n                    throw 0;\n                }\n            }, 20000);\n            if(!(arregloFotos.length == 0)){\n                await obtenerCoordenadas()\n                .then( async ( coordenadas )=>{\n                    //NOTE: damos formato a los datos que se enviaran\n                    //INDEV: faltan las fotos {\\\"Estatus\\\":true,\\\"Code\\\":200,\\\"Mensaje\\\":\\\"Tomar cortada\\\",\\\"Corte\\\":6089}\n                    let datos = {\n                        Motivo: motivoInspeccion,\n                        Padron: datosContrato.Padron,\n                        Persona: datosUsuario.Persona,\n                        Usuario: datosUsuario.Usuario,\n                        Estado: tipoInspeccion,\n                        Longitud: String(coordenadas.longitude),\n                        Latitud: String(coordenadas.latitude),\n                        Ejercicio: ejercicio,\n                        Evidencia:arregloFotos\n                    };\n                    await RealizarCorteAPI(datos)\n                    .then(()=>{\n                        setErrorCarga(false);\n                        setTipoMensaje(\"Mensaje\");\n                        setMensaje(\"Corte realizado...\");\n                    })\n                    .catch((error)=>{\n                        setErrorCarga(false);\n                        setMensaje(error.message);\n                        setTipoMensaje(\"ERROR\");            \n                    })\n                    .finally(()=>{\n                        setLoading(false);\n                    })\n                });\n            }else{\n                setTipoMensaje(\"Mensaje\");\n                setMensaje(\"Debe capturar almenos 1 foto\")\n                setLoading(false);\n            }\n        }catch(error){\n            console.log(error);\n            setLoading(false);\n            setTipoMensaje(\"Mensaje\");\n            setMensaje(`Tiempo de espera agotado.\n            Asegúrese de activar la ubicación del dispositivo`)\n        }\n    }\n    const validarCampos = async () =>{\n        if(motivoInspeccion != \"\"){\n            setErrorCampos(false);\n            await guardarInspeccion();\n        }else{\n            setTipoMensaje(\"Mensaje\");\n            setMensaje(\"Favor de ingresar el motivo del corte\");\n            setErrorCampos(true);\n        }\n    }\n    const borrarFotoEvidencia = () => {\n        let fotosTemporal = new Array;\n        let fotosEncoded = new Array;\n        arregloFotos.map((item, index) => {\n            if (index != indexFoto) {\n                fotosTemporal.push(item);\n            }\n        });\n        arregloFotosVista.map((item, index) => {\n            if (index != indexFoto) {\n                fotosEncoded.push(item);\n            }\n        })\n        setArregloFotosVista(fotosTemporal);\n        setArregloFotos(fotosEncoded);\n        setFotoActiva('');\n        pressentToast({\n            message: \"Se elimino la foto de la lista\",\n            duration: 2000,\n            position: 'top',\n            buttons: [\n                {\n                    side: 'start',\n                    icon: checkmarkCircle,\n                }\n            ]\n        });\n        console.log(fotosTemporal.length + \" - \" + fotosEncoded.length);\n    }\n    const regresar = () =>{\n        history.replace('/buscar-contrato');\n    }\n    const limpiarPantalla = () =>{\n        setActivarGaleria(false);\n        setFotoActiva(\"\");\n        setArregloFotos([]);\n        setArregloFotosVista([]);\n        setIndexFoto(0);\n        setBloquearCorte(true);\n        setMensaje(\"\");\n        setTipoMensaje(\"\");\n        setErrorCampos(false);\n        setErrorCarga(false);\n    } \n    return (\n        <IonPage>\n            {\n                activarMenu ? <MenuLeft /> : <></>\n            }\n            {/**  Header del menu */}\n            \n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                    <IonTitle>Cortar toma</IonTitle>\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\n                        <IonMenuButton ></IonMenuButton>\n                    </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <IonCard>\n                    <IonCardHeader>\n                        <div className=\"datosContribuyete\">\n                            <h3>{ datosContrato.Nombre } </h3>\n                            <p> RFC: { datosContrato.Rfc } , Cuenta: {datosContrato.Cuenta}</p>\n                            <p>Contrato: { datosContrato.ContratoVigente }, &nbsp;&nbsp; Medidor: {datosContrato.Medidor}, &nbsp;&nbsp; Toma: {datosContrato.Toma}</p>\n                            <p>Municipio: {datosContrato.Municipio}, &nbsp;&nbsp; Localidad: { datosContrato.Localidad}</p>\n                            <p>Direccion: {datosContrato.Direccion}</p>\n                        </div>\n                    </IonCardHeader>\n                    <IonCardContent>\n                        <br />\n                        <IonItem >\n                            <IonLabel>{ `Inspector: ${datosUsuario.PersonaNombre} - ${ datosUsuario.Puesto } ` }</IonLabel>\n                        </IonItem>\n                        <br/>\n                        <IonItem >\n                            <IonLabel color = {bloquearCorte ? \"danger\" : \"primary\"} className = \"bloquearCorte\" > { ` Estado:  ${listaEstados[ parseInt(datosContrato.Estatus)-1 ]} ${modoPruebas ? \" Modo Pruebas \" :\"\" }` } </IonLabel>\n                        </IonItem>\n                        <br/>\n                        <IonItem>\n                            <IonLabel> {`Fecha: ${fechaActual} `} </IonLabel>\n                        </IonItem>\n                        <br />\n                        <IonItem>\n                            <IonLabel> Tipo de inspección </IonLabel>\n                            <IonSelect disabled interface = \"action-sheet\" value = {tipoInspeccion} onIonChange = { ( e )=>{setTipoInspecion(e.detail.value)} } >\n                                <IonSelectOption value = {3} > Baja Temporal </IonSelectOption>\n                                <IonSelectOption value = {4} > Baja Permanente </IonSelectOption>\n                                <IonSelectOption value = {2} > Cortado </IonSelectOption>\n                                <IonSelectOption value = {5} > Inactivo </IonSelectOption>\n                                <IonSelectOption value = {9} > Sin Toma </IonSelectOption>\n                            </IonSelect>\n                        </IonItem>\n                        <IonItem>\n                            <IonTextarea disabled = {bloquearCorte} placeholder = \"Motivo del corte\" className = {errorCampos ? \"inputBorderError\":\"inputBorder\"} onIonChange = {e=>{setMotivoInspeccion(String(e.detail.value))}} > </IonTextarea>   \n                        </IonItem>\n                        <br/>\n                        \n                        <IonItem>\n                            <IonLabel >Adjuntar evidencia (maximo 3 fotos)</IonLabel>\n                            <IonIcon  icon={camera} className=\"iconStyle\" onClick={handleAbrirCamara}></IonIcon>\n                        </IonItem>\n                        <br/>\n                        {\n                            generarGaleria()\n                        }\n                        <br />\n                        {\n                            fotoActiva != '' ?\n                            <IonItem >\n                                <IonCard className = \"centrarCarousel\" >\n                                    <IonImg src={fotoActiva} />\n                                    <IonCardContent >\n                                        <IonButtons>\n                                            <IonButton color=\"secondary\" onClick={() => { setFotoActiva(''); }}>Cerrar</IonButton>\n                                            <IonButton color=\"danger\" onClick={() => { borrarFotoEvidencia(); }} >Eliminar</IonButton>\n                                        </IonButtons>\n                                    </IonCardContent>\n                                </IonCard>\n                            </IonItem> : <></>\n                        }\n                            <IonGrid>\n                                <IonRow>\n                                    <IonCol size=\"4\">\n                                            <IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon>\n                                        <IonButton color=\"secondary\" onClick = {regresar}>\n                                            Regresar\n                                        </IonButton>\n                                    </IonCol>\n                                    <IonCol size=\"4\" ></IonCol>\n                                    <IonCol size=\"4\" >\n                                        <IonButton disabled = {bloquearCorte} color=\"danger\" onClick={validarCampos}>\n                                            Guardar\n                                            <IonIcon icon={saveOutline} slot=\"end\"></IonIcon>\n                                        </IonButton>\n                                    </IonCol>\n                                </IonRow>\n                            </IonGrid>\n                    </IonCardContent>\n                </IonCard>\n                <IonLoading \n                    cssClass=\"my-custom-class\"\n                    isOpen={loading}\n                    onDidDismiss={() => { setLoading(false); }}\n                    message=\"Por favor espere\"\n                />\n                <IonAlert\n                    cssClass=\"my-custom-class\"\n                    header={tipoMensaje}\n                    message={mensaje}\n\n                    isOpen={mensaje.length > 0}\n                    backdropDismiss={false}\n                    buttons={ errorCarga ? alertButtons : [{ text: 'Aceptar', \n                        handler: () => { \n                            if(mensaje == \"Corte realizado...\"){\n                                limpiarPantalla();\n                                extraerDatos();\n                            }\n                        setMensaje(\"\");\n                     } \n                }]}\n                />\n            </IonContent>\n        </IonPage>\n    );\n}\n\nexport default RealizarCorte;","import { IonButtons, \n    IonCard, \n    IonCardHeader, \n    IonCol, \n    IonContent, \n    IonHeader, \n    IonMenuButton, \n    IonPage, \n    IonRippleEffect, \n    IonRow, \n    IonText, \n    IonTitle, \n    IonToolbar, \n    useIonViewDidEnter, \n    useIonViewWillEnter,\n    IonSelect,\n    IonSelectOption, \n    IonItemDivider,\n    IonList,\n    IonItem,\n    IonLabel,\n    IonButton,\n    IonNote,\n    IonCardContent,\n    IonLoading,\n    IonAlert} from \"@ionic/react\";\nimport { useEffect, useState } from \"react\";\nimport { generarFechas } from '../../utilities'; \nimport MenuLeft from '../../components/left-menu';\nimport { ListaCortes } from '../../controller/apiController';\nimport { useHistory } from  'react-router-dom'; \nimport './buscar-corte.css'\nconst BuscarCorte: React.FC = () => {\n    const history = useHistory();\n    const [activarMenu , setActivarMenu ] = useState(true);\n    const [fechaActual, setFechaActual ] = useState(String);\n    const [ anios, setAnios ] = useState<any[]>([]);\n    const [ meses, setMeses ] = useState<any[]>([]);\n    const [ anioSeleccionado, setAnioSeleccionado ] = useState(11);\n    const [ mesSelecionado, setMesSeleccionado ] = useState(Number);\n    const [ arregloCortes , setArregloCortes ] = useState<any[]>([]);\n    const [ loading, setLoading ] = useState(false);\n    const [mensaje, setMensaje ] = useState(\"\");\n    const [ tipoMensaje, setTipoMensaje ] = useState( \"Mensaje\" );\n    const fecha = new Date();\n    const listaEstados = [\"Activo\",\"Cortado\",\"Baja Temporal\",\"Baja Permanente\",\"Inactivo\",\"Nueva\",\"\",\"\",\"Sin toma\",\"Multada\"];\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\n    useEffect(()=>{\n        setFechaActual(fecha.getFullYear() + \"-\" + (fecha.getMonth() + 1) + \"-\" + (fecha.getDate()  + 1 ));\n        preparaPantalla(String(fecha.getFullYear()));\n        \n    },[]);\n    const preparaPantalla = async (anio:string) =>{\n        let aniosMeses = await generarFechas(fecha.getFullYear());\n        setMeses(aniosMeses[0].Meses);\n        setAnios(aniosMeses[1].Anios);\n        setMesSeleccionado(fecha.getMonth() + 1);\n        //setAnioSeleccionado(fecha.getFullYear()); es mediante el id del arreglo\n    }\n    const obtenerCortes = async () =>{\n        setLoading(true);\n        await ListaCortes(mesSelecionado <= 9 ? (\"0\" + mesSelecionado ) : String(mesSelecionado),anios[anioSeleccionado-1].anio)\n        .then((result)=>{\n            setArregloCortes(result);\n        })\n        .catch((error)=>{\n            error.message == \"No se encontraron registros\" ? setTipoMensaje(\"MENSAJE\") : setTipoMensaje(\"ERROR\");\n            setMensaje(error.message);\n            setArregloCortes([]);\n        }).finally(()=>{\n            setLoading(false);\n        })\n    }\n    const regresarPantalla = ()=>{\n        history.goBack();\n    }\n    return(\n        <IonPage>\n            {\n                activarMenu ? \n                <MenuLeft /> : <></>\n            }\n            <IonHeader>\n                <IonToolbar color=\"danger\" >\n                    <IonTitle>Cortar toma</IonTitle>\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\n                        <IonMenuButton ></IonMenuButton>\n                    </IonButtons>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <IonCard>\n                    <IonCardHeader >\n                        <IonTitle className = \"center\" > Historial de cortes </IonTitle>\n                        <br />\n                        <IonRow className = \"bordeFecha\" >\n                            <IonCol size = \"6\" className = \"labelCalendario\" >\n                                <IonText > Seleccione el año: </IonText>\n                            </IonCol>    \n                            <IonCol size=\"6\" className = \"ion-activatable ripple-parent\">\n                                <div >\n                                    <IonSelect onIonCancel = { ()=>{setAnioSeleccionado(11)} }  interface = \"action-sheet\" value={ anioSeleccionado } onIonChange = {e=>{setAnioSeleccionado(e.detail.value)}} >\n                                        {\n                                            anios != null ?\n                                            anios.map((item,index)=>{\n                                                return <IonSelectOption value={ item.id } key = {index} >{ item.anio }</IonSelectOption>\n                                            }) : <></>\n                                        }\n                                    </IonSelect>\n                                    <IonRippleEffect></IonRippleEffect>\n                                </div>\n                            </IonCol>\n                        </IonRow>\n                        <IonRow className = \"bordeFecha\" >\n                            <IonCol size=\"6\" class=\"labelCalendario\">\n                                <IonText> Seleccione mes: </IonText>\n                            </IonCol>\n                            <IonCol>\n                                <div>\n                                    <IonSelect onIonCancel = { () => { setMesSeleccionado(fecha.getMonth() + 1) }} interface = \"action-sheet\" value = { mesSelecionado } onIonChange = {e => {setMesSeleccionado(e.detail.value)}} >\n                                        {\n                                            meses.map((mes,item)=>{\n                                                return <IonSelectOption value={mes.id} key = {mes.id} >{ mes.mes }</IonSelectOption>\n                                            })\n                                        }\n                                    </IonSelect>\n                                </div>\n                            </IonCol> \n                        </IonRow>\n                        <IonRow>\n                            <IonCol className = \"center margintop\" >\n                                <IonButton color=\"danger\" expand = \"block\" onClick = { obtenerCortes } > <IonText> Buscar Cortes </IonText> <IonRippleEffect></IonRippleEffect> </IonButton>\n                            </IonCol>\n                        </IonRow>\n                    </IonCardHeader>\n                    <IonCardContent>\n                        {/*NOTE: contenedor lista*/ }\n                        <div style = {{flex:1,justifyContent:\"center\", borderWidth: 1, marginTop: 5 }} >\n                            <IonList className = \"borderList\" >\n                                {\n                                    arregloCortes.map((item,index)=>{\n                                        return <IonItem key = {index} >\n                                            <IonLabel>\n                                                <h2> {item.Nombre} </h2>\n                                                <p> Contrato: { item.ContratoVigente }, Fecha: { item.FechaCorte } </p>\n                                                <p> Motivo: { item.Motivo } </p>\n                                                <IonNote slot = \"end\" color = {item.Estatus == 2 ? \"danger\" : \"primary\"} > {listaEstados[item.Estatus-1]} </IonNote>\n                                            </IonLabel>\n                                            </IonItem>\n                                    })\n                                }\n                            </IonList>\n                        </div>\n                    </IonCardContent>\n                </IonCard>\n                <IonLoading\n                cssClass=\"my-custom-class\"\n                isOpen={loading}\n                onDidDismiss={() => { setLoading(false); }}\n                message=\"Por favor espere\"\n                />\n                <IonAlert\n                cssClass=\"my-custom-class\"\n                header={tipoMensaje}\n                message={mensaje}\n                isOpen={mensaje.length > 0}\n                onDidDismiss = {()=>{setMensaje(\"\")}}\n                buttons ={[{\n                    text:\"Aceptar\",\n                    handler:()=>{setMensaje(\"\")}\n                }]}\n                />\n            </IonContent>\n        </IonPage>\n    );\n}\n\nexport default BuscarCorte;","import { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport Home from './pages/Home';\nimport TomaDatos from './pages/form-datos-toma/form-datos-toma.page'\nimport CapturaLectura from './pages/captura-de-lectura/captura-de-lectura.page'\nimport HistorialLecturas from './pages/historial-lecturas/historial-lecturas.page'\nimport EditarLectura from './pages/editar-lecturas-agua/editar-lecturas-agua.page'\n//import Reportes from './pages/reportes/reportes.page';\n//import HistorialReportes from './pages/historial-reportes/historial-reportes.page';\n//import DetallesHistorial from './pages/detalle-reporte/detalle-reporte.page';\nimport DatosContribuyente from './pages/datos-contribuyente/datos-del-contribuyente';\nimport PrincipalCortes from './pages/captura-cortes/buscar-contrato';\nimport RealizarCorte from './pages/realizar-corte/realizar-corte';\nimport BuscarCorte from './pages/buscar-corte/buscar-corte';\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nconst App: React.FC = () => (\n  <IonApp>\n    <IonReactRouter>\n      <IonRouterOutlet>\n        <Route exact path=\"/home\">\n          <Home />\n        </Route>\n        <Route exact path=\"/\">\n          <Redirect to=\"/home\" />\n        </Route>\n        <Route exact path = \"/form-datos-toma.page\">\n          <TomaDatos />\n        </Route>\n        <Route exact path = \"/captura-de-lectura.page\">\n          <CapturaLectura/>\n        </Route>\n        <Route exact path = \"/historial-lecturas.page\">\n          <HistorialLecturas/>\n        </Route>\n        <Route exact path = \"/editar-lecturas-agua.page\">\n          <EditarLectura/>\n        </Route>\n        <Route exact path = \"/datos-contribuyente.page\">\n          <DatosContribuyente/>\n        </Route>\n        <Route exact path = \"/buscar-contrato\">\n          <PrincipalCortes/>\n        </Route>\n        <Route exact path = \"/realizar-corte\">\n          <RealizarCorte />\n        </Route>\n        <Route exact path = \"/buscar-corte\" >\n          <BuscarCorte />\n        </Route>\n      </IonRouterOutlet>\n    </IonReactRouter>\n  </IonApp>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t135,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t136,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t137,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t138,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t139,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t140,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t141,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t142,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t143,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t144,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t145,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t146,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t147,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t148,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t149,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t150,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t151,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t152,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t153,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t154,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t155,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t156,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t157,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t158,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t159,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t160,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t161,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t162,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t163,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t164,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t165,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t166,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t167,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t168,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t169,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t170,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t171,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t172,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t173,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t174,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t175,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t176,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t177,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 86;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t178,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 88;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}