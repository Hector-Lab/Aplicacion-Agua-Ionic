{"version":3,"sources":["controller/storageController.ts","controller/apiController.ts","api/api-laravel.service.ts","pages/Home.tsx","components/left-menu.tsx","pages/form-datos-toma/form-datos-toma.page.tsx","utilities.ts","pages/captura-de-lectura/captura-de-lectura.page.tsx","pages/historial-lecturas/historial-lecturas.page.tsx","pages/editar-lecturas-agua/editar-lecturas-agua.page.tsx","pages/reportes/reportes.page.tsx","pages/buscar-contrato-reporte/buscar-contrato-reporte.tsx","pages/datos-contribuyente/datos-del-contribuyente.tsx","pages/captura-cortes/buscar-contrato.tsx","pages/realizar-corte/realizar-corte.tsx","pages/buscar-corte/buscar-corte.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object"],"names":["restoreUser","remenberMe","localStorage","getItem","value","pass","user","remember","removeItem","guardarDatosCliente","basicData","recordar","setItem","contrasenia","usuario","String","idUsuario","cliente","token","userName","console","log","getUsuario","obtenerDatosCliente","guardarContratos","contratos","guardarDatosLectura","idLectura","contribuyente","contratoVigente","medidor","getDatosLecturaStorage","nCliente","extraerDatosEditarLectura","contrato","obtenerDatosClienteEditar","datosLectura","idConsulta","cerrarSesion","a","verifyingSession","setContribuyenteBuscado","setPuntero","getPuntero","cursor","puntero","Number","isNaN","setNumeroPaginas","getNumeroPaginas","noPages","pages","getLogoStorage","setLogoStorage","logoEncode","setClienteNombreCorto","clienteNombreCorto","getClienteNombreCorto","setContribuyente","getContribuyente","clearState","setPunteroBusqueda","getPunteroBusqueda","data","getPaginasBusqueda","setCuentasPapas","papas","getCuentasPapas","setContratoCorte","item","getContratoCorte","getIdUsuario","service","axios","post","headers","date","Date","netwokError","Error","sesionNotValidError","failedLoginError","userNotValidError","lecturaCodeError","noRowSelect","LecturaNull","LecturaMenor","mesMayor","mesRegistrado","anioMayor","anioRegistrado","mesIgual","API223","APIError","errorCarga","errorImagenes","ErrorInsertar","Login","password","remerber","acceso","passwd","getAuth","result","Status","datosUsuario","NombreCompleto","verificarUsuarioLecturista","verified","conectionError","userData","datos","buscarSectores","datosConsulta","Sectores","ConfiguracionEvidencias","Cliente","obtenerConfiguracionFotografia","mensaje","Mensaje","length","extraerDatosLectura","keyLectura","extraesDatosLectura","tipoLectura","ValorLectura","Valor","guardarCaptura","datosCaptura","validarDatosLectura","enviarDatosLectura","anomalia","parseInt","lectura","arrayAnios","mesActual","getMonth","isInteger","NaN","lecturaActual","consumo","consumoFinal","anioSeleccionado","indexAnio","anio","comparaMes","mesCaptura","comparaAnio","mesLectura","anhioSeleccionado","anhioCaptura","anhioActual","getFullYear","idToma","lecturaAnterior","fechaCaptura","latitud","Latidude","longitud","Longitude","tipoCoordenada","fotos","arregloFotos","ruta","route","code","message","historialFechas","fechaInicio","fechaFin","fechaInicioH","fechaFinH","extraerHistorial","getDatosLecturaEditar","extraerDatoseditar","crearReporte","validarDatosReporte","datosreporte","colonia","calle","numero","descripcion","fallaAdministrativa","obtenerContribuyente","busqueda","offset","sector","mes","datoBusqueda","a_no","Offset","obtenerDatosSectorPalabraClave","extraerContribuyente","Array","isArray","obtenerTotalDatosSectores","extraerNumeroItems","items","cantidad","lecturasPorSectorPage","Sector","buscarLecturasPorSector","Papas","JSON","stringify","legth","obtenerPromedioConsumo","extraerPromedioContribuyente","Math","round","obtenerLogo","obtenerLogoCliente","logo","Data","obtenerDatosContribuyente","idBusqueda","extraerContactoContribuyente","Code","Contribuyente","actualizarContribuyente","contacto","id","telefono","email","guardarContribuyente","error","errorMessage","errorCode","typeError","includes","verifyCameraPermission","AndroidPermissions","checkPermission","PERMISSION","CAMERA","hasPermission","verifyGPSPermission","ACCESS_COARSE_LOCATION","solicitarPermisos","requestPermissions","obtenerPromedioEditar","padron","Padron","Lectura","buscarContrato","Contrato","buscarPorContrato","buscarPorMedidor","verificarDatosCoutaFija","consumoData","guardarCuotaFija","Consumo","capturarCoutaFija","obtenerDatosCorte","Usuario","obtenerDatosContratoCorte","DatosContrato","push","RealizarCorteAPI","datosCorte","Motivo","Persona","Estado","Longitud","Latitud","Ejercicio","Evidencia","realizarCorteTomaSuinpac","resultCorte","jsonError","parse","ListaCortes","Mes","Anio","listarCortesUsuario","cortes","ContratosListaContratoReporte","buscarContratoReporte","guardarReporteV2","Reporte","Calle","Colonia","Numero","Descripcion","Fotos","FallaAdministrativa","Estatus","realizarReporteContrato","buscarMedidorSinFiltro","clave","realizarReporteMedidor","configuracionCuotaFija","obtenerConfiguracion","rawConfiguracion","Configuracion","SplashScreen","Plugins","Home","history","useHistory","useState","User","setUserName","passwors","setPassword","loading","setLoading","setMessage","setRemember","useEffect","hide","handleRequestPermissions","recordarCredenciales","useIonViewWillEnter","validateUserData","setTimeout","then","replace","catch","err","finally","color","fullscreen","class","className","src","type","placeholder","onIonChange","e","detail","slot","checked","onClick","cssClass","isOpen","onDidDismiss","header","MenuLeft","selectedIndex","setSelectedIndex","setLogo","appPages","title","selects","icon","water","path","reader","construct","cutOutline","timerOutline","logOut","itemSelected","cargarLogo","dir","window","location","pathname","toString","split","selected","undefined","map","pageIndex","index","side","menuId","contentId","name","button","ios","md","FormDatosTomaPage","setUser","sectores","setSectores","idSector","setIdSector","lecturas","setLecuras","typeErro","setTypeError","permissions","hideAlertButons","setHideAlertbuttons","block","setBlock","tipoMessage","setTipoMessage","tokenExpired","setTokenExpired","textoBusqueda","setTextoBusqueda","serched","setSerched","paginas","setPaginas","showPagination","setShowPagination","nombreCliente","setNombreCliente","setBusqueda","filtro","setFiltro","placeHolder","setPlaceHolder","alertButtons","text","handler","cargarSectores","buscarPorSector","handle","activarMenu","setActivarMenu","isSessionValid","valid","nombreCorto","prepararPantalla","camera","gps","storageUser","sessionValid","useIonViewWillLeave","expired","abrirCapturaDatos","metodo","esPapa","punteroBuscarPorSector","handleSector","setSector","punteroBuscarPorClave","porContrato","zeroFill","porMedidor","number","width","onIonCancel","interface","filter","size","texto","shape","searchCircle","disabled","cancelText","itemIndex","arrowBackOutline","arrowForwardOutline","arrayData","estatus","cobro","leyendaCobro","functionValidarLectura","M_etodoCobro","cuentaPapa","ContratoVigente","Medidor","Toma","style","fontsize","backdropDismiss","buttons","useTakePhoto","getPhoto","useCamera","takePhoto","resultType","CameraResultType","Uri","source","CameraSource","Camera","quality","cameraPhoto","generarFechas","listaMeses","listaAnios","generarAnios","obtenerBase64","leerArchivo","fetch","file","blob","blobFile","convertBase64","imgEncode","Promise","resolve","reject","FileReader","onerror","onloadend","baseSplit","readAsDataURL","defaultAnio","menorAnio","anioMaximo","idAnio","obtenerCoordenadas","Geolocation","getCurrentPosition","coords","CapturaDeLectura","Object","datosContribuyente","setDatosContribuyente","setLecturaAnterior","anomalias","setAnomalias","setConsumo","activarGaleria","setActivarGaleria","fotoActiva","setFotoActiva","fotosEvidencia","setFotosEvidencia","indexFoto","setIndexFoto","useIonToast","pressentToast","fotosCodificadas","setFotosCodificadas","setlistaMeses","mesDefautl","setMesDefault","indexMes","setIndexMes","anioActual","setAnioActual","indexAnioActual","setIndexAnioActual","setAnioLectura","setListaAnios","bloquearCampos","setBloquearcampos","btnInactivo","setComparaMes","setComparaAnio","seleccionAnomalia","setSeleccionAnomalia","setLecturaActual","setTipoLectura","setMesLectura","refreshControl","setRefreshControl","defaultLectura","setDefaultLectura","defaultAnomalia","setDefaultAnomalia","enbleButtons","setEnbleButtons","promedioLectura","setPromedioLectura","toma","setToma","municipio","setMunicipio","localidad","setLocalidad","direccion","setDireccion","bloqueoAnomalias","setBloqueoAnomalias","consumoMinimo","setConsumoMinimo","fija","setFija","fecha","cargarContribuyente","useIonViewDidEnter","extraerLectura","ConfiguracionAnomalia","promedio","parseFloat","toFixed","Municipio","Localidad","Direccion","cargarFechas","LecturaActual","BloquearCampos","Anomalias","anioDefault","Meses","Anios","lecturaCasoUno","lecturaCasoDos","lecturaCasoTres","anioResult","meses","anhioLista","esteMes","anios","generarAniosPosterior","mesResult","mesComparacion","anioComparar","mensajeConsumoCero","handleBtnGuardar","validarConsumo","procesoConsumo","datosCapturados","latitude","longitude","guardarDatosCuotaFija","LecturaAnterior","handleAbrirCamera","agregarImagenEncode","webPath","imgDir","formatindex","numIndex","consumoProcesado","pencil","consumido","calcularConsumo","displayFormat","min","max","ActualizarAdelante","ActualizarAtras","Minima","handleSelectAnomalia","descripci_on","foto","cambiarFotoActiva","generarGaleria","fotosTemporal","fotosEncoded","duration","position","checkmarkCircle","borrarFotoEvidencia","selectedText","chevronBackCircleOutline","saveOutline","HistorialLecturas","setFechaInicio","fechaFinal","setFechaFinal","historial","setHistorial","tipoMensaje","setTipoMensaje","setConectionErro","Boolean","expiredToken","setExpiredToken","alertsButtons","getDate","desde","hasta","validateFechas","editarContribuyente","idLectua","pickerFormat","doneText","handleSelectFechaInicio","handleSelectFechaFin","Fecha","eyeOutline","EditarLecturaAgua","setBloquearDatos","anhioLectura","setAnhioLectura","validarAnhio","setValidarAnhio","validarMes","setValidarMes","listaAnhios","setListaAnhios","setListaMeses","tipoAnomalia","setTipoAnomalia","fechaLectura","setFechaLectura","showToast","setShowToast","connectionError","setConnectionError","setTokenExpered","traceError","setTraceError","lecturaRegistrada","setLecturaRegistrada","alertRetriButtons","cargarDatos","guardarLectura","generarFechasAnhios","A_no","filtrarLectura","bloqueoCampos","goBack","Observaci_on","FechaLectura","handleCalcularconsumo","Padr_onAgua","consumoCalculado","idPadron","regresarPantalla","Nombre","Exterior","Interior","selectAnomalia","checkmarkCircleOutline","Reportes","setContrato","setArregloFotos","activarGalaria","ErrorUI","setErrorUI","setColonia","setCalle","setNumero","setDescripcion","buttonsErrorConnection","handleBtnCrearReporte","limpiarPantalla","messageError","sessionExpired","enviarReporte","coordenadas","lanzarMensaje","paddingLeft","paddingRight","expand","trim","ListaContratoReportes","tokenExpirado","setTokenExpirado","setClienteNombre","setMensaje","setUsuario","tipoFiltro","setTipoFiltro","placeHolderFiltro","setPlaceHolderFiltro","palabraClave","setPalabraClave","botonReintentar","setBotonReintentar","setTipoError","cargando","setCargando","listaContratos","setListaContratos","listaEstatus","useIonViewDidLeave","verificarSession","valido","irReportar","idContrato","pablabraClave","buscarMedidor","realizarBusqueda","flex","justifyContent","borderWidth","marginTop","DatosContribuyente","setTelefono","setEmail","typeMessage","setTypeMessage","hideButtons","setHideButtons","handleBtnGuardarContacto","Celular","Email","sesionValid","saveSharp","PrincipalCortes","sesionValida","setSessionValida","PorContrato","mostrarDatosContrato","RealizarCorte","datosContrato","setDatosContrato","setDatosUsuario","fechaActual","setFechaActual","tipoInspeccion","setTipoInspecion","arregloFotosVista","setArregloFotosVista","motivoInspeccion","setMotivoInspeccion","ejercicio","setEjercicio","bloquearCorte","setBloquearCorte","setErrorCarga","errorCampos","setErrorCampos","extraerDatos","dia","formatoFecha","handleAbrirCamara","erro","base64Encode","guardarInspeccion","validarCampos","Rfc","Cuenta","PersonaNombre","Puesto","BuscarCorte","setAnios","setMeses","setAnioSeleccionado","mesSelecionado","setMesSeleccionado","arregloCortes","setArregloCortes","listaEstados","preparaPantalla","aniosMeses","obtenerCortes","FechaCorte","App","exact","to","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackAsyncContext","req","__webpack_require__","o","ids","keys","module","exports"],"mappings":"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","file":"static/js/main.70da63c9.chunk.js","sourcesContent":["import { lockClosed } from \"ionicons/icons\";\r\n\r\n//controlador del LocalStorage\r\nexport function restoreUser() {\r\n    let remenberMe = localStorage.getItem(\"@Storage:recordarUsuario\");\r\n    if (remenberMe != null) {\r\n        let value = remenberMe == \"true\";\r\n        if (value) {\r\n            let user = {\r\n                pass: localStorage.getItem(\"@Storage:contraseniaX\"),\r\n                user: localStorage.getItem(\"@Storage:usuario\"),\r\n                remember: value\r\n            }\r\n            return user;\r\n        } else {\r\n            localStorage.removeItem('@Storage:contraseniaX');\r\n            localStorage.removeItem('\"@Storage:usuario\"');\r\n            let user = {\r\n                pass: '',\r\n                user: '',\r\n                remember: value\r\n            }\r\n            return user;\r\n        }\r\n    } else {\r\n        let user = {\r\n            pass: '',\r\n            user: '',\r\n            remember: false\r\n        }\r\n        return user;\r\n    }\r\n}\r\nexport function guardarDatosCliente(basicData: { usuario: string, idUsuario: Number, cliente: Number, token: string, recordar: boolean, contrasenia: string, userName: string }) {\r\n    basicData.recordar ? localStorage.setItem(\"@Storage:contraseniaX\", basicData.contrasenia) : localStorage.removeItem(\"@Storage:contraseniaX\");\r\n    localStorage.setItem(\"@Storage:usuario\", basicData.usuario);\r\n    localStorage.setItem(\"@Storage:idUsuario\", String(basicData.idUsuario));\r\n    localStorage.setItem(\"@Storage:cliente\", String(basicData.cliente));\r\n    localStorage.setItem(\"@Storage::userToken\", basicData.token);\r\n    localStorage.setItem(\"@Storage:recordarUsuario\", String(basicData.recordar));\r\n    localStorage.setItem(\"@Storage:userName\", basicData.userName);\r\n    console.log(basicData.userName)\r\n}\r\nexport function getUsuario() {\r\n    return localStorage.getItem(\"@Storage:usuario\");\r\n}\r\nexport function obtenerDatosCliente() {\r\n    let result = {\r\n        cliente: localStorage.getItem(\"@Storage:cliente\"),\r\n        idUsuario: localStorage.getItem(\"@Storage:idUsuario\"),\r\n        token: localStorage.getItem(\"@Storage::userToken\")\r\n    }\r\n    return result;\r\n}\r\nexport function guardarContratos(contratos: string) {\r\n    localStorage.setItem(\"@Storage:contratos\", contratos);\r\n}\r\nexport function guardarDatosLectura(idLectura: string, contribuyente: string, contratoVigente: string, medidor: string) {\r\n    localStorage.setItem('@Storage:idLectura', idLectura);\r\n    localStorage.setItem('@Storage:nContribuyente', contribuyente);\r\n    localStorage.setItem('@Storage:contratoVigente', contratoVigente);\r\n    localStorage.setItem('@Storage:medidor', medidor);\r\n    return true;\r\n}\r\nexport function getDatosLecturaStorage() {\r\n    let lectura = {\r\n        idLectura: localStorage.getItem('@Storage:idLectura'),\r\n        contribuyente: localStorage.getItem('@Storage:nContribuyente'),\r\n        contratoVigente: localStorage.getItem('@Storage:contratoVigente'),\r\n        medidor: localStorage.getItem('@Storage:medidor'),\r\n        //NOTE: TESTING: datos para el guardado de la lectura\r\n        nCliente: localStorage.getItem(\"@Storage:cliente\"),\r\n        token: localStorage.getItem(\"@Storage::userToken\"),\r\n        idUsuario: localStorage.getItem(\"@Storage:idUsuario\")\r\n    }\r\n    return lectura;\r\n}\r\nexport function getContratos() {\r\n    let datos = localStorage.getItem(\"@Storage:contratos\");\r\n    return datos;\r\n}\r\nexport function guardarDatosEditarLectura(idLectua: string, contrato: string, contribuyente: string, medidor: string) {\r\n    localStorage.setItem('@Storage:editarIdLectura', idLectua);\r\n    localStorage.setItem('@Storage:editarContratoVigente', contrato);\r\n    localStorage.setItem('@Storage:editarNContribuyente', contribuyente);\r\n    localStorage.setItem('@Storage:editarMedidor', medidor);\r\n    return true;\r\n}\r\nexport function extraerDatosEditarLectura() {\r\n    let result = {\r\n        idLectura: localStorage.getItem('@Storage:editarIdLectura'),\r\n        contrato: localStorage.getItem('@Storage:editarContratoVigente'),\r\n        contribuyente: localStorage.getItem('@Storage:editarNContribuyente'),\r\n        medidor: localStorage.getItem('@Storage:editarMedidor')\r\n    }\r\n    return result;\r\n}\r\nexport function obtenerDatosClienteEditar() {\r\n    let lecturaData = {\r\n        idConsulta: localStorage.getItem('@Storage:editarIdLectura'),\r\n        nCliente: localStorage.getItem('@Storage:cliente'),\r\n    }\r\n    return { datosLectura: lecturaData, token: localStorage.getItem('@Storage::userToken') };\r\n}\r\nexport async function cerrarSesion() {\r\n    //Olvidando credenciales\r\n    let remenber = localStorage.getItem(\"@Storage:recordarUsuario\");\r\n    if (remenber == \"false\") {\r\n        localStorage.removeItem(\"@Storage:usuario\");\r\n        localStorage.removeItem(\"@Storage:idUsuario\");\r\n        localStorage.removeItem(\"@Storage:cliente\");\r\n        localStorage.removeItem(\"@Storage::userToken\");\r\n        localStorage.removeItem(\"@Storage:contraseniaX\");\r\n    } else {\r\n        localStorage.removeItem(\"@Storage:idUsuario\");\r\n        localStorage.removeItem(\"@Storage:cliente\");\r\n        localStorage.removeItem(\"@Storage::userToken\");\r\n    }\r\n    return true\r\n}\r\nexport function verifyingSession() {\r\n    /* localStorage.setItem(\"@Storage::userToken\",\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczpcL1wvYXBpLnNlcnZpY2lvZW5saW5lYS5teFwvYXBpLW1vdmlsXC9sb2dpbi1wcmVzaWRlbnRlUHJ1ZWJhIiwiaWF0IjoxNjIxMzY1OTk0LCJleHAiOjE2MjE0MDE5OTQsIm5iZiI6MTYyMTM2NTk5NCwianRpIjoiV0w3VE9EeUZpQkhWZzZqRSIsInN1YiI6MzgwMCwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.5aG5sSnugBRIPvmj0QcbhHuqxPfBRkwrxN74bGz1uho\");\r\n     */let token = localStorage.getItem(\"@Storage::userToken\");\r\n    return token != null;\r\n}\r\nexport function obtenerIdReporte() {\r\n    let reporte = {\r\n        userName: localStorage.getItem(\"@Storage:userName\"),\r\n        id: localStorage.getItem(\"@Storage:idReporte\")\r\n    }\r\n    return reporte;\r\n\r\n}\r\nexport function obtenerToken() {\r\n    return String(localStorage.getItem(\"@Storage::userToken\"));\r\n}\r\nexport function guardarIdReporte(id: number) {\r\n    localStorage.setItem(\"@Storage:idReporte\", String(id));\r\n}\r\nexport function contribuyenteBuscado() {\r\n    let data = localStorage.getItem(\"@Storage:serched\");\r\n    if (data == null) {\r\n        return false;\r\n    } else {\r\n        return data === \"true\";\r\n    }\r\n}\r\nexport function setContribuyenteBuscado(value: Boolean) {\r\n    localStorage.setItem(\"@Storage:serched\", String(value));\r\n}\r\nexport function setPuntero(value: number){\r\n    localStorage.setItem(\"@Storage:cursor\",String(value))\r\n}\r\nexport function getPuntero(){\r\n    let cursor =  localStorage.getItem(\"@Storage:cursor\");\r\n    let puntero = Number(cursor);\r\n    if(isNaN(puntero)){\r\n        return 0;\r\n    }else{\r\n        return puntero\r\n    }\r\n}\r\nexport function setNumeroPaginas(value: number){\r\n    localStorage.setItem(\"@Storage:pages\",String(value));\r\n}\r\nexport function getNumeroPaginas(){\r\n    let noPages = localStorage.getItem(\"@Storage:pages\");\r\n    let pages = Number(noPages);\r\n    if(isNaN(pages)){\r\n        return 0\r\n    }else{\r\n        return pages;\r\n    }\r\n}\r\nexport function deleteContratos(){\r\n    localStorage.removeItem(\"@Storage:contratos\");\r\n}\r\nexport async function getLogoStorage(){\r\n    return localStorage.getItem(\"@Storage:logoCliente\");\r\n}\r\nexport async function setLogoStorage(logoEncode: string){\r\n    localStorage.setItem(\"@Storage:logoCliente\",logoEncode);\r\n}\r\nexport  function setClienteNombreCorto(clienteNombreCorto: string){\r\n    localStorage.setItem(\"@Storage:clienteNombreCorto\",clienteNombreCorto)\r\n}\r\nexport  function getClienteNombreCorto() {\r\n    return localStorage.getItem(\"@Storage:clienteNombreCorto\");\r\n}\r\nexport  function setContribuyente(contribuyente: string) {\r\n    localStorage.setItem(\"@Storage:idContribuyente\",contribuyente);\r\n}\r\nexport  function getContribuyente() {\r\n    return localStorage.getItem(\"@Storage:idContribuyente\");\r\n}\r\nexport function setSector(sector: string) {\r\n    localStorage.setItem(\"@Storage:idSector\",sector);\r\n}\r\nexport function getSector() {\r\n    return localStorage.getItem(\"@Storage:idSector\");\r\n}\r\nexport function clearState(){\r\n    localStorage.removeItem(\"@Storage:idSector\");\r\n    localStorage.removeItem(\"@Storage:cursor\");\r\n    localStorage.removeItem(\"@Storage:pages\");\r\n    localStorage.removeItem(\"@Storage:lecturaDesde\");\r\n    localStorage.removeItem(\"@Storage:lecturaHasta\");\r\n    localStorage.removeItem(\"@Storage:reporteDesde\");\r\n    localStorage.removeItem(\"@Storage:reporteHasta\");\r\n}\r\nexport function setFechasHistorialLectura (desde: string, hasta: string) {\r\n    localStorage.setItem(\"@Storage:lecturaDesde\",desde);\r\n    localStorage.setItem(\"@Storage:lecturaHasta\",hasta);\r\n}\r\nexport function getFechasHistorialLectura(){\r\n    let datos = localStorage.getItem(\"@Storage:lecturaDesde\");\r\n    if(datos != null){\r\n        let data = {\r\n            desde: localStorage.getItem(\"@Storage:lecturaDesde\"),\r\n            hasta: localStorage.getItem(\"@Storage:lecturaHasta\")\r\n        }\r\n        return data;\r\n    }else{\r\n        return null;\r\n    }\r\n}\r\nexport function setFechasHistorialReportes(desde: string, hasta: string){\r\n    localStorage.setItem(\"@Storage:reporteDesde\",desde);\r\n    localStorage.setItem(\"@Storage:reporteHasta\",hasta);\r\n}\r\nexport function getFechasHistorialReportes(){\r\n    let dato = localStorage.getItem(\"@Storage:reporteDesde\");\r\n    if(dato!=null){\r\n        let data = {\r\n            desde: localStorage.getItem(\"@Storage:reporteDesde\"),\r\n            hasta: localStorage.getItem(\"@Storage:reporteHasta\")\r\n        }\r\n        return data;\r\n    }else{\r\n        return null;\r\n    }\r\n}\r\nexport function setPunteroBusqueda(puntero: number){\r\n    console.log(puntero)\r\n    localStorage.setItem(\"@Storage:punteroBusqueda\",String(puntero));\r\n}\r\nexport function getPunteroBusqueda(){\r\n    let data = localStorage.getItem(\"@Storage:punteroBusqueda\");\r\n    let puntero = Number(data);\r\n    if(isNaN(puntero)){\r\n        return 0;\r\n    }else{\r\n        return puntero;\r\n    }\r\n}\r\nexport function setPaginasBusqueda(paginas: number){\r\n    localStorage.setItem(\"@Storage:paginasBusqueda\",String(paginas));\r\n}\r\nexport function getPaginasBusqueda(){\r\n   let data = localStorage.getItem(\"@Storage:paginasBusqueda\");\r\n   let pages = Number(data);\r\n   if(isNaN(pages)){\r\n       return 0;\r\n   }else{\r\n        return pages;\r\n   }\r\n}\r\nexport function setInspeccionPadronAgua(contribuyente: string){\r\n    localStorage.setItem(\"@Storage:inspeccionPadron\",contribuyente);\r\n}\r\nexport function getInspeccionPadronAgua(){\r\n    return localStorage.getItem(\"@Storage:inspeccionPadron\");\r\n}\r\nexport function obtnerCliente(){\r\n    return localStorage.getItem(\"@Storage:cliente\")\r\n}\r\nexport function setCuentasPapas(papas:String){\r\n    localStorage.setItem(\"@Storage:CuentasPapas\",String(papas));\r\n}\r\nexport function getCuentasPapas(){\r\n    return localStorage.getItem(\"@Storage:CuentasPapas\") != null ? localStorage.getItem(\"@Storage:CuentasPapas\"): \"\";\r\n}\r\nexport function setContratoCorte(item:string){\r\n    localStorage.setItem(\"@Storage:ContratoCorte\",item);\r\n}\r\nexport function getContratoCorte(){\r\n    return localStorage.getItem(\"@Storage:ContratoCorte\") != null ? localStorage.getItem(\"@Storage:ContratoCorte\") : \"\";\r\n}\r\nexport function getIdUsuario(){\r\n    return localStorage.getItem(\"@Storage:idUsuario\") != null ? localStorage.getItem(\"@Storage:idUsuario\") : 0;\r\n}\r\nexport function setContratoReporte(idContrato:string){\r\n    localStorage.setItem(\"@Storage:reporteContrato\", idContrato );\r\n}\r\nexport function getContratoReporte( ){\r\n    return localStorage.getItem(\"@Storage:reporteContrato\");\r\n}","import { Motion } from '@capacitor/core';\r\nimport { AndroidPermissions } from '@ionic-native/android-permissions';\r\nimport { thermometer } from 'ionicons/icons';\r\nimport { Console } from 'node:console';\r\nimport { _private } from 'workbox-core';\r\nimport { APIservice } from '../api/api-laravel.service';\r\nimport {\r\n    guardarDatosCliente,\r\n    obtenerDatosCliente,\r\n    guardarContratos,\r\n    guardarDatosLectura,\r\n    getContratos,\r\n    obtenerDatosClienteEditar,\r\n    getDatosLecturaStorage,\r\n    setLogoStorage,\r\n    setClienteNombreCorto,\r\n    getContribuyente,\r\n    setContribuyente,\r\n    obtnerCliente,\r\n    obtenerToken,\r\n    extraerDatosEditarLectura,\r\n    setCuentasPapas,\r\n    getContratoCorte,\r\n    getIdUsuario,\r\n} from '../controller/storageController';\r\nimport DatosContribuyente from '../pages/datos-contribuyente/datos-del-contribuyente';\r\nconst service = new APIservice();\r\nconst date = new Date();\r\n//INDEV: Errores del sistema\r\nconst netwokError = new Error(\"Error al intentar comunicarse con la API. Verifique que su dispositivo se encuentre conectado a la red\");\r\nconst sesionNotValidError = new Error(\"Sesion no valida\");\r\nconst failedLoginError = new Error(\"Usuario y/o contraseña incorrectos\");\r\nconst userNotValidError = new Error(\"No puedes iniciar sesión con este usuario\");\r\nconst lecturaCodeError = new Error('Consulte con su administrador que el código de lecturas de agua se encuentre en el rango de 1-3');\r\nconst noRowSelect = new Error(\"No se encontraron registros\");\r\nconst LecturaNull = new Error(\"No se ha calculado el consumo\");\r\nconst LecturaMenor = new Error(\"La lectura actual no puede ser menor a la anterior\");\r\nconst mesMayor = new Error(\"Aun no puedes realizar registros para el mes seleccionado\");\r\nconst mesRegistrado = new Error(\"El mes seleccionado ya fue registrado\");\r\nconst anioMayor = new Error(\"Aun no puedes realizar registros para este año\");\r\nconst anioRegistrado = new Error(\"Ya no puedes realizar registros para este año\");\r\nconst mesIgual = new Error(\"este mes ya fue registrado\");\r\nconst API223 = new Error(\"Revisa que los campos esten rellenados de forma correcta\");\r\nconst APIError = new Error(\"Error del servidor\");\r\nconst atrasError = new Error(\"El mes seleccionada debe se mayor a la actual\");\r\nconst adelanteError = new Error(\"El mes de la lectura debe ser menor al actual\");\r\nconst PermissionsError = new Error(\"Para poder hacer uso de todas las funciones de la aplicaciòn por favor acepta los permisos solicitados por la misma\");\r\nconst errorCarga = new Error(\"Error al obtener los datos del contrato 403\");\r\nconst errorImagenes = new Error(\"Corte realizado\\nHubo un error al subir las imagenes\");\r\nconst ErrorInsertar = new Error(\"Error al insertar el registro\");\r\nexport async function Login(user: string, password: string, remerber: boolean) {\r\n    const acceso = {\r\n        usuario: user,\r\n        passwd: password\r\n    }\r\n    try {\r\n        let result = await service.getAuth(acceso);\r\n        //Verificanos si el inicio de session es valido\r\n        let sessionValida = result.data.Status;\r\n        if (sessionValida == true) {\r\n            let data = {\r\n                usuario: user,\r\n                cliente: result.data.cliente,\r\n                idUsuario: result.data.idUsuario,\r\n                token: result.data.token,\r\n                recordar: remerber,\r\n                contrasenia: password,\r\n                userName: result.data.datosUsuario.NombreCompleto\r\n            }\r\n            console.log(data.token);\r\n            let verified = await verificarUsuarioLecturista(data);\r\n            if (verified === true) {\r\n                return verified;\r\n            } else {\r\n                throw verified;\r\n            }\r\n        } else {\r\n            throw failedLoginError;\r\n        }\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n\r\n}\r\nasync function verificarUsuarioLecturista(userData: any) {\r\n    try {\r\n        let datos = {\r\n            usuario: userData.idUsuario,\r\n            cliente: userData.cliente\r\n        }\r\n        if (datos.cliente === \"-1\") {\r\n            throw userNotValidError;\r\n        }\r\n        let result = await service.verificarUsuarioLecturista(datos, userData.token);\r\n        let esLecturista = result.data.Status;\r\n        if (esLecturista) {\r\n            guardarDatosCliente(userData);\r\n            return true;\r\n        } else {\r\n            throw userNotValidError;\r\n        }\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function buscarSectores() {\r\n    try {\r\n        let basicData = obtenerDatosCliente();\r\n        const datosConsulta = {\r\n            nCliente: basicData.cliente,\r\n            idUsuario: basicData.idUsuario,\r\n        }\r\n        let result = await service.buscarSectores(datosConsulta, basicData.token + \"\");\r\n        return result.data.Sectores;\r\n    } catch (error) {\r\n        throw conectionError(error)\r\n    }\r\n}\r\nexport async function lecturasPorSector(sector: string) {\r\n    try {\r\n        let basicData = obtenerDatosCliente();\r\n        let mes = date.getMonth() + 1;\r\n        let anio = date.getFullYear();\r\n        const datosConsulta = {\r\n            nCliente: basicData.cliente,\r\n            Sector: sector,\r\n            mes: mes,\r\n            a_no: anio\r\n        }\r\n        let result = await service.buscarLecturasPorSector(datosConsulta, basicData.token + \"\");\r\n        let mensaje = result.data.mensaje;\r\n        guardarContratos(JSON.stringify(mensaje));\r\n        if (mensaje.legth === 0 || mensaje === \"No se encontraron registros\") {\r\n            throw noRowSelect;\r\n        } else {\r\n            return mensaje;\r\n        }\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function ConfiguracionEvidencias(){\r\n    try{\r\n    let{cliente,token}= obtenerDatosCliente();\r\n    const datosConsulta = {\r\n        Cliente: cliente \r\n    }\r\n    let result = await service.obtenerConfiguracionFotografia(datosConsulta,  String(token));\r\n    let mensaje = result.data.Mensaje;\r\n    if (mensaje.length === 0 || mensaje === \"No se encontraron registros\"){\r\n        throw noRowSelect;\r\n    }else {\r\n        return mensaje;\r\n    }\r\n    }catch (error){\r\n        throw conectionError(error);\r\n    }\r\n}\r\n\r\nexport async function extraerDatosLectura(keyLectura: string) {\r\n    try {\r\n        //Extrallendo los datos de la lectura\r\n        let basicData = obtenerDatosCliente();\r\n        let datos = {\r\n            nCliente: basicData.cliente,\r\n            idLectura: keyLectura\r\n        }\r\n        let result = await service.extraesDatosLectura(datos, basicData.token + \"\");\r\n        console.log(result);\r\n        let tipoLectura = result.data.ValorLectura[0].Valor;\r\n        if (tipoLectura != '1' && tipoLectura != '2' && tipoLectura != '3') {\r\n            throw lecturaCodeError\r\n        } else {\r\n            return result.data;\r\n        }\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function guardarCaptura(datosCaptura: any) {\r\n    try {\r\n        let result = await validarDatosLectura(datosCaptura);\r\n        console.log(result);\r\n        if (result === true) {\r\n            //NOTE: se manda a llamar al metodo de guardado\r\n            let result = await enviarDatosLectura(datosCaptura);\r\n            return result;\r\n        } else {\r\n            throw result;\r\n        }\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\n/**\r\n * Funcion para verificar los datos de al guardar la captura del agua\r\n */\r\nasync function validarDatosLectura(data: any) {\r\n    let anomalia = parseInt(data.anomalia);\r\n    let tipoLectura = data.lectura;\r\n    let arrayAnios = data.arrayAnios;\r\n    let mesActual = date.getMonth() + 2;\r\n    if (!Number.isInteger(anomalia)) {\r\n        anomalia = NaN;\r\n    }\r\n    //Validamos que la lectura no este vacia\r\n    if (data.lecturaActual == null) {\r\n        throw LecturaNull;\r\n    }\r\n    //Validamos que el consumo no sea menor a 0 \r\n    let consumo = parseInt(data.consumoFinal);\r\n    if (!isNaN(anomalia)) {\r\n        if (consumo < 0) {\r\n            throw LecturaMenor;\r\n        }\r\n    } else {\r\n        if (consumo <= 0) {\r\n            throw LecturaMenor;\r\n        }\r\n    }\r\n    //REVIEW: Esto creo que no es necesario\r\n    if (tipoLectura == 3) {\r\n        let anioSeleccionado = arrayAnios[data.indexAnio - 1].anio;\r\n        //mayor \r\n        if (data.comparaMes < data.mesCaptura) {\r\n            throw mesMayor;\r\n        }\r\n        if (data.comparaAnio < anioSeleccionado) {\r\n            throw anioMayor\r\n        }\r\n        //menor\r\n        if (data.comparaMes > data.mesCaptura) {\r\n            throw mesRegistrado\r\n        }\r\n        if (data.comparaAnio > anioSeleccionado) {\r\n            throw anioRegistrado\r\n        }\r\n        if (mesActual == 13) {\r\n            mesActual = 1;\r\n        }\r\n        if (mesActual == data.mesLectura) {\r\n            throw mesIgual\r\n        }\r\n    } else\r\n        if (tipoLectura == 2) {\r\n            let anhioSeleccionado = arrayAnios[data.indexAnio - 1].anio;\r\n\r\n            if (data.comparaMes < data.mesCaptura) {\r\n                throw mesMayor;\r\n            }\r\n            if (data.comparaMes > data.mesCaptura) {\r\n                throw mesRegistrado\r\n            }\r\n            if (data.comparaAnio < anhioSeleccionado) {\r\n                throw anioMayor\r\n            }\r\n            if (data.comparaAnio > anhioSeleccionado) {\r\n                throw anioRegistrado\r\n            }\r\n            if (data.mesCaptura >= data.comparaAnio && data.anhioCaptura >= data.comparaAnio) {\r\n                throw mesIgual\r\n            }\r\n\r\n        } else\r\n            if (tipoLectura == 1) {\r\n                let anhioSeleccionado = arrayAnios[data.indexAnio - 1].anio;\r\n                let mesActual, anhioActual;\r\n                if (data.mesCaptura > data.comparaMes) {\r\n                    throw mesMayor\r\n                }\r\n                if (anhioSeleccionado > data.comparaAnio) {\r\n                    throw anioMayor\r\n                }\r\n                if (data.mesCaptura < data.comparaMes) {\r\n                    throw mesRegistrado\r\n                }\r\n                if (anhioSeleccionado < data.comparaAnio) {\r\n                    throw anioRegistrado\r\n                }\r\n                mesActual = date.getMonth() + 2;\r\n                anhioActual = date.getFullYear();\r\n                if (mesActual == 13) {\r\n                    mesActual = 1;\r\n                    anhioActual = date.getFullYear() + 1;\r\n                }\r\n                if (mesActual == data.mesCaptura && anhioActual == data.comparaAnio) {\r\n                    throw mesMayor\r\n                }\r\n            }\r\n    return true;\r\n\r\n}\r\nasync function enviarDatosLectura(data: any) {\r\n    const datos = {\r\n        idToma: data.idToma,\r\n        cliente: data.nCliente,\r\n        lecturaAnterior: data.lecturaAnterior,\r\n        lecturaActual: data.lecturaActual,\r\n        consumoFinal: data.consumoFinal,\r\n        mesCaptura: data.mesCaptura,\r\n        anhioCaptura: data.anhioCaptura,\r\n        fechaCaptura: data.fechaCaptura,\r\n        anomalia: data.anomalia,\r\n        idUsuario: data.idUsuario,\r\n        latitud: data.Latidude,\r\n        longitud: data.Longitude,\r\n        tipoCoordenada: 1,\r\n        fotos: [],\r\n        arregloFotos: data.arregloFotos,\r\n        ruta: data.route\r\n    }\r\n    let result = await service.guardarDatosLectura(datos, data.token);\r\n    console.log(result);\r\n    let code = result.data.Mensaje;\r\n    let message = \"\";\r\n    switch (code) {\r\n        case 200:\r\n            message = \"Ok\";\r\n            break;\r\n        case 224:\r\n            throw new Error(\"No se pudo realizar el registro\");\r\n            break;\r\n        case 223:\r\n            throw API223;\r\n        case 400:\r\n            throw new Error(\"El mes ya fue capturado\");\r\n            break;\r\n        default:\r\n            throw APIError;\r\n            break;\r\n    }\r\n    return message;\r\n}\r\nexport async function obtenerSiguienteIndice(idLectura: number) {\r\n    let contratos = getContratos();\r\n    let arrayContratos = new Array;\r\n    let indice = -1;\r\n    if (contratos != null) {\r\n        arrayContratos = JSON.parse(contratos);\r\n        arrayContratos.map((item, index) => {\r\n            if (item.id == idLectura)\r\n                indice = index + 1;\r\n        })\r\n    }\r\n    let result = false;\r\n    if (indice < arrayContratos.length) {\r\n        let lecturaSiguiente = arrayContratos[indice];\r\n        result = guardarDatosLectura(lecturaSiguiente.id, lecturaSiguiente.Contribuyente, lecturaSiguiente.ContratoVigente, lecturaSiguiente.Medidor)\r\n    }\r\n    return result;\r\n}\r\n//INDEV: dando soporte a los errores\r\nexport async function historialFechas(fechaInicio: string, fechaFin: string) {\r\n    try {\r\n        //Obteniedo los datos para la consulta\r\n        let basicData = obtenerDatosCliente();\r\n        let data = {\r\n            idUsuario: basicData.idUsuario,\r\n            nCliente: basicData.cliente,\r\n            fechaInicioH: fechaInicio,\r\n            fechaFinH: fechaFin\r\n        }\r\n        let result = await service.extraerHistorial(data, basicData.token + \"\");\r\n        if (result.data.Status) {\r\n            return result.data;\r\n        } else {\r\n            throw noRowSelect;\r\n        }\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function getDatosLecturaEditar() {\r\n    try {\r\n        let { datosLectura, token } = obtenerDatosClienteEditar()\r\n        if (token != null) {\r\n            let result = await service.extraerDatoseditar(datosLectura, token);\r\n            return result.data\r\n        } else {\r\n            throw null;\r\n        }\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function validorDatosEditarLectura(lecturaDatos: any) {\r\n    if (lecturaDatos.lecturaActual == \"\" || lecturaDatos.lecturaActual == null)\r\n        throw LecturaNull;\r\n    else if (lecturaDatos.consumo < 0)\r\n        throw LecturaMenor;\r\n    else if (lecturaDatos.validarAnhio < lecturaDatos.anhioLectura)\r\n        throw anioMayor;\r\n    else if (lecturaDatos.validarAnhio > lecturaDatos.anhioLectura)\r\n        throw anioRegistrado;\r\n    else if (lecturaDatos.mesLectura < lecturaDatos.validarMes)\r\n        throw mesRegistrado\r\n    else if (lecturaDatos.mesLectura > lecturaDatos.validarMes)\r\n        throw mesMayor;\r\n    else\r\n        return null\r\n\r\n}\r\nexport async function actualizarLectura(lecturaDatos: any) {\r\n    try {\r\n        let result = await validorDatosEditarLectura(lecturaDatos);\r\n        let { datosLectura, token } = obtenerDatosClienteEditar();\r\n        if (result == null) {\r\n            let data = {\r\n                idPadronLetura: datosLectura.idConsulta,\r\n                idToma: lecturaDatos.idPadron,\r\n                cliente: datosLectura.nCliente,\r\n                anhioCaptura: lecturaDatos.anhioLectura,\r\n                consumoFinal: lecturaDatos.consumo,\r\n                fechaCaptura: lecturaDatos.fechaLectura,\r\n                lecturaActual: lecturaDatos.lecturaActual,\r\n                lecturaAnterior: lecturaDatos.lecturaAnterior,\r\n                mesCaptura: lecturaDatos.mesLectura,\r\n                anomalia: lecturaDatos.tipoAnomalia\r\n            }\r\n            let result = await service.actualizarDatosLectura(data, token + \"\")\r\n            return result.data;\r\n        } else {\r\n            throw result;\r\n        }\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function crearReporte(data: { colonia: String, calle: String, numero: String, descripcion: String, contrato: string, fallaAdministrativa: number }) {\r\n    try {\r\n        let valid = validarDatosReporte(data);\r\n        if (valid) {\r\n            //Llamada a la API\r\n            let basicData = obtenerDatosCliente();\r\n            let datosreporte = {\r\n                cliente: basicData.cliente,\r\n                usuario: basicData.idUsuario,\r\n                colonia: data.colonia,\r\n                calle: data.calle,\r\n                numero: data.numero,\r\n                descripcion: data.descripcion,\r\n                contrato: data.contrato,\r\n                fallaAdministrativa: data.fallaAdministrativa,\r\n            }\r\n            let result = await service.crearReporte(datosreporte, basicData.token + \"\")\r\n            if (result.data.Status)\r\n                return result.data.Mensaje\r\n            else\r\n                throw new Error(result.data.Mensaje);\r\n        } else {\r\n            throw new Error(\"Los campos que presentan * son obligatorios\");\r\n        }\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\nfunction validarDatosReporte(data: { colonia: String, calle: String, numero: String, descripcion: String, contrato: string }) {\r\n    if (data.colonia == \"\" || data.calle == \"\" || data.descripcion == \"\") {\r\n        return false\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\nexport async function historialReportes(fechaInicio: string, fechaFin: string) {\r\n    try {\r\n        let basicData = obtenerDatosCliente();\r\n        let data = {\r\n            idUsuario: basicData.idUsuario,\r\n            cliente: basicData.cliente,\r\n            fechaInicio: fechaInicio,\r\n            fechaFin: fechaFin\r\n        }\r\n        let result = await service.extraerHistorialReportes(data, basicData.token + \"\");\r\n        if (result.data.Mensaje.length <= 0) {\r\n            throw noRowSelect;\r\n        } else {\r\n            return result.data.Mensaje;\r\n        }\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function extraerReporte(id: String) {\r\n    try {\r\n        //Obteniendo datos basicos para la consulta;\r\n        let basicData = obtenerDatosCliente();\r\n        let data = {\r\n            cliente: basicData.cliente,\r\n            idUsuario: basicData.idUsuario,\r\n            id: id\r\n        }\r\n        let result = await service.extraerReporte(data, String(basicData.token));\r\n        if (result.data.Mensaje.length <= 0) {\r\n            throw noRowSelect;\r\n        } else {\r\n            return result.data.Mensaje;\r\n        }\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function obtenerContribuyente(busqueda: string,offset: number,sector: String) {\r\n    try {\r\n        let { token, cliente } = obtenerDatosCliente();\r\n        let mes = date.getMonth() + 1;\r\n        let anio = date.getFullYear();\r\n        let datos = {\r\n            nCliente: cliente,\r\n            datoBusqueda: busqueda,\r\n            mes: mes,\r\n            a_no: anio,\r\n            Offset: offset,\r\n            sector:sector\r\n        }\r\n        let result = null;\r\n        if(sector != \"-1\"){\r\n            result = await service.obtenerDatosSectorPalabraClave(datos,String(token));\r\n            console.log(\"Se utiliso el sector: \" + sector);\r\n        }else{\r\n            result = await service.extraerContribuyente(datos, String(token));\r\n        }\r\n        //Mensaje \"Campos vacios\", \"No se encontraron registros\"\r\n        let data = result.data.mensaje;\r\n        let isArray = Array.isArray(data);\r\n        if (isArray) {\r\n            return data;\r\n        } else {\r\n            let message = String(data);\r\n            throw new Error(message);\r\n        }\r\n    } catch (err) {\r\n        throw conectionError(err);\r\n    }\r\n}\r\nexport async function obtenerTotalDatosSectores(sector: string) {\r\n    try {\r\n        let basicData = obtenerDatosCliente();\r\n        let mes = date.getMonth() + 1;\r\n        let anio = date.getFullYear();\r\n        const datosConsulta = {\r\n            cliente: basicData.cliente,\r\n            sector: sector,\r\n            mes: mes,\r\n            anio: anio\r\n        }\r\n        let result = await service.extraerNumeroItems(datosConsulta, String(basicData.token));\r\n        let exist = result.data.Mensaje.length;\r\n        if (exist >= 1) {\r\n            let items = result.data.Mensaje[0].cantidad;\r\n            let pages = items / 20;\r\n            let resid = pages % 1;\r\n            if (resid > 0) {\r\n                pages++;\r\n            }\r\n            return pages;\r\n        } else {\r\n            return 0;\r\n        }\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function lecturasPorSectorPage(sector: string, offset: number,) {\r\n    try {\r\n        let basicData = obtenerDatosCliente();\r\n        let mes = date.getMonth() + 1;\r\n        let anio = date.getFullYear();\r\n        const datosConsulta = {\r\n            nCliente: basicData.cliente,\r\n            Sector: sector,\r\n            mes: mes,\r\n            a_no: anio,\r\n            Offset: offset\r\n        }\r\n        let result = await service.buscarLecturasPorSector(datosConsulta, basicData.token + \"\");\r\n        let mensaje = result.data.mensaje;        \r\n        setCuentasPapas(result.data.Papas);\r\n        guardarContratos(JSON.stringify(mensaje));\r\n        if (mensaje.legth === 0 || mensaje === \"No se encontraron registros\") {\r\n            throw noRowSelect;\r\n        } else {\r\n            return mensaje;\r\n        }\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function obtenerPromedioConsumo() {\r\n    try {\r\n        let { idLectura, token, nCliente } = getDatosLecturaStorage();\r\n        let datos = {\r\n            idLectura: idLectura,\r\n            nCliente: nCliente,\r\n        }\r\n        let result = await service.extraerPromedioContribuyente(datos, String(token));\r\n        let data = result.data.Mensaje;\r\n        data = Math.round(data);\r\n        return data;\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function obtenerLogo() {\r\n    try {\r\n        let { cliente, token } = obtenerDatosCliente();\r\n        let data = {\r\n            nCliente: cliente\r\n        }\r\n        let logo = await service.obtenerLogoCliente(data, String(token));\r\n        setClienteNombreCorto(String(logo.data.Data));\r\n        setLogoStorage(String(logo.data.Mensaje));\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function obtenerDatosContribuyente() {\r\n    try {\r\n        let { idLectura, token } = getDatosLecturaStorage();\r\n        let { cliente } = obtenerDatosCliente();\r\n        let datos = {\r\n            nCliente: cliente,\r\n            idBusqueda: idLectura\r\n        }\r\n        let data = await service.extraerContactoContribuyente(datos, String(token));\r\n        let result = data.data.Mensaje[0];\r\n        if( data.data.Code == 200 ){\r\n            if(data.data.Mensaje.length > 0){\r\n                setContribuyente(result.Contribuyente);\r\n            }else{\r\n                console.log(\"Mensaje de prueba\");\r\n                throw noRowSelect;\r\n            }\r\n        }else{\r\n\r\n        }\r\n        \r\n        return result;\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function actualizarContribuyente(contacto: { telefono: String, email: String }) {\r\n    try {\r\n        let { nCliente, token } = getDatosLecturaStorage();\r\n        let contribuyente = getContribuyente();\r\n        let data = {\r\n            cliente: nCliente,\r\n            id: contribuyente,\r\n            telefono: contacto.telefono,\r\n            email: contacto.email\r\n        }\r\n        let result = await service.guardarContribuyente(data, String(token));\r\n        return result.data.Mensaje;\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function obtenerTotalDatosBusqueda(clave: string, sector: string) {\r\n    try {\r\n        let { cliente, token } = obtenerDatosCliente()\r\n        let mes = date.getMonth() + 1;\r\n        let anio = date.getFullYear();\r\n        let data = {\r\n            cliente: cliente,\r\n            mes: mes,\r\n            anio: anio,\r\n            busqueda: clave,\r\n            sector: sector\r\n        }\r\n        let result = null;\r\n        if(sector != \"-1\"){\r\n            console.log(data);\r\n            result = await service.obtenerNumeroItemsBusquedaSector(data, String(token));\r\n        }else{\r\n            result = await service.extraerNumeroItemsBusqueda(data, String(token));\r\n        }\r\n        /* return result.data.Mensaje.length; */\r\n        let exist = result.data.Mensaje.length;\r\n        if(exist >= 1){\r\n            let items = result.data.Mensaje[0].Total;\r\n            let pages = items / 20;\r\n            let resid = pages % 1;\r\n            if(resid > 0){\r\n                pages++;\r\n            }\r\n            return pages\r\n        }else{\r\n            return 0;\r\n        }\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }   \r\n}\r\nfunction conectionError(error: any) {\r\n    let errorMessage = String(error.message);\r\n    let errorCode = String(error.code);\r\n    let typeError = error;\r\n    if (errorMessage.includes(\"Network Error\")) {\r\n        typeError = netwokError;\r\n    } else if (errorMessage.includes(\"400\")) {\r\n        typeError = sesionNotValidError;\r\n    } else if (errorCode.includes(\"ECONNABORTED\")) {\r\n        typeError = netwokError;\r\n    }\r\n    return typeError;\r\n}\r\nexport async function verifyPermissions() {\r\n    let list = [\r\n        AndroidPermissions.PERMISSION.CAMERA,\r\n        AndroidPermissions.PERMISSION.ACCESS_COARSE_LOCATION,\r\n    ]\r\n    let validPermissions = \"Salida:\";\r\n    list.map((item, index) => {\r\n        let data = AndroidPermissions.checkPermission(item);\r\n        validPermissions += data + \"\";\r\n    })\r\n    return validPermissions;\r\n}\r\nexport async function verifyCameraPermission() {\r\n    let value = await AndroidPermissions.checkPermission(AndroidPermissions.PERMISSION.CAMERA);\r\n    return value.hasPermission;\r\n}\r\nexport async function verifyGPSPermission() {\r\n    let value = await AndroidPermissions.checkPermission(AndroidPermissions.PERMISSION.ACCESS_COARSE_LOCATION);\r\n    return value.hasPermission;\r\n}\r\nexport async function obtenerContribuyenteInspeccion(busqueda: String){\r\n    try{\r\n        let { cliente, token } = obtenerDatosCliente();\r\n        let data = {\r\n            Cliente: cliente,\r\n            Busqueda: busqueda\r\n        }\r\n        let result = await service.obtenerContribuyenteInspeccion(data,String(token));\r\n        let listaDatos =  result.data.mensaje;\r\n        if(listaDatos instanceof Array){\r\n            return listaDatos;\r\n        }else{\r\n            throw noRowSelect;\r\n        }\r\n    }catch(error){\r\n        throw conectionError(error);\r\n    }   \r\n}\r\n/**\r\n * Funcion para pedir permisos Camara, gps, storage\r\n * Si se utilza en web marca un error (Cordova_web_notabiable) solo se utilza en dispisitivos fisicos y emuladoress\r\n */\r\nexport async function solicitarPermisos() {\r\n    let result = await AndroidPermissions.requestPermissions([\r\n        AndroidPermissions.PERMISSION.CAMERA,\r\n        AndroidPermissions.PERMISSION.ACCESS_COARSE_LOCATION,\r\n    ]);\r\n    return result;\r\n}\r\nexport async function obtnerContribuyenteInspeccion(id:String){\r\n    try{\r\n        let datos = {\r\n            Cliente: obtnerCliente(),\r\n            Padron: id\r\n        };\r\n        let result = await service.obtenerDatosContribuyentePorPadron(datos,obtenerToken());\r\n        console.log(result.data.mensaje.length);\r\n        let datosContribuyente = result.data.mensaje;\r\n        if(datosContribuyente.length > 0){\r\n            return datosContribuyente[0];\r\n        }else{\r\n            throw noRowSelect;\r\n        }\r\n    }catch(error){\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function  obtenerPromedioEditar(padron: number){\r\n    try {\r\n        let { token, nCliente } = getDatosLecturaStorage();\r\n        let datosLectura = extraerDatosEditarLectura();\r\n        let datos = {\r\n            Cliente: nCliente,\r\n            Padron: padron,\r\n            Lectura: datosLectura.idLectura //Esta es la lectura que se va a editar\r\n        }\r\n        let result = await service.obtenerPromedioEditar(datos, String(token));\r\n        let data = result.data.Mensaje;\r\n        data = Math.round(data);\r\n        return data;\r\n    } catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\n\r\nexport async function buscarContrato(busqueda:string){\r\n    try{\r\n        let { cliente,token } = obtenerDatosCliente();\r\n        let idUsuario = getIdUsuario();\r\n        console.log(idUsuario);\r\n        let mes = date.getMonth() + 1;\r\n        let anio = date.getFullYear();\r\n        let datos = {\r\n            Cliente: cliente,\r\n            Contrato: busqueda,\r\n            mes: mes,\r\n            a_no: anio,\r\n            usuario: idUsuario\r\n        };\r\n        let result = await service.buscarPorContrato(datos,String(token));\r\n        let data = result.data.Mensaje;\r\n        setCuentasPapas(result.data.Papas);\r\n        let isArray = Array.isArray(data);\r\n        if (isArray) {\r\n            return data;\r\n        } else {\r\n            let message = String(data);\r\n            throw new Error(message);\r\n        }\r\n    }catch (error) {\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function buscarPorMedidor(busqueda:string){\r\n    try{\r\n        let { cliente,token } = obtenerDatosCliente();\r\n        let mes = date.getMonth() + 1;\r\n        let anio = date.getFullYear();\r\n        let idUsuario = getIdUsuario();\r\n        let datos = {\r\n            Cliente: cliente,\r\n            Contrato: busqueda,\r\n            mes: mes,\r\n            a_no: anio,\r\n            usuario: idUsuario\r\n        };\r\n        let result = await service.buscarPorMedidor(datos,String(token));\r\n        let data = result.data.Mensaje;\r\n        setCuentasPapas(result.data.Papas);\r\n        console.log(result.data.Papas);\r\n        let isArray = Array.isArray(data);\r\n        if (isArray) {\r\n            return data;\r\n        } else {\r\n            let message = String(data);\r\n            throw new Error(message);\r\n        }\r\n    }catch(error){\r\n        throw conectionError(error);\r\n    }\r\n}\r\nfunction verificarDatosCoutaFija( consumoData: string ){\r\n    //NOTE: Verificamos que el consumo sea valido\r\n    let consumo = parseInt(consumoData);\r\n    if(!isNaN(consumo)){\r\n        if(consumo < 0 ){\r\n            throw LecturaMenor;\r\n        }else{\r\n            return true;\r\n        }\r\n    }else{\r\n        throw LecturaNull;\r\n    }\r\n}\r\nexport async function guardarCuotaFija(data:any){\r\n    try{\r\n        //NOTE: Verificamos los datos del consumo\r\n        if( verificarDatosCoutaFija(data.Consumo)){\r\n            //Enviamo los datoa a la API\r\n            let basicData = obtenerDatosCliente();\r\n            let token = basicData.token;\r\n            //NOTE: damos formato a los datos en la interfaz\r\n            let result = await service.capturarCoutaFija(data,String(token));\r\n            if(result.data.Code == 200){\r\n                return true;\r\n            }else if(result.data.Code == 404){\r\n                throw noRowSelect;\r\n            }else if(result.data.Code == 423){\r\n                throw mesMayor;\r\n            }else if(result.data.Code == 424){\r\n                throw mesRegistrado;\r\n            }\r\n        }\r\n    }catch(error){\r\n        throw conectionError(error);\r\n    }\r\n\r\n}\r\nexport async function obtenerDatosCorte(){\r\n    try {\r\n        let { cliente,token } = obtenerDatosCliente(); \r\n        let padron = getContratoCorte();\r\n        let Usuario = getIdUsuario();\r\n        let datos = {\r\n            'Padron': padron,\r\n            'Cliente': cliente,\r\n            'Usuario': Usuario\r\n        };\r\n        let result = await service.obtenerDatosContratoCorte(datos,String(token));\r\n        let DatosContrato = [];\r\n        if( result.data.code == 200 ){\r\n            DatosContrato.push(result.data.Mensaje[0]);\r\n            DatosContrato.push(result.data.Usuario[0]);\r\n            console.log(DatosContrato);\r\n            return DatosContrato;\r\n        }else if ( result.data.code == 403 ){\r\n            throw errorCarga;\r\n        }else if ( result.data.code == 404 ){\r\n            throw noRowSelect;\r\n        }\r\n    }catch(error){\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function RealizarCorteAPI( datos: {Evidencia:any,Motivo:string, Padron: number, Persona:number, Estado: number, Usuario: number, Longitud:string, Latitud: string, Ejercicio: number} ){\r\n    try {\r\n        let { cliente, token } = obtenerDatosCliente();\r\n        let datosCorte = {\r\n            Cliente: cliente,\r\n            Motivo: datos.Motivo,\r\n            Padron: datos.Padron,\r\n            Persona: datos.Persona,\r\n            Usuario: datos.Usuario,\r\n            Estado: datos.Estado,\r\n            Longitud:datos.Longitud,\r\n            Latitud: datos.Latitud,\r\n            Ejercicio: datos.Ejercicio,\r\n            Evidencia:datos.Evidencia\r\n        };\r\n        let resultCorte = await service.realizarCorteTomaSuinpac( datosCorte, String(token));\r\n        if(resultCorte.data.Code == 200){\r\n            return (\"OK\");\r\n        }else if(resultCorte.data.Code == 206){\r\n            throw errorImagenes;\r\n        }else if(resultCorte.data.Code == 400){\r\n            let jsonError = JSON.parse(resultCorte.data.Mensaje);\r\n            throw new Error(`Error ${jsonError.Code}:\\n${jsonError.Mensaje}`);\r\n        }\r\n    }catch( error ){\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function ListaCortes(Mes: string, Anio: number){\r\n    try{\r\n        let { cliente ,idUsuario, token } = obtenerDatosCliente();\r\n        let data = {\r\n            \"Cliente\": cliente,\r\n            \"Usuario\": idUsuario,\r\n            \"Ejercicio\": Anio,\r\n            \"Mes\": Mes\r\n        };\r\n        let cortes = await service.listarCortesUsuario( data,String(token) );\r\n        if(cortes.data.Code == 200){\r\n            return cortes.data.Mensaje;\r\n        }else if(cortes.data.Code == 404){\r\n            throw noRowSelect;\r\n        }\r\n    }catch(error){\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function ContratosListaContratoReporte( contrato: string ){\r\n    try{\r\n        let { cliente, token } = obtenerDatosCliente();\r\n        let datos = {\r\n            Cliente: cliente,\r\n            Contrato: contrato \r\n        };\r\n        let result = await service.buscarContratoReporte(datos,String(token));\r\n        if(result.data.Code == 200){\r\n            //NOTE: retornamos la lista de los contratos\r\n            return result.data.Mensaje;\r\n        }else{\r\n            //Error del servidor\r\n        }\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\nexport async function guardarReporteV2 (Reporte:any){\r\n    try{\r\n        let { cliente , token, idUsuario } = obtenerDatosCliente();\r\n        console.log(token);\r\n        let datos = {\r\n            'Padron': Reporte.Padron,\r\n            'Cliente':cliente,\r\n            'Calle':Reporte.Calle,\r\n            'Colonia':Reporte.Colonia,\r\n            'Numero':Reporte.Numero,\r\n            'Descripcion':Reporte.Descripcion,\r\n            'Latitud':Reporte.Latitud,\r\n            'Longitud':Reporte.Longitud,\r\n            'Usuario':idUsuario,\r\n            'Fotos':Reporte.Fotos,\r\n            'FallaAdministrativa':Reporte.FallaAdministrativa,\r\n            'Estatus':Reporte.Estatus\r\n        }\r\n        let result = await service.realizarReporteContrato(datos, String(token));\r\n        if( result.data.Mensaje.Code == 200 ){\r\n            return true;\r\n        }else if( result.data.Mensaje.Code == 423 ){\r\n            throw errorImagenes;\r\n        }else if( result.data.Mensaje.Code == 403 ){\r\n            throw ErrorInsertar;\r\n        }\r\n        return result.data.Mensaje;\r\n    }catch(error){\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function buscarMedidorSinFiltro( clave:string ){\r\n    try{\r\n        let { cliente,token } = obtenerDatosCliente();\r\n        let datos = {\r\n            'Cliente': cliente,\r\n            'Contrato': clave\r\n        };\r\n        let result = await service.realizarReporteMedidor(datos,String(token));\r\n        console.log(result.data);\r\n        if( result.data.Code == 200 ){\r\n            return result.data.Mensaje;\r\n        }else{\r\n            //NOTE: manejador de errores\r\n            \r\n        }\r\n    }catch( error ){\r\n        throw conectionError(error);\r\n    }\r\n}\r\nexport async function configuracionCuotaFija(  ){\r\n    try{\r\n        let { cliente, token } = obtenerDatosCliente();\r\n        let datos = {\r\n            'Cliente':cliente\r\n        };\r\n        let rawConfiguracion = await service.obtenerConfiguracion(datos,String(token));\r\n        console.log(rawConfiguracion.data);\r\n        return rawConfiguracion.data.Configuracion;\r\n    }catch(error){\r\n        throw conectionError( error );\r\n    }\r\n}","import axios from 'axios'\r\nimport { returnUpBackOutline } from 'ionicons/icons';\r\nexport class APIservice {\r\n    //llamada a la api en la\r\n    getAuth(data: object) {\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/login-presidentePrueba`, data)\r\n    }\r\n    verificarUsuarioLecturista(data: object, token: string) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/verificarUsuarioLecturistaPrueba`, data, { headers });\r\n    }\r\n    buscarSectores(data: object, token: string) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post('https://api.servicioenlinea.mx/api-movil/buscarSectores', data, { headers })\r\n    }\r\n    buscarLecturasPorSector(data: object, token: string) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/datosLecturaPorSector`, data, { headers });\r\n    }\r\n    extraesDatosLectura(data: object, token: string) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post('https://api.servicioenlinea.mx/api-movil/extrarDatosLecturaPrueba', data, { headers })\r\n    }\r\n    guardarDatosLectura(data: object, token: string) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/guardarDatosLecturaPrueba`, data, { headers })\r\n    }\r\n    extraerHistorial(data: object, token: string) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerHistorialPrueba`, data, { headers });\r\n    }\r\n    extraerDatoseditar(data: object, token: string) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerDatosEditarPrueba`, data, { headers });\r\n    }\r\n    actualizarDatosLectura(data: object, token: string) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/actualizarRegistroPrueba`, data, { headers });\r\n    }\r\n    crearReporte(data: object, token: string) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/crearReportePrueba`, data, { headers });\r\n    }\r\n    extraerHistorialReportes(data: object, token: string) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/listaReportes`, data, { headers });\r\n    }\r\n    extraerReporte(data: object, token: string) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerReporte`, data, { headers });\r\n    }\r\n    extraerContribuyente(data: object, token: string) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/datosLecturaAguaPrueba`, data, { headers });\r\n    }\r\n    extraerNumeroItems(data: object, token: String) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/paginas`, data, { headers });\r\n    }\r\n    extraerPromedioContribuyente(data: object, token: string) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/obtenerConsumoPromedio`, data, { headers });\r\n    }\r\n    obtenerLogoCliente(data: object, token: string) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerLogo`, data, { headers });\r\n    }\r\n    extraerContactoContribuyente(data: object, token: string) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/extraerContribuyente`, data, { headers });\r\n    }\r\n    guardarContribuyente(data: object, token: string) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/guardarContribuyente`,data,{headers});\r\n    }\r\n    extraerNumeroItemsBusqueda(data: object,token:string){\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/paginasBusqueda`,data,{headers});\r\n    }\r\n    obtenerContribuyenteInspeccion(data:object, token:string){\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/inspeccionContribuyente`,data,{headers});\r\n    }\r\n    obtenerDatosContribuyentePorPadron(data: object,token:String){\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/obtenerPadronContribyenteDatos`,data,{headers})\r\n    }\r\n    obtenerDatosSectorPalabraClave(data: object,token: String){\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(\"https://api.servicioenlinea.mx/api-movil/buscarSectorPalabraClave\",data,{headers});\r\n    }\r\n    obtenerNumeroItemsBusquedaSector(data:object,token: String){\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(\"https://api.servicioenlinea.mx/api-movil/paginasBusqueaSector\",data,{headers});\r\n    }\r\n    obtenerPromedioEditar(data:object,token:String){\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(\"https://api.servicioenlinea.mx/api-movil/ObtenerPromedioEditar\",data,{headers});\r\n    }\r\n    buscarPorContrato(data:object,token:string){\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/buscarPorContrato`,data,{headers})\r\n    }\r\n    buscarPorMedidor(data:object,token:string){\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/buscarPorMedidor`,data,{headers})\r\n    }\r\n    capturarCoutaFija(data:object,token:string){\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/consumo`,data,{headers})\r\n    }\r\n    obtenerDatosContratoCorte( data: object, token: string){\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/DatosTomaCorte`,data,{headers});\r\n    }\r\n    realizarCorteTomaSuinpac( data: object ,token: string ){\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/RealizarCorte`,data,{headers});\r\n    }\r\n    listarCortesUsuario( data:object, token:string ){\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/listaCortes`,data,{headers});\r\n    }\r\n    buscarContratoReporte( data:object, token:string ){\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/ReporteBuscarContrato`,data,{headers});\r\n    }\r\n    realizarReporteContrato( data: object, token:string ) {\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/crearReporteV2`,data,{headers});\r\n    }\r\n    realizarReporteMedidor( data:object, token:string ){\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        }\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/ReporteBuscarMedidor`, data , {headers});\r\n    }\r\n    obtenerConfiguracion( data:object, token:string ){\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        };\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/ConfiguracionCoutaFija`,data,{headers});\r\n    }\r\n    obtenerConfiguracionFotografia( data:object, token:string ){\r\n        let headers = {\r\n            'Content-type': 'application/json',\r\n            'Authorization': 'Bearer' + token\r\n        };\r\n        return axios.post(`https://api.servicioenlinea.mx/api-movil/AppAgua/ConfiguracionEvidencia`,data,{headers});\r\n    }\r\n\r\n}\r\n\r\n","import { IonAlert, IonButton, IonCard, IonCheckbox, IonContent, IonHeader, IonImg, IonInput, IonItem, IonLabel, IonLoading, IonPage, IonTitle, IonToolbar, useIonViewWillEnter } from '@ionic/react';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Plugins } from '@capacitor/core'\r\nimport './Home.css';\r\nimport { Login, obtenerLogo, solicitarPermisos, } from '../controller/apiController';\r\nimport { restoreUser,clearState } from '../controller/storageController';\r\nconst { SplashScreen } = Plugins\r\nconst Home: React.FC = () => {\r\n  const history = useHistory();\r\n  const [User, setUserName] = useState('');\r\n  const [passwors, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [remember, setRemember] = useState(false);\r\n  useEffect(() => {\r\n    SplashScreen.hide();\r\n    handleRequestPermissions();\r\n    recordarCredenciales();\r\n  }, [])\r\n  useIonViewWillEnter(clearState)\r\n  const recordarCredenciales = async () => {\r\n    let user = restoreUser();\r\n    if (user.pass != null && user.user != null) {\r\n      setUserName(user.user);\r\n      setPassword(user.pass);\r\n      setRemember(user.remember);\r\n    }\r\n  }\r\n  const handleBtnLoginPress = () => {\r\n    setLoading(true)\r\n    validateUserData();\r\n  }\r\n  const validateUserData = async () => {    \r\n    if (User != \"\" && passwors != \"\" && User != null && passwors != null) {\r\n      try {\r\n        setTimeout(() => {\r\n          if (loading) {\r\n            throw new Error(\"Tiempo de espera agotado.\");\r\n          }\r\n        }, 8000)\r\n        await Login(User, passwors, remember)\r\n          .then(async (result) => {\r\n            await obtenerLogo();\r\n            history.replace('./form-datos-toma.page');\r\n          })\r\n          .catch((err) => {\r\n            setMessage(err.message);\r\n          })\r\n          .finally(() => { setLoading(false) })\r\n      } catch (err) {\r\n        setMessage(err.message);\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setLoading(false);\r\n      setMessage(\"Campos vacios\")\r\n    }\r\n  }\r\n  const handleRequestPermissions = async () => {\r\n    await solicitarPermisos().then((result) => {\r\n      console.log(result)\r\n    })\r\n  }\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar color=\"danger\" >\r\n          <IonTitle>Inicio de sessión</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent fullscreen>\r\n        <IonCard class=\"ion-text-center\" className=\"box\">\r\n          <IonImg src={\"../assets/Imagenes/Logo_suinpac.jpeg\"}></IonImg>\r\n          <IonItem className=\"input\">\r\n            <IonInput type=\"text\" placeholder=\"Usuario\" onIonChange={e => setUserName(e.detail.value!)} value={User}>\r\n            </IonInput>\r\n          </IonItem>\r\n          <IonItem className=\"input\">\r\n            <IonInput type=\"password\" placeholder=\"Contraseña\" onIonChange={e => setPassword(e.detail.value!)} value={passwors}>\r\n            </IonInput>\r\n          </IonItem>\r\n          <IonItem class=\"ion-text-center\">\r\n            <IonCheckbox slot=\"start\" color=\"primary\" checked={remember} onIonChange={e => setRemember(e.detail.checked)}></IonCheckbox>\r\n            <IonLabel>Recordar Usuario y Contraseña</IonLabel>\r\n          </IonItem>\r\n          <IonButton color=\"danger\" onClick={handleBtnLoginPress} className=\"input button\">INICIAR SESSIÓN</IonButton>\r\n        </IonCard>\r\n        <IonLoading\r\n          cssClass=\"my-custom-class\"\r\n          isOpen={loading}\r\n          onDidDismiss={() => setLoading(false)}\r\n          message=\"Por favor espere\"\r\n        />\r\n        <IonAlert\r\n          cssClass=\"my-custom-class\"\r\n          header={\"ERROR\"}\r\n          message={message}\r\n          isOpen={message.length > 0}\r\n          onDidDismiss={() => { setMessage('') }}\r\n        />\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Home;","\r\nimport './left-menu.css';\r\nimport { create, logOut, reader, water, cutOutline, timerOutline, construct } from 'ionicons/icons'\r\nimport { IonMenu, IonContent, IonImg, IonItemDivider, IonMenuToggle, IonRouterOutlet, IonItem, IonLabel, IonIcon, IonSpinner } from '@ionic/react'\r\nimport { useEffect, useState } from 'react';\r\nimport { RouteComponentProps, useHistory } from 'react-router-dom'\r\nimport { cerrarSesion, getLogoStorage} from '../controller/storageController'\r\ninterface ContainerProps { }\r\n\r\nconst MenuLeft: React.FC<ContainerProps> = () => {\r\n    const history = useHistory();\r\n    let [selectedIndex, setSelectedIndex] = useState(-1);\r\n    const [logo,setLogo] = useState(\"\");\r\n    useEffect(()=>{\r\n\r\n    },[])\r\n    const appPages = [\r\n        {\r\n            title: 'Toma de agua',\r\n            selects: ['form-datos-toma.page','datos-contribuyente.page'],\r\n            icon: water,\r\n            path: '/form-datos-toma.page'\r\n        }, {\r\n            title: 'Historial de lecturas',\r\n            selects: ['historial-lecturas.page','editar-lecturas-agua.page'],\r\n            icon: reader,\r\n            path: '/historial-lecturas.page'\r\n        }, {\r\n\r\n            title: 'Reportes',\r\n            selects: ['ContratosReportes','reportes.page'],\r\n            path: '/ContratosReportes',\r\n            icon: construct\r\n        },\r\n        /*{\r\n            title: 'Historial reportes',\r\n            selects: ['historial-reportes.page', 'detalles-reportes.page'],\r\n            path: '/historial-reportes.page',\r\n            icon: newspaper\r\n        },*/\r\n        {\r\n            title: 'Cortes',\r\n            selects: ['buscar-contrato','realizar-corte'],\r\n            path: '/buscar-contrato',\r\n            icon: cutOutline\r\n        },\r\n        {\r\n            title: 'Historial Cortes',\r\n            selects: ['buscar-corte'],\r\n            path: '/buscar-corte',\r\n            icon: timerOutline\r\n        },\r\n        /*{\r\n            title: 'Inspecciones',\r\n            selects: ['inspeccciones.page'],\r\n            path: '/inspeccciones.page',\r\n            icon: newspaper\r\n        },*/\r\n        {\r\n            title: 'Salir',\r\n            selects: ['inicio-de-sesion.page'],\r\n            icon: logOut\r\n        },\r\n    ];\r\n    useEffect(() => {\r\n        itemSelected();\r\n        cargarLogo();\r\n    });\r\n    \r\n    const itemSelected = () => {\r\n        let dir = window.location.pathname.toString().split(\"/\")[1];\r\n        let selected = false;\r\n        if (dir != undefined) {\r\n            appPages.map((item, pageIndex) => {\r\n                item.selects.map((item, index) => {\r\n                    if (item == dir) {\r\n                        console.log(item);\r\n                        setSelectedIndex(pageIndex);\r\n                        selected = true;\r\n                    }\r\n                })\r\n            })\r\n            if (!selected) {\r\n                setSelectedIndex(0);\r\n            }\r\n        }\r\n    }\r\n    const btnSelected = (dir: any) => {\r\n        if (dir.title == 'Salir') {\r\n            cerrarSesion()\r\n                .then((result) => {\r\n                    history.replace(\"/home\")\r\n                })\r\n        } else {\r\n            history.replace(dir.path);\r\n        }\r\n    }\r\n    const cargarLogo = async ()=>{\r\n        if(logo == \"\"){\r\n            await getLogoStorage().then((result)=>{\r\n                setLogo(String(result));\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <IonMenu side=\"start\" menuId=\"first\" contentId=\"main-content\" >\r\n            <IonContent >\r\n                    <div className = \"center\">\r\n                        {   logo != \"\" ? \r\n                            <IonImg  src= {\"data:image/png;base64,\"+logo}/* \"../assets/Imagenes/Logo recortado.png\" */></IonImg> : \r\n                            <IonSpinner className = \"spinerItem\" color = \"danger\" name = \"lines\"></IonSpinner>}\r\n                    </div>\r\n                    <IonItemDivider className=\"menuLeft\" />\r\n                    <IonMenuToggle  >\r\n                        {\r\n                            appPages.map((item, index) => {\r\n                                return <IonItem key={index} button={true} className={index == selectedIndex ? \"selected\" : \"\"} onClick={() => { btnSelected(item) }}>\r\n                                    <IonLabel>{item.title}</IonLabel>\r\n                                    <IonIcon slot=\"start\" ios={item.icon + \"-outline\"} md={item.icon + \"-sharp\"} color=\"blue\"></IonIcon>\r\n                                </IonItem>\r\n                            })\r\n                        }\r\n                    </IonMenuToggle>\r\n                    <IonItemDivider />\r\n                </IonContent>\r\n            </IonMenu>\r\n            <IonRouterOutlet id = \"main-content\"></IonRouterOutlet>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuLeft;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  IonPage,\r\n  IonHeader,\r\n  IonTitle,\r\n  IonToolbar,\r\n  IonContent,\r\n  IonItem,\r\n  IonButtons,\r\n  IonMenuButton,\r\n  IonCard,\r\n  IonCardHeader,\r\n  IonLabel,\r\n  IonSelect,\r\n  IonAlert,\r\n  IonSelectOption,\r\n  IonCardContent,\r\n  IonItemDivider,\r\n  IonList,\r\n  IonLoading,\r\n  IonButton,\r\n  IonInput,\r\n  IonIcon,\r\n  IonGrid,\r\n  IonRow,\r\n  IonCol,\r\n  useIonViewWillEnter,\r\n  IonNote,\r\n  useIonViewWillLeave,\r\n  \r\n} from \"@ionic/react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport \"./form-datos-toma.page.css\";\r\nimport MenuLeft from '../../components/left-menu';\r\nimport { buscarSectores, lecturasPorSectorPage, solicitarPermisos, verifyCameraPermission, verifyGPSPermission, obtenerContribuyente, obtenerTotalDatosSectores, obtenerTotalDatosBusqueda,buscarContrato,buscarPorMedidor, configuracionCuotaFija} from '../../controller/apiController';\r\nimport { getUsuario, guardarDatosLectura, cerrarSesion, verifyingSession, setContribuyenteBuscado, setPuntero, getPuntero, getNumeroPaginas, setNumeroPaginas, getClienteNombreCorto, setSector, getSector, getPunteroBusqueda, getPaginasBusqueda, setPunteroBusqueda, setPaginasBusqueda,getCuentasPapas } from '../../controller/storageController';\r\nimport { searchCircle, arrowForwardOutline, arrowBackOutline, cogSharp, server } from 'ionicons/icons'\r\nimport { Console } from \"node:console\";\r\nconst FormDatosTomaPage: React.FC = () => {\r\n  const history = useHistory();\r\n  const [user, setUser] = useState('');\r\n  const [sectores, setSectores] = useState<any[]>([]);\r\n  const [message, setMessage] = useState('');\r\n  const [idSector, setIdSector] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [lecturas, setLecuras] = useState<any[]>([])\r\n  const [typeErro, setTypeError] = useState('');\r\n  const [permissions, setPermissons] = useState(true);\r\n  const [hideAlertButons, setHideAlertbuttons] = useState(false);\r\n  const [block, setBlock] = useState(false);\r\n  const [tipoMessage, setTipoMessage] = useState(\"Mensaje\");\r\n  const [tokenExpired, setTokenExpired] = useState(false);\r\n  const [textoBusqueda, setTextoBusqueda] = useState(String);\r\n  const [serched, setSerched] = useState(false);\r\n  const [paginas, setPaginas] = useState(Number);\r\n  const [showPagination, setShowPagination] = useState(false);\r\n  const [nombreCliente, setNombreCliente] = useState(String);\r\n  const [busqueda, setBusqueda] = useState(false);\r\n  const [filtro,setFiltro] = useState(1);\r\n  const [placeHolder,setPlaceHolder] = useState(\"Buscar por contrato\");\r\n  const alertButtons = [\r\n    {\r\n      text: \"Reintentar\", handler: () => {\r\n        setMessage(\"\");\r\n        typeErro == \"sectores\" ? cargarSectores() : buscarPorSector(idSector);\r\n      }\r\n    },\r\n    {\r\n      text: \"Cancelar\", handle: () => {\r\n        setMessage(\"\");\r\n      }\r\n    }\r\n  ]\r\n  const [activarMenu,setActivarMenu] = useState(true);\r\n  const isSessionValid = async () => {\r\n    let valid = verifyingSession();\r\n    setTokenExpired(!valid);\r\n    setBlock(!valid);\r\n    let nombreCorto = await getClienteNombreCorto();\r\n    setNombreCliente(String(nombreCorto));\r\n  }\r\n\r\n  useEffect(() => { isSessionValid() }, []);\r\n  useEffect(() => { tokenExpired ? logOut(tokenExpired) : prepararPantalla() }, [tokenExpired])\r\n\r\n  const logOut = (valid: boolean) => {\r\n    if (valid) {\r\n      setTipoMessage(\"Sesión no valida\");\r\n      setMessage(\"Inicie sesión por favor\\nRegresando...\");\r\n      setHideAlertbuttons(true);\r\n      setTimeout(async () => {\r\n        setTipoMessage('Error');\r\n        setMessage('');\r\n        await cerrarSesion()\r\n          .then((result) => {\r\n            history.replace(\"/home\")\r\n          })\r\n      }, 2500);\r\n    }\r\n  }\r\n  const prepararPantalla = async () => {\r\n    await solicitarPermisos()\r\n      .then(async (err) => {\r\n        let camera = await verifyCameraPermission();\r\n        let gps = await verifyGPSPermission();\r\n        if (camera && gps) {\r\n          let storageUser = getUsuario();\r\n          setUser(storageUser + \"\");\r\n          cargarSectores();\r\n        } else {\r\n          setHideAlertbuttons(true);\r\n          setMessage(\"Debe otorgar permisos para usar la aplicación\");\r\n          setBlock(true)\r\n          setTimeout(() => {\r\n            history.replace(\"/home\")\r\n          }, 2500)\r\n        }\r\n      }).catch(() => {\r\n        //Quitar antes de la vercion final (solo sirve en web)\r\n        let storageUser = getUsuario();\r\n        setUser(storageUser + \"\");\r\n        cargarSectores()\r\n      })\r\n    /**\r\n   * Activar el metodo solo para la version web de prueba\r\n   */\r\n\r\n    //setMessage(\"EL IOIOA\")\r\n  }\r\n  const cargarSectores = async () => {\r\n    await buscarSectores()\r\n      .then(result => setSectores(result))\r\n      .catch(err => {\r\n        let errorMessage = String(err.message);\r\n        let sessionValid = errorMessage.includes(\"Sesion no valida\");\r\n        setTokenExpired(sessionValid);\r\n        setIdSector(\"\");\r\n        if (!sessionValid) {\r\n          setMessage(err.message)\r\n          setTypeError(\"sectores\")\r\n        }\r\n      })\r\n  }\r\n  useIonViewWillEnter(()=>{setActivarMenu(true)});\r\n  useIonViewWillLeave(()=>{setActivarMenu(false)});\r\n  const buscarPorSector = async (idSector:string) => {\r\n    setBusqueda(false)\r\n    setLoading(true);\r\n    await obtenerTotalDatosSectores(idSector).then((result) => {\r\n      console.log(result);\r\n      setNumeroPaginas(parseInt(result + \"\"))\r\n      setPaginas(parseInt(result + \"\"));\r\n      setPuntero(0)\r\n    })\r\n    await lecturasPorSectorPage(idSector, 0)\r\n      .then((result) => {\r\n        setShowPagination(true);\r\n        setLecuras(result);\r\n        setSerched(false)\r\n        setPuntero(0);\r\n      })\r\n      .catch((err) => {\r\n        setLecuras([]);\r\n        let errorMessage = String(err.message);\r\n        let expired = errorMessage.includes(\"Sesion no valida\");\r\n        setTokenExpired(expired);\r\n        if (!expired) {\r\n          setHideAlertbuttons(true)\r\n          setTypeError(\"Mensaje\");\r\n          setMessage(err.message)\r\n        }\r\n      })\r\n      .finally(() => { setLoading(false) })\r\n  }\r\n  const abrirCapturaDatos = async (idLectura: string, contribuyente: string, contratoVigente: string, medidor: string,metodo:number,esPapa:boolean) => {\r\n    if(!esPapa){\r\n      if( metodo != 1 ){\r\n        setContribuyenteBuscado(serched);\r\n        let result = guardarDatosLectura(idLectura, contribuyente, contratoVigente, medidor);\r\n        if (result === true) {\r\n          //Redireccion a toma de lectura\r\n          history.push('/captura-de-lectura.page');\r\n          setHideAlertbuttons(true);\r\n        }\r\n      }else{\r\n        //INDEV: obtenemo la configuracion de los clie \r\n        await configuracionCuotaFija()\r\n        .then((result)=>{\r\n            //NOTE: si el valor del result es 1 se inserta\r\n            if(result == \"1\"){\r\n              let result = guardarDatosLectura(idLectura, contribuyente, contratoVigente, medidor);\r\n              if(result === true){\r\n                history.push('/captura-de-lectura.page');\r\n                setHideAlertbuttons(true);\r\n              }\r\n            }else{              \r\n              setHideAlertbuttons(true);\r\n              setTipoMessage(\"Mensaje\");\r\n              setMessage(\"Temporalmente deshabilitado\");   \r\n            }\r\n        })\r\n        .catch((error)=>{\r\n          //Mandamos un error al usuario\r\n        })\r\n      }\r\n     }\r\n  }\r\n  const buscarPalabraClave = async () => {\r\n\r\n    if(idSector == \"\"){\r\n      setBusqueda(true);\r\n      setLecuras([]);\r\n      setShowPagination(true);\r\n      setLoading(true);\r\n      await obtenerTotalDatosBusqueda(textoBusqueda,\"-1\").then((result) => {\r\n        let paginas = parseInt(String(result));\r\n        setPunteroBusqueda(0);\r\n        setPaginasBusqueda(paginas);\r\n        setPaginas(paginas);\r\n      });\r\n      await obtenerContribuyente(textoBusqueda,0,\"-1\").then((result) => {\r\n        console.log(result);\r\n        setSerched(true);\r\n        setLecuras(result);\r\n      }).catch((err) => {\r\n        setLecuras([]);\r\n        let errorMessage = String(err.message);\r\n        let sessionValid = errorMessage.includes(\"Sesion no valida\");\r\n        if (!sessionValid) {\r\n          setHideAlertbuttons(true);\r\n          setTipoMessage(\"ERROR\");\r\n          setMessage(errorMessage);\r\n        } else {\r\n          setTokenExpired(true);\r\n        }\r\n      }).finally(() => { setLoading(false) });\r\n    }else{\r\n      console.log(\"Busqueda por sector\");\r\n      handleBuscarSectorParablaClave();\r\n    }\r\n  }\r\n  const handleInputSerh = (texto: string) => {\r\n    setTextoBusqueda(texto);\r\n  }\r\n  const handleNextPage = () => {\r\n    setLoading(true);\r\n    let puntero = getPuntero();\r\n    setPuntero(puntero + 1);\r\n    puntero++;\r\n    let pages = getNumeroPaginas();\r\n    let itemIndex = 0;\r\n    if (puntero >= pages) {\r\n      setPuntero(0);\r\n      puntero = 0;\r\n      itemIndex = puntero * 20;\r\n    } else {\r\n      itemIndex = puntero * 20;\r\n    }\r\n    console.log(itemIndex, idSector);\r\n    punteroBuscarPorSector(itemIndex, idSector);\r\n  }\r\n  const handlePreviousPage = () => {\r\n    let puntero = getPuntero();\r\n    if (puntero - 1 < 0) {\r\n      puntero = getNumeroPaginas() - 1;\r\n      setPuntero(puntero);\r\n    } else {\r\n      setPuntero(puntero - 1);\r\n      puntero--;\r\n    }\r\n    let pages = getNumeroPaginas();\r\n    let itemIndex = (puntero * 20);\r\n    punteroBuscarPorSector(itemIndex, idSector);\r\n  }\r\n  const punteroBuscarPorSector = async (offset: number, sector: string) => {\r\n    setBusqueda(false);\r\n    setLoading(true);\r\n    await lecturasPorSectorPage(sector, offset)\r\n      .then((result) => {\r\n        setLecuras(result);\r\n        setSerched(false)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        setLecuras([]);\r\n        let errorMessage = String(err.message);\r\n        let expired = errorMessage.includes(\"Sesion no valida\");\r\n        setTokenExpired(expired);\r\n        if (!expired) {\r\n          setHideAlertbuttons(true)\r\n          setTypeError(\"Mensaje\");\r\n          setMessage(err.message)\r\n        }\r\n      })\r\n      .finally(() => { setLoading(false) })\r\n  }\r\n  const handleSector = (sector: string) => {\r\n    setIdSector(sector);\r\n    setSector(sector);\r\n    buscarPorSector(sector);\r\n\r\n  }\r\n  const handleNextPageBusqueda = () => {\r\n    setLoading(true); \r\n    let puntero = getPunteroBusqueda();\r\n    setPunteroBusqueda(puntero + 1);\r\n    puntero++;\r\n    let pages = getPaginasBusqueda()\r\n    let itemIndex = 0;\r\n    if (puntero >= pages) {\r\n      setPunteroBusqueda(0);\r\n      puntero = 0;\r\n      itemIndex = puntero * 20;\r\n    } else {\r\n      itemIndex = puntero * 20;\r\n    }\r\n    console.log(itemIndex, textoBusqueda);\r\n    punteroBuscarPorClave(itemIndex);\r\n  }\r\n  const handlePreviousPageBusqueda = () => {\r\n    setLoading(true);\r\n    let puntero = getPunteroBusqueda();\r\n    if (puntero - 1 < 0) {\r\n      puntero = getPaginasBusqueda() - 1;\r\n      setPunteroBusqueda(puntero);\r\n    } else {\r\n      setPunteroBusqueda(puntero - 1);\r\n      puntero--;\r\n    }\r\n    let itemIndex = (puntero * 20);\r\n    console.log(itemIndex, textoBusqueda);\r\n    punteroBuscarPorClave(itemIndex);\r\n  }\r\n  const punteroBuscarPorClave = async (offset: number) => {\r\n      setBusqueda(true);\r\n      await obtenerContribuyente(textoBusqueda,offset,\"-1\").then((result) => {\r\n        setSerched(true);\r\n        setLecuras(result);\r\n      }).catch((err) => {\r\n        let errorMessage = String(err.message);\r\n        let sessionValid = errorMessage.includes(\"Sesion no valida\");\r\n        if (!sessionValid) {\r\n          setHideAlertbuttons(true);\r\n          setTipoMessage(\"Mensaje\");\r\n          setMessage(errorMessage);\r\n        } else {\r\n          setTokenExpired(true);\r\n        }\r\n      }).finally(() => { setLoading(false) });\r\n  }\r\n  const handleCancelSector = () =>{\r\n    setIdSector(\"\");\r\n  }\r\n  const handleBuscarSectorParablaClave = async () =>{\r\n    setBusqueda(true);\r\n    setLecuras([]);\r\n    setShowPagination(true);\r\n    setLoading(true);\r\n    await obtenerTotalDatosBusqueda(textoBusqueda,idSector).then((result) => {\r\n      let paginas = parseInt(String(result));\r\n      setPunteroBusqueda(0);\r\n      setPaginasBusqueda(paginas);\r\n      setPaginas(paginas);\r\n    });\r\n    await obtenerContribuyente(textoBusqueda,0,idSector).then((result) => {\r\n      console.log(result);\r\n      setSerched(true);\r\n      setLecuras(result);\r\n    }).catch((err) => {\r\n      setLecuras([]);\r\n      let errorMessage = String(err.message);\r\n      let sessionValid = errorMessage.includes(\"Sesion no valida\");\r\n      if (!sessionValid) {\r\n        setHideAlertbuttons(true);\r\n        setShowPagination(false);\r\n        setTipoMessage(\"Mensaje\");\r\n        setMessage(errorMessage);\r\n      } else {\r\n        setTokenExpired(true);\r\n      }\r\n    }).finally(() => { setLoading(false) });\r\n  }  \r\n  const handleCancelFiltro = () =>{\r\n    setFiltro(1);\r\n  }\r\n  const buscarFiltro = () =>{\r\n    if(filtro == 1){\r\n      porContrato();\r\n    }\r\n    if(filtro == 2){\r\n      porMedidor();\r\n    }\r\n    if(filtro == 3){\r\n    }\r\n  }\r\n  const porContrato = async () =>{\r\n    setBusqueda(true);\r\n    setLecuras([]);\r\n    setShowPagination(false);\r\n    setLoading(true);\r\n    console.log(zeroFill(textoBusqueda));\r\n    await buscarContrato(zeroFill(textoBusqueda))\r\n    .then(result =>{\r\n      setLecuras(result);\r\n    }).catch(err=>{\r\n      setLecuras([]);\r\n      let errorMessage = String(err.message);\r\n      let expired = errorMessage.includes(\"Sesion no valida\");\r\n      setTokenExpired(expired);\r\n      if (!expired) {\r\n        setHideAlertbuttons(true)\r\n        setTypeError(\"Mensaje\");\r\n        setMessage(err.message)\r\n      }\r\n    }).finally(\r\n     ()=>{setLoading(false);} \r\n    )\r\n  }\r\n  const porMedidor = async () =>{ \r\n    setBusqueda(true);\r\n    setLecuras([]);\r\n    setShowPagination(false);\r\n    setLoading(true);\r\n    console.log(zeroFill(textoBusqueda,10));\r\n    await buscarPorMedidor(zeroFill(textoBusqueda,10))\r\n    .then(result =>{\r\n      setLecuras(result);\r\n    }).catch(err=>{\r\n      setLecuras([]);\r\n      let errorMessage = String(err.message);\r\n      let expired = errorMessage.includes(\"Sesion no valida\");\r\n      setTokenExpired(expired);\r\n      if (!expired) {\r\n        setHideAlertbuttons(true)\r\n        setTypeError(\"Mensaje\");\r\n        setMessage(err.message)\r\n      }\r\n    }).finally(\r\n     ()=>{setLoading(false);} \r\n    )\r\n  }\r\n  const functionValidarLectura = (estatus: number, cobro:number) =>{\r\n    let leyendaCobro = \"\";\r\n    let result = [\"\",false];\r\n    if(cobro == 1){\r\n      leyendaCobro = \"Cuota Fija \";\r\n    }\r\n  switch(estatus){\r\n    case 1:\r\n      result = [ leyendaCobro + \"\",cobro == 1];\r\n    break;\r\n    case 2:\r\n     result = [leyendaCobro + \"\",cobro == 1];\r\n    break;\r\n    case 3:\r\n      result = [ leyendaCobro + \"Baja Temporal\",true];\r\n    break;\r\n    case 4:\r\n      result = [ leyendaCobro +  \"Baja Permanente\",true];\r\n    break;\r\n    case 5:\r\n      result = [ leyendaCobro + \"Inactivo\",true];\r\n    break;\r\n    case 6:\r\n      result = [ leyendaCobro +  \"Nueva\",true];\r\n    break;    \r\n    case 9:\r\n      result = [ leyendaCobro +  \"Sin Toma\",true];\r\n    break;\r\n    case 10:\r\n      result = [ leyendaCobro +  \"Multada\",true]\r\n    break;\r\n  }\r\n  return result;\r\n  }\r\n  function zeroFill( number:string,width:number = 9)\r\n{\r\n  while(number.length < width){\r\n    number = \"0\"+number;\r\n  }\r\n  return number;\r\n  }\r\n  const handleSelectFiltro = (filter: number) => {\r\n  setFiltro(filter); \r\n  if(filtro == 1){\r\n    setPlaceHolder(\"Buscar por Medidor\");\r\n  }\r\n  if(filtro == 2){\r\n    setPlaceHolder(\"Buscar por Contrato\");\r\n  }\r\n  }\r\n  return (\r\n    <IonPage>\r\n      {\r\n        activarMenu ? \r\n        <MenuLeft />: <></>\r\n      }\r\n      <IonHeader>\r\n        <IonToolbar color=\"danger\" >\r\n          <IonTitle>{`${user} - ${nombreCliente}`}</IonTitle>\r\n          <IonButtons slot=\"start\" className=\"btnMenu\">\r\n            <IonMenuButton ></IonMenuButton>\r\n          </IonButtons>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent>\r\n        <IonCard class=\"ion-text-center\" className=\"box\">\r\n          <IonCardHeader>\r\n            <div>\r\n              <h3>Lectura de agua potable</h3>\r\n              <IonLabel>Puedes realizar busquedas por:</IonLabel>\r\n              <p>Contrato y Medidor</p>\r\n              <br />\r\n            </div>\r\n            <IonGrid>\r\n            <IonRow>\r\n                <IonCol>\r\n                <IonItem>\r\n                  <IonLabel>Filtrar Por:</IonLabel>\r\n                <IonSelect onIonCancel = {handleCancelFiltro} value = {filtro} placeholder = \"Seleccione el filtro\" interface = \"action-sheet\" onIonChange = {e => {handleSelectFiltro(parseInt(e.detail.value+\"\"))}}>\r\n                    <IonSelectOption value={1} >Contrato</IonSelectOption>\r\n                    <IonSelectOption value={2} >Medidor</IonSelectOption>\r\n                  </IonSelect>\r\n                </IonItem>\r\n                </IonCol>\r\n              </IonRow>\r\n              <IonRow>\r\n                <IonCol size=\"9\">\r\n                  <IonItem>\r\n                    <IonInput type=\"number\" placeholder = {placeHolder} onIonChange={e => { handleInputSerh(String(e.detail.value)) }}></IonInput>\r\n                  </IonItem>\r\n                </IonCol>\r\n                <IonCol size=\"2\" class=\"btnSerch\">\r\n                  <IonButton color=\"danger\" size=\"large\" shape=\"round\" onClick={buscarFiltro}><IonIcon icon={searchCircle} color=\"light\" size=\"large\"></IonIcon></IonButton>\r\n                </IonCol>\r\n              </IonRow>\r\n              <IonItem>\r\n                <IonLabel className=\"center\" color=\"\">o seleccione un sector</IonLabel>\r\n              </IonItem>\r\n            </IonGrid>\r\n            <IonItem>\r\n              <IonLabel>Sectores</IonLabel>\r\n              <IonSelect\r\n                placeholder=\"Seleccionar uno\"\r\n                onIonChange={e => { handleSector(e.detail.value) }}\r\n                interface=\"action-sheet\"\r\n                disabled={block}\r\n                cancelText=\"Cancelar\"\r\n                value={idSector}\r\n              >\r\n                {\r\n                  sectores != null  ?\r\n                    sectores.map(function (item, index) {\r\n                      return <IonSelectOption key={index} value={item.id}>{item.Sector}</IonSelectOption>\r\n                    }) :\r\n                    <IonSelectOption disabled>\r\n                      Sin Sectores\r\n                    </IonSelectOption>\r\n                }\r\n              </IonSelect>\r\n            </IonItem>\r\n          </IonCardHeader>\r\n          <IonCardContent >\r\n            <IonItemDivider >\r\n              {showPagination ? <IonGrid>\r\n                <IonRow>\r\n                  <IonCol size=\"2\">\r\n                    <IonButton shape=\"round\" color=\"danger\" size=\"small\" onClick={busqueda ? handlePreviousPageBusqueda : handlePreviousPage} /* disabled={getPuntero() == 0} */>\r\n                      <IonIcon icon={arrowBackOutline} size=\"small\" ></IonIcon>\r\n                    </IonButton></IonCol>\r\n                  <IonCol size=\"8\"><IonLabel>Resultados: Pagina {busqueda ? getPunteroBusqueda() + 1 : getPuntero() + 1} de {paginas}</IonLabel></IonCol>\r\n                  <IonCol size=\"2\">\r\n                    <IonButton shape=\"round\" color=\"danger\" onClick={busqueda ? handleNextPageBusqueda : handleNextPage} /* disabled = {getPuntero()+1==getNumeroPaginas()} */>\r\n                      <IonIcon icon={arrowForwardOutline} size=\"small\" ></IonIcon>\r\n                    </IonButton>\r\n                  </IonCol>\r\n                </IonRow>\r\n              </IonGrid> : <IonLabel className=\"center\" class=\"ion-text-center\" >Mostrando Resultados</IonLabel>\r\n              }\r\n            </IonItemDivider>\r\n            <IonList >\r\n              {\r\n                lecturas.map(function (item, index) {\r\n                  let papas = getCuentasPapas();\r\n                  let arrayData = functionValidarLectura(parseInt(item.Estatus),parseInt(item.M_etodoCobro));\r\n                  let cuentaPapa = String(papas).includes(item.id);\r\n                  if(cuentaPapa){\r\n                    arrayData[0] += \"Desarrollo\";  \r\n                  }\r\n                  return <div className = { ( cuentaPapa || arrayData[1]) ? 'cuotaFija':''} key={index} onClick={() => {  abrirCapturaDatos(item.id, item.Contribuyente, item.ContratoVigente, item.Medidor,item.M_etodoCobro,cuentaPapa) }}>\r\n                    <IonItem detail={true} >\r\n                      <IonList>\r\n                        <IonLabel>{item.Contribuyente}</IonLabel>\r\n                        <p>Contrato: {item.ContratoVigente},\r\n                           Medidor: {item.Medidor}, \r\n                           Toma: {item.Toma}\r\n                           &nbsp;&nbsp;&nbsp;&nbsp;\r\n                           {\r\n                             (cuentaPapa || arrayData[1]) ? <IonNote style ={{fontsize: 20}} color=\"danger\">{arrayData[0]}</IonNote> :\"\"\r\n                           }\r\n                        </p>\r\n                      </IonList>\r\n                    </IonItem>\r\n                  </div>\r\n                })\r\n              }\r\n            </IonList>\r\n          </IonCardContent>\r\n        </IonCard>\r\n        <IonAlert\r\n          cssClass=\"my-custom-class\"\r\n          header={tipoMessage}\r\n          message={message}\r\n          isOpen={message.length > 0}\r\n          backdropDismiss={false}\r\n          buttons={hideAlertButons ? [{ text: \"Aceptar\", handler: () => { setMessage(\"\") } }] : alertButtons}\r\n        />\r\n        <IonLoading\r\n          cssClass=\"my-custom-class\"\r\n          isOpen={loading}\r\n          onDidDismiss={() => { setLoading(false); }}\r\n          message=\"Por favor espere\"\r\n        />\r\n        <IonAlert\r\n          cssClass=\"my-custom-class\"\r\n          header={\"ERROR\"}\r\n          message={'Para poder hacer uso de todas las funciones de la aplicaciòn por favor acepta los permisos solicitados por la misma'}\r\n          isOpen={!permissions}\r\n        />\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default FormDatosTomaPage;","import { useCamera, } from '@capacitor-community/react-hooks/camera';\r\nimport { CameraResultType, CameraSource} from '@capacitor/core';\r\nimport { Geolocation, Geoposition } from '@ionic-native/geolocation';\r\nexport function useTakePhoto( ) {\r\n  const { getPhoto } = useCamera();\r\n  const takePhoto = async () => {\r\n    const cameraPhoto = await getPhoto({\r\n      resultType: CameraResultType.Uri,\r\n      source: CameraSource.Camera,\r\n      quality: 50,\r\n    });\r\n    return cameraPhoto;\r\n  }\r\n  return {\r\n    takePhoto\r\n  }\r\n}\r\nexport async function generarFechas(anio: number) {\r\n  let result = new Array;\r\n  let listaMeses = new Array;\r\n  listaMeses = [\r\n    {\r\n      id: 1,\r\n      mes: \"Enero\"\r\n    }, {\r\n      id: 2,\r\n      mes: \"Febrero\"\r\n    },\r\n    {\r\n      id: 3,\r\n      mes: \"Marzo\"\r\n    },\r\n    {\r\n      id: 4,\r\n      mes: \"Abril\"\r\n    }, {\r\n      id: 5,\r\n      mes: \"Mayo\"\r\n    }, {\r\n      id: 6,\r\n      mes: \"Junio\"\r\n    }, {\r\n      id: 7,\r\n      mes: \"Julio\"\r\n    }, {\r\n      id: 8,\r\n      mes: \"Agosto\"\r\n    }, {\r\n      id: 9,\r\n      mes: \"Septiembre\"\r\n    }, {\r\n      id: 10,\r\n      mes: \"Octubre\"\r\n    }, {\r\n      id: 11,\r\n      mes: \"Noviembre\"\r\n    }, {\r\n      id: 12,\r\n      mes: \"Diciembre\"\r\n    }]\r\n  let listaAnios = generarAnios(anio);\r\n  result.push({ 'Meses': listaMeses });\r\n  result.push({ 'Anios': listaAnios });\r\n  return result;\r\n}\r\nexport function generarAniosPosterior(anio: number) {\r\n  let listaAnios = new Array;\r\n  let anioActual = new Date().getFullYear() + 1;\r\n  let idAnio = 1;\r\n  for (let anios = anio; anios <= anioActual; anios++) {\r\n    listaAnios.push({ 'id': idAnio, anio: anios });\r\n    idAnio++;\r\n  }\r\n  return listaAnios;\r\n}\r\nexport function obtenerBase64(path: string) {\r\n  let imgEncode = leerArchivo(path);\r\n  return imgEncode;\r\n}\r\nasync function leerArchivo(path: string) {\r\n  let file = await fetch(path);\r\n  let blobFile = await file.blob();\r\n  let imgEncode = await convertBase64(blobFile);\r\n  return imgEncode;\r\n}\r\nasync function convertBase64(blobFile: Blob) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader;\r\n    reader.onerror = reject;\r\n    reader.onloadend = () => {\r\n      let baseSplit  = reader.result;/* ?.toString().split(',')[1] */\r\n      resolve(baseSplit);\r\n    }\r\n    reader.readAsDataURL(blobFile);\r\n  })\r\n}\r\nexport function generarAnios(defaultAnio: number) {\r\n  let listaAnios = new Array;\r\n  let menorAnio = (defaultAnio - 10);\r\n  let anioMaximo = (defaultAnio + 3);\r\n  let idAnio = 1;\r\n  for (menorAnio; menorAnio <= anioMaximo; menorAnio++) {\r\n    listaAnios.push({ 'id': idAnio, anio: menorAnio });\r\n    idAnio++;\r\n  }\r\n  return listaAnios;\r\n\r\n}\r\nexport async function obtenerCoordenadas() {\r\n  try {\r\n    let coords = await Geolocation.getCurrentPosition();\r\n  return coords.coords;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n}\r\nexport function zeroFill( number:string,width:number = 9){\r\n  while(number.length < width){\r\n    number = \"0\"+number;\r\n  }\r\n  return number;\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    IonAlert,\r\n    IonButton,\r\n    IonButtons,\r\n    IonCard,\r\n    IonCardContent,\r\n    IonCardHeader,\r\n    IonCol,\r\n    IonContent,\r\n    IonDatetime,\r\n    IonGrid,\r\n    IonHeader,\r\n    IonIcon,\r\n    IonImg,\r\n    IonInput,\r\n    IonItem,\r\n    IonLabel,\r\n    IonLoading,\r\n    IonMenuButton,\r\n    IonPage,\r\n    IonRow,\r\n    IonSelect,\r\n    IonSelectOption,\r\n    IonTitle,\r\n    IonToolbar,\r\n    useIonToast,\r\n    IonChip,\r\n    useIonViewWillEnter,\r\n    useIonViewDidEnter\r\n} from '@ionic/react'\r\nimport { camera, checkmarkCircle, saveOutline, pencil, chevronBackCircleOutline } from 'ionicons/icons';\r\nimport './captura-de-lectura.page.css';\r\nimport MenuLeft from '../../components/left-menu';\r\nimport { extraerDatosLectura, guardarCaptura, obtenerSiguienteIndice, obtenerPromedioConsumo, guardarCuotaFija, ConfiguracionEvidencias} from '../../controller/apiController';\r\nimport { useTakePhoto, generarFechas, obtenerBase64, generarAniosPosterior, generarAnios, obtenerCoordenadas } from '../../utilities';\r\nimport { getDatosLecturaStorage, verifyingSession, contribuyenteBuscado, setContribuyenteBuscado, setPuntero, setNumeroPaginas, deleteContratos } from '../../controller/storageController';\r\nimport { useHistory } from 'react-router';\r\nconst CapturaDeLectura: React.FC = () => {\r\n    const history = useHistory();\r\n    const [datosContribuyente, setDatosContribuyente] = useState(Object);\r\n    const [lecturaAnterior, setLecturaAnterior] = useState(Number);\r\n    const [message, setMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [anomalias, setAnomalias] = useState<any[]>([])\r\n    const [consumo, setConsumo] = useState(Number);\r\n    const [activarGaleria, setActivarGaleria] = useState(false);\r\n    const [fotoActiva, setFotoActiva] = useState('');\r\n    const [fotosEvidencia, setFotosEvidencia] = useState<any[]>([]);\r\n    const [indexFoto, setIndexFoto] = useState(-1);\r\n    const [pressentToast, dismissToast] = useIonToast();\r\n    const [fotosCodificadas, setFotosCodificadas] = useState<any[]>([]);\r\n    const [listaMeses, setlistaMeses] = useState<any[]>([]);\r\n    const [mesDefautl, setMesDefault] = useState('');\r\n    const [indexMes, setIndexMes] = useState(Number);\r\n    const [anioActual, setAnioActual] = useState(Number);\r\n    const [indexAnioActual, setIndexAnioActual] = useState(11);\r\n    const [anioLectura, setAnioLectura] = useState(Number);\r\n    const [listaAnios, setListaAnios] = useState<any[]>([]);\r\n    const { takePhoto } = useTakePhoto();\r\n    const [bloquearCampos, setBloquearcampos] = useState(false);\r\n    const [btnInactivo, setBtnInactivo] = useState(false);\r\n    const [comparaMes, setComparaMes] = useState(Number)\r\n    const [comparaAnio, setComparaAnio] = useState(Number)\r\n    const [seleccionAnomalia, setSeleccionAnomalia] = useState(Number);\r\n    const [lecturaActual, setLecturaActual] = useState(Number);\r\n    const [tipoLectura, setTipoLectura] = useState(Number);\r\n    const [mesLectura, setMesLectura] = useState(Number);\r\n    const [refreshControl, setRefreshControl] = useState(false);\r\n    const [defaultLectura, setDefaultLectura] = useState(Number);\r\n    const [defaultAnomalia, setDefaultAnomalia] = useState(Number);\r\n    const [enbleButtons, setEnbleButtons] = useState(false);\r\n    const [tipoMessage, setTipoMessage] = useState(\"MENSAJE\");\r\n    const [promedioLectura, setPromedioLectura] = useState(Number);\r\n    const [toma, setToma] = useState(String);\r\n    const [municipio, setMunicipio] = useState(String);\r\n    const [localidad, setLocalidad] = useState(String);\r\n    const [direccion, setDireccion] = useState(String);\r\n    const [bloqueoAnomalias, setBloqueoAnomalias] = useState(false);\r\n    const [consumoMinimo,setConsumoMinimo] = useState(20);\r\n    const [activarMenu,setActivarMenu] = useState(true);\r\n    const [ fija, setFija ] = useState(false);\r\n    const alertButtons = [\r\n        {\r\n            text: \"Reintentar\", handler: () => {\r\n                setMessage(\"\");\r\n                setTipoMessage(\"Error\");\r\n                isSessionValid();\r\n            }\r\n        },\r\n        {\r\n            text: \"Cancelar\"\r\n        }]\r\n    const fecha = new Date();\r\n    const isSessionValid = () => {\r\n        let valid = verifyingSession();\r\n        logOut(valid)\r\n    }\r\n    useEffect(() => { isSessionValid(); }, [refreshControl])\r\n    useEffect(() => {\r\n        //FIXME: obtenemos los datos actuales\r\n        if (refreshControl) {\r\n            setConsumo(0)\r\n        }\r\n    }, [defaultLectura])\r\n    useEffect(() => { console.log(promedioLectura) }, [promedioLectura])\r\n    const logOut = (valid: boolean) => {\r\n        if (!valid) {\r\n            setTipoMessage(\"Sesión no valida\");\r\n            setMessage(\"Inicie sesión por favor\\nRegresando...\");\r\n            setTimeout(() => {\r\n                setTipoMessage(\"ERROR\");\r\n                setMessage('');\r\n                history.replace(\"/home\");\r\n            }, 2500)\r\n        } else {\r\n            setLoading(true);\r\n            cargarContribuyente();\r\n            setDefaultLectura(0);\r\n        }\r\n    }\r\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\r\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\r\n    const cargarContribuyente = async () => {\r\n        let result = getDatosLecturaStorage();\r\n        if(result.contribuyente == \"null\"){\r\n            result.contribuyente = \"\";\r\n        }\r\n        setDatosContribuyente(result);\r\n        extraerLectura(result.idLectura);\r\n        setRefreshControl(false);\r\n    }\r\n    const extraerLectura = async (idLectura: any) => {\r\n\r\n\r\n        await ConfiguracionEvidencias().then(ConfiguracionAnomalia=>{setActivarGaleria(ConfiguracionAnomalia==\"1\")})\r\n        await obtenerPromedioConsumo().then( async (promedio)=>{\r\n            promedio = parseFloat(promedio).toFixed(2);\r\n            setPromedioLectura(parseInt(String(promedio)));\r\n            console.log(promedio);\r\n            await extraerDatosLectura(idLectura)\r\n            .then((result) => {\r\n                setFija(result.Mensaje[0].M_etodoCobro == \"1\");\r\n                if(result.Mensaje != 300){\r\n                    setToma(result.Mensaje[0].Toma)\r\n                    setMunicipio(result.Mensaje[0].Municipio);\r\n                    setLocalidad(result.Mensaje[0].Localidad);\r\n                    setDireccion(result.Mensaje[0].Direccion);\r\n                    //FIXED: hay un bug para los contraros sin lecturas y estatus de letura 1\r\n                    let data = parseInt(result.Mensaje[0]['A_no']);\r\n                    let mesLectura = parseInt(result.Mensaje[0].Mes);\r\n                    //NOTE: si todo es NaN seleccionamos la fecha actual\r\n                    isNaN(data) ? data = fecha.getFullYear() : data = data;\r\n                    isNaN( mesLectura ) ? mesLectura = fecha.getMonth() : mesLectura = mesLectura;\r\n                    setMesLectura(mesLectura);\r\n                    setAnioLectura(data);\r\n                    cargarFechas(data, result.ValorLectura[0].Valor, mesLectura);\r\n                    setLecturaAnterior(result.Mensaje[0].LecturaActual != null ? parseInt(result.Mensaje[0].LecturaActual) : 0 );\r\n                }else{\r\n                    cargarFechas(fecha.getFullYear(), \"1\" , fecha.getMonth());\r\n                }\r\n                setBloquearcampos(result.BloquearCampos[0].Valor == 1);\r\n                setAnomalias(result.Anomalias);\r\n                setTipoLectura(result.ValorLectura[0].Valor)\r\n                setConsumo(0);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"aqui esta el error\");\r\n                let errorMessage = err.message + \"\";\r\n                if (errorMessage.includes(\"API\")) {\r\n                    setEnbleButtons(true);\r\n                }\r\n                setMessage(err.message);\r\n            })\r\n            .finally(() => { setLoading(false) });\r\n        }).catch((error)=>{\r\n\r\n        }).finally(()=>{setLoading(false)})\r\n        //Fin de extraer Consumo promedio del contribuyente\r\n    }\r\n    const cambiarFotoActiva = (foto: string, index: number) => {\r\n        setFotoActiva(foto);\r\n        setIndexFoto(index);\r\n    }\r\n    const borrarFotoEvidencia = () => {\r\n        let fotosTemporal = new Array;\r\n        let fotosEncoded = new Array;\r\n        fotosEvidencia.map((item, index) => {\r\n            if (index != indexFoto) {\r\n                fotosTemporal.push(item);\r\n            }\r\n        });\r\n        fotosCodificadas.map((item, index) => {\r\n            if (index != indexFoto) {\r\n                fotosEncoded.push(item);\r\n            }\r\n        })\r\n        setFotosEvidencia(fotosTemporal);\r\n        setFotosCodificadas(fotosEncoded);\r\n        setFotoActiva('');\r\n        pressentToast({\r\n            message: \"Se elimino la foto de la lista'\",\r\n            duration: 2000,\r\n            position: 'top',\r\n            buttons: [\r\n                {\r\n                    side: 'start',\r\n                    icon: checkmarkCircle,\r\n                }\r\n            ]\r\n        })\r\n    }\r\n    const cargarFechas = async (anioDefault: number, tipoLectura: string, mes: number) => {\r\n        const mesActual = (parseInt(fecha.getMonth().toString()));\r\n        await generarFechas(anioDefault).then((result) => {\r\n            setMesDefault(result[0].Meses[mesActual].mes);\r\n            setIndexMes(result[0].Meses[mesActual].id);\r\n            setlistaMeses(result[0].Meses);\r\n            setListaAnios(result[1].Anios);\r\n            // Se debe separar por casos\r\n            switch (tipoLectura) {\r\n                case '1':\r\n                    lecturaCasoUno(anioDefault, mes, result[0].Meses);\r\n                    break;\r\n                case '2':\r\n                    lecturaCasoDos(anioDefault, result[0].Meses[mesActual].id, result[0].Meses, result[1].Anios);\r\n                    break;\r\n                case '3':\r\n                    lecturaCasoTres(result[0].Meses);\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n    const calcularConsumo = (consumido: number) => {\r\n        let result = consumido - lecturaAnterior;\r\n        setLecturaActual(consumido);\r\n        setDefaultLectura(consumido)\r\n        isNaN(result) ? setConsumo(0) : setConsumo(result)\r\n    }\r\n    const lecturaCasoUno = (anioResult: number, mes: number, meses: any[]) => {\r\n        let anhioLista = anioResult;\r\n        let esteMes = mes + 1;\r\n        setComparaAnio(anhioLista); //NOTE: se envia este compara anio al metodo de verificacion\r\n        let listaAnios = generarAniosPosterior(anioResult);\r\n        setListaAnios(listaAnios);\r\n        if (esteMes == 13) {\r\n            anhioLista = anioResult + 1;\r\n            esteMes = meses[0].id;\r\n            setMesDefault(meses[0].mes);\r\n            setComparaAnio(anioResult + 1);\r\n        }\r\n        setComparaMes(esteMes); //NOTE: se envia este compara anio al metodo de verificacion\r\n        setIndexMes(esteMes);\r\n\r\n        listaAnios.map((item, index) => {\r\n            if (item.anio == anhioLista) {\r\n                setIndexAnioActual(item.id);\r\n                setAnioActual(item.anio)\r\n            }\r\n        })\r\n        if (lecturaAnterior == null) {\r\n            setLecturaAnterior(0);\r\n        }\r\n    }\r\n    const lecturaCasoDos = (anioResult: number, mesResult: number, meses: any[], anios: any[]) => {\r\n        // se tomara la fecha actual para generar la lectura\r\n        let anhioLista = fecha.getFullYear();\r\n        let esteMes = fecha.getMonth();\r\n        meses.map((item, index) => {\r\n            if (item.id == esteMes) {\r\n                setIndexMes(item.id);\r\n                setMesDefault(item.mes);\r\n            }\r\n        })\r\n        setComparaMes(fecha.getMonth());    //NOTE: se envia este compara anio al metodo de verificacion\r\n        setComparaAnio(fecha.getFullYear());    //NOTE: se envia este compara anio al metodo de verificacion\r\n        //Generar lista de los años\r\n        let listaAnios = generarAnios(anhioLista);\r\n        setListaAnios(listaAnios);\r\n        listaAnios.map((item, index) => {\r\n            if (anhioLista == item.anio) {\r\n                setIndexAnioActual(item.id);\r\n                setAnioActual(item.anio);\r\n            }\r\n        })\r\n        if (lecturaAnterior == null) {\r\n            setLecturaAnterior(0);\r\n        }\r\n    }\r\n    const lecturaCasoTres = (meses: any[]) => {\r\n        // se Obtienen las fechas actuales\r\n        let mesComparacion = fecha.getMonth() + 1\r\n        setComparaMes(mesComparacion);  //NOTE: se envia este compara anio al metodo de verificacion\r\n        let anioComparar = fecha.getFullYear()\r\n        let esteMes = fecha.getMonth() + 1\r\n\r\n        if (esteMes == 13) {\r\n            anioComparar = fecha.getFullYear() + 1\r\n            esteMes = meses[0].id;\r\n            setMesDefault(meses[0].mes);\r\n            setComparaAnio(anioComparar);\r\n            setComparaMes(meses[0].id);\r\n        }\r\n\r\n        setAnioActual(anioComparar);\r\n        setComparaAnio(anioComparar);     //NOTE: se envia este compara anio al metodo de verificacion\r\n        setIndexMes(esteMes);\r\n        let listaAnios = generarAnios(anioComparar);\r\n        setListaAnios(listaAnios);\r\n        listaAnios.map((item, index) => {\r\n            if (item.anio == anioComparar) {\r\n                setIndexAnioActual(item.id);\r\n            }\r\n        })\r\n        if (lecturaAnterior == null) {\r\n            setLecturaAnterior(0);\r\n        }\r\n    }\r\n    const siguienteLectura = async () => {\r\n        await obtenerSiguienteIndice(datosContribuyente.idLectura)\r\n            .then((result) => {\r\n                if (result) {\r\n                    /*setTipoMessage(\"Mensaje\");\r\n                    setMessage(\"Lectura guardada\\nPasando a siguiente lectura...\");\r\n                    setTimeout(() => {\r\n                        setLoading(false);\r\n                        //Limpiando Componentes\r\n                        setActivarGaleria(false)\r\n                        setDefaultLectura(0)\r\n                        setFotoActiva('');\r\n                        setFotosCodificadas([]);\r\n                        setFotosEvidencia([]);\r\n                        setIndexFoto(0);\r\n                        setSeleccionAnomalia(-1)\r\n                        setDefaultAnomalia(-1)\r\n                        setRefreshControl(true);\r\n                        handleCancelAnomalia();\r\n                    }, 1000);*/\r\n                    setTipoMessage(\"Mensaje\");\r\n                    setMessage(\"Final de los datos en la pagina\\nRegresado...\");\r\n                    setPuntero(0);\r\n                    setNumeroPaginas(0);\r\n                    deleteContratos();\r\n                    setTimeout(() => {\r\n                        history.replace(\"/form-datos-toma.page\");\r\n                    }, 2500);\r\n                } else {\r\n                    setTipoMessage(\"Mensaje\");\r\n                    setMessage(\"Final de los datos en la pagina\\nRegresado...\");\r\n                    setPuntero(0);\r\n                    setNumeroPaginas(0);\r\n                    deleteContratos();\r\n                    setTimeout(() => {\r\n                        history.replace(\"/form-datos-toma.page\");\r\n                    }, 2500);\r\n                }\r\n\r\n            }).catch(err => {\r\n                setMessage(err.message);\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            })\r\n    }\r\n    const mensajeConsumoCero = async () => {\r\n        //let value = contribuyenteBuscado();\r\n        /*if (!value) {\r\n            if (consumo <= 0) {\r\n                setEnbleButtons(false);\r\n                setTipoMessage(\"Mensaje\");\r\n                setMessage(\"El Consumo se calculo como el promedio de 12 meses\");\r\n                setTimeout(() => {\r\n                    setMessage(\"\");\r\n                    siguienteLectura();\r\n                }, 2000);\r\n            } else {\r\n                siguienteLectura();\r\n            }\r\n        } else {\r\n\r\n        }*/\r\n        setLoading(false);\r\n        setTipoMessage(\"Mensaje\");\r\n        setMessage(\"Lectura guardada\\nRegresado...\");\r\n        setTimeout(() => {\r\n            setContribuyenteBuscado(false);\r\n            history.replace(\"/form-datos-toma.page\");\r\n        }, 2500);\r\n    }\r\n    //Manejadores de la interfaz\r\n    const handleBtnGuardar = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setTimeout(() => {\r\n                if (loading) {\r\n                    throw 0;\r\n                }\r\n            }, 20000);\r\n            if (!(fotosEvidencia.length == 0 && activarGaleria)) {\r\n                let mes = fecha.getMonth() + 1;\r\n                let anio = fecha.getFullYear();\r\n                let coords = await obtenerCoordenadas();\r\n                let validarConsumo = procesoConsumo(); // Falta la validacion del consumo\r\n                console.log(lecturaActual);\r\n                //NOTE: Verificamos la cuotafija\r\n                if( !fija ){\r\n                    let datosCapturados = {\r\n                        route: anio + \"\" + mes + \"/\",\r\n                        lecturaAnterior:  lecturaAnterior,\r\n                        lecturaActual: bloqueoAnomalias ? lecturaAnterior : lecturaActual,\r\n                        consumoFinal: validarConsumo,\r\n                        mesCaptura: indexMes,\r\n                        anhioCaptura: anioActual,\r\n                        fechaCaptura: fecha,\r\n                        anomalia: seleccionAnomalia == 0 ? \"\" : seleccionAnomalia,\r\n                        tipoCoordenada: 1,\r\n                        arregloFotos: fotosCodificadas,\r\n                        comparaMes: comparaMes,\r\n                        comparaAnio: comparaAnio,\r\n                        lectura: 1,\r\n                        arrayAnios: listaAnios,\r\n                        indexAnio: indexAnioActual,\r\n                        mesLectura: mesLectura,\r\n                        nCliente: datosContribuyente.nCliente,\r\n                        token: datosContribuyente.token,\r\n                        idUsuario: datosContribuyente.idUsuario,\r\n                        idToma: datosContribuyente.idLectura,\r\n                        Latidude:  String(coords.latitude) ,\r\n                        Longitude: String(coords.longitude),\r\n                    }\r\n                    console.log(datosCapturados);\r\n                    await guardarCaptura(datosCapturados)\r\n                        .then((result) => { mensajeConsumoCero(); })\r\n                        .catch((err) => { setLoading(false); setMessage(err.message) });\r\n                }else{\r\n                    guardarDatosCuotaFija(validarConsumo,coords);\r\n                }\r\n            } else {\r\n                setMessage(\"Debe capturar almenos 1 foto\")\r\n                setLoading(false);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            setLoading(false);\r\n            setMessage(`Tiempo de espera agotado.\r\n            Asegúrese de activar la ubicación del dispositivo`)\r\n        }\r\n    }\r\n    //NOTE: metodo para enviar los datos de la cuotafija\r\n    const guardarDatosCuotaFija = async ( consumo:Number, coords: any ) => {\r\n        //NOTE: creamos el formato de los datos\r\n        let datos = {\r\n            LecturaActual: lecturaActual,\r\n            LecturaAnterior: lecturaAnterior,\r\n            Cliente: datosContribuyente.nCliente,\r\n            Consumo: consumo,\r\n            Anio: anioActual,\r\n            padron: datosContribuyente.idLectura,\r\n            mes: indexMes,\r\n            anomalia: seleccionAnomalia == 0 ? \"\" : seleccionAnomalia,\r\n            idUsuario: datosContribuyente.idUsuario,\r\n            Fotos: fotosCodificadas,\r\n            tipoCoordenada: 1,\r\n            Latidude:  String(coords.latitude),\r\n            Longitude: String(coords.longitude),\r\n        };\r\n        console.log(datos);\r\n        await guardarCuotaFija(datos)\r\n        .then(()=>{\r\n            mensajeConsumoCero();\r\n        }) \r\n        .catch(( error )=>{\r\n            setLoading(false); setMessage(error.message);\r\n        }).finally(()=>{\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    const handleSelectAnio = (value: number) => {\r\n        listaAnios.map((item, index) => {\r\n            if (item.id == value) {\r\n                setAnioActual(item.anio)\r\n                setIndexAnioActual(item.id)\r\n            }\r\n        })\r\n    }\r\n    const handleSelectMes = (value: number) => {\r\n        listaMeses.map((item, index) => {\r\n            if (item.id == value) {\r\n                setIndexMes(item.id);\r\n                setMesDefault(item.mes);\r\n            }\r\n        })\r\n    }\r\n    const handleSelectAnomalia = (seleccionAnomalia: number) => {\r\n        setSeleccionAnomalia(seleccionAnomalia);\r\n        setDefaultAnomalia(seleccionAnomalia);\r\n        setConsumo(promedioLectura);\r\n        setBloqueoAnomalias(seleccionAnomalia != 0);\r\n        console.log(defaultLectura);\r\n        anomalias.map((item, index) => {\r\n            if (item.id == seleccionAnomalia) {\r\n                    setActivarGaleria(true);\r\n                    console.log(item.ActualizarAdelante + \" - \" + item.ActualizarAtras + \" Se activa: \" + (parseInt(item.ActualizarAdelante) == 0 || parseInt(item.ActualizarAtras) == 0));\r\n                    if(parseInt(item.ActualizarAdelante) == 1 || parseInt(item.ActualizarAtras) == 1 ){\r\n                        setBloqueoAnomalias(false);\r\n                        setLecturaActual( defaultLectura );\r\n                    }else{\r\n                        setBloqueoAnomalias(true);\r\n                        setLecturaActual( defaultLectura );\r\n                    }\r\n                    setConsumoMinimo( parseInt(item.Minima) );\r\n                    if(defaultLectura != 0){\r\n                        console.log(\"Procesando Consumo\");\r\n                        setConsumo(procesoConsumo());\r\n                    }\r\n                    if(seleccionAnomalia == 24){\r\n                        setConsumo(promedioLectura);\r\n                    }\r\n            }\r\n        });\r\n    }\r\n    const handleCancelAnomalia = () => { \r\n        setActivarGaleria(false);\r\n        setDefaultAnomalia(0);\r\n        setBloqueoAnomalias(false);\r\n    }\r\n    const handleAbrirCamera = async () => {\r\n        setLoading(true);\r\n        await takePhoto()\r\n            .then(async (result) => {\r\n                if (fotosEvidencia.length <= 2) {\r\n                    setLoading(true);\r\n                    agregarImagenEncode(result.webPath + \"\");\r\n                }\r\n                else {\r\n                    setLoading(false)\r\n                    setMessage(\"Solo se permiten 3 fotos como máximo\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                let errorType = err.message + \"\";\r\n                if (errorType.includes(\"denied\")) {\r\n                    setMessage(\"La aplicación no tiene permisos para usar la cámara\")\r\n                }\r\n            }).finally(() => { setLoading(false) })\r\n    }\r\n    //llamada al metodo de convercion\r\n    const agregarImagenEncode = async (imgDir: string) => {\r\n        await obtenerBase64(imgDir).then((result) => {\r\n            setFotoActiva(imgDir);\r\n            setFotosEvidencia(fotosEvidencia => [...fotosEvidencia, imgDir]);\r\n            setIndexFoto(fotosEvidencia.length);\r\n            setFotosCodificadas(fotosCodificadas => [...fotosCodificadas, result])\r\n        }).finally(() => { setLoading(false) })\r\n    }\r\n    //METODOS PARA GENERAR ETIQUETAS DE LA INTERFAZ\r\n    const generarGaleria = () => {\r\n        if (activarGaleria) {\r\n            let data =\r\n                <div>\r\n                    <IonItem>\r\n                        <IonLabel >Adjuntar evidencia (maximo 3 fotos)</IonLabel>\r\n                        <IonIcon icon={camera} className=\"iconStyle\" onClick={handleAbrirCamera}></IonIcon>\r\n                    </IonItem>\r\n                    {\r\n                        fotosEvidencia.length > 0 ?\r\n                            <IonItem>\r\n                                <IonRow>\r\n                                    {\r\n                                        fotosEvidencia.map((item, index) => {\r\n                                            return <IonCol key={index}><IonImg src={item} onClick={() => { cambiarFotoActiva(item, index) }} className=\"imgFormat\"></IonImg></IonCol>\r\n                                        })\r\n                                    }\r\n                                </IonRow>\r\n                            </IonItem> : <></>\r\n                    }\r\n                </div>;\r\n            return data;\r\n        }\r\n    }\r\n    const formatindex = (index: string) => {\r\n        let result = \"\";\r\n        let numIndex = Number(index);\r\n        if (isNaN(numIndex)) {\r\n            result = '00';\r\n        } else {\r\n            numIndex <= 9 ? result = String(\"0\" + numIndex) : result = String(numIndex);\r\n        }\r\n        return result;\r\n    }\r\n    const btnDetallesContribuyente = () => {\r\n        history.push(\"/datos-contribuyente.page\");\r\n    }\r\n    const btnRegresar = () =>{\r\n        history.replace(\"/form-datos-toma.page\");\r\n    }\r\n    const procesoConsumo = () => {\r\n        let consumoProcesado = 0;\r\n        if(seleccionAnomalia != 0){\r\n            if(bloqueoAnomalias){ // este es el proceso de las anomalias sin capturas\r\n                if ( promedioLectura < consumoMinimo ){\r\n                    consumoProcesado = consumoMinimo;\r\n                }else{\r\n                    consumoProcesado = promedioLectura;\r\n                }\r\n            }else{ //este el el proceso de las anomalias con captura\r\n                if(consumo < promedioLectura){\r\n                    consumoProcesado = promedioLectura;\r\n                }\r\n                if(promedioLectura < consumoMinimo){\r\n                    consumoProcesado = consumoMinimo;\r\n                }\r\n                if(consumoMinimo < consumo){\r\n                    consumoProcesado =  consumo;\r\n                }\r\n            }\r\n        }else{ // este es el proceso de captura normal\r\n            consumoProcesado = consumo;\r\n        }\r\n        if(seleccionAnomalia == 47){\r\n            consumoProcesado = consumoMinimo;\r\n        }\r\n        if(seleccionAnomalia == 99){\r\n            if(lecturaActual < consumoMinimo){\r\n                consumoProcesado = consumoMinimo;\r\n            }else{\r\n                consumoProcesado = lecturaActual;\r\n            }\r\n        }\r\n        if(seleccionAnomalia == 24){\r\n            consumoProcesado = promedioLectura;\r\n        }\r\n        if(seleccionAnomalia == 40){ //Nuevo forma de anomalia\r\n            if(lecturaActual < consumoMinimo){\r\n                consumoProcesado = consumoMinimo;\r\n            }else{\r\n                consumoProcesado = lecturaActual;\r\n            }\r\n        }\r\n        setConsumo(consumoProcesado);\r\n        return consumoProcesado;\r\n    }\r\n    return (\r\n        <IonPage>\r\n      {\r\n        activarMenu ? \r\n        <MenuLeft />: <></>\r\n      }\r\n            <IonHeader>\r\n                <IonToolbar color=\"danger\" >\r\n                    <IonTitle>Captura de lectura</IonTitle>\r\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\r\n                        <IonMenuButton ></IonMenuButton>\r\n                    </IonButtons>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n            <IonContent>\r\n                <IonCard>\r\n                    <IonCardHeader className=\"headerData\">\r\n                        <div className=\"datosContribuyete\">\r\n                            <h3>{datosContribuyente.contribuyente}</h3>\r\n                            <p>Contrato: {datosContribuyente.contratoVigente}, &nbsp;&nbsp; Medidor: {datosContribuyente.medidor == \"null\" ? \"S/N\" : datosContribuyente.medidor }, &nbsp;&nbsp; Toma: {toma}</p>\r\n                            <p>Municipio: {municipio}, &nbsp;&nbsp; Localidad: {localidad}</p>\r\n                            <p>{`Dirección: ${direccion}`}</p>\r\n                            <IonGrid>\r\n                                <IonRow>\r\n                                    <IonCol size=\"10\">\r\n                                    </IonCol>\r\n                                    <IonCol size=\"1\">\r\n                                        <IonChip color=\"danger\" onClick={btnDetallesContribuyente}>\r\n                                            <IonIcon icon={pencil} className=\"btnEditar\" />\r\n                                        </IonChip>\r\n                                    </IonCol>\r\n                                </IonRow>\r\n                            </IonGrid>\r\n                        </div>\r\n                    </IonCardHeader>\r\n                    <IonCardContent>\r\n                        <br />\r\n                        <IonItem>\r\n                            <IonLabel>Lectura anterior:</IonLabel>\r\n                            <IonInput disabled className=\"disabledInput\">{`${lecturaAnterior}`}</IonInput>\r\n                        </IonItem>\r\n                        <br />\r\n                        <IonItem>\r\n                            <IonLabel>Lectura actual:</IonLabel>\r\n                            <IonInput disabled = {bloqueoAnomalias} type=\"number\" placeholder=\"0\" value={defaultLectura} onIonChange={e => { calcularConsumo(parseFloat(e.detail.value + \"\")) }}></IonInput>\r\n                        </IonItem>\r\n                        <br />\r\n                        <IonItem>\r\n                            <IonLabel>Consumo:</IonLabel>\r\n                            <IonInput disabled className=\"disabledInput\" value={consumo}></IonInput>\r\n                        </IonItem>\r\n                        <br />\r\n                        <IonItem>\r\n                            <IonLabel>Fecha de lectura:</IonLabel>\r\n                            <IonDatetime disabled displayFormat=\"DD/MM/YYYY\" min=\"2000\" max=\"2026\" value={`${fecha}`}></IonDatetime>\r\n                        </IonItem>\r\n                        <br />\r\n                        <IonItem>\r\n                            <IonLabel>Anomalía</IonLabel>\r\n                            <IonSelect interface=\"action-sheet\" onIonCancel = {handleCancelAnomalia} value={defaultAnomalia} onIonChange={e => { handleSelectAnomalia(e.detail.value) }}>\r\n                                {\r\n                                    anomalias.map((item, index) => {\r\n                                        return <IonSelectOption key={index} value={item.id}>\r\n                                            {`${item.clave <= 10 ? formatindex(item.clave) : item.clave} - ${item.descripci_on}`}\r\n                                        </IonSelectOption>\r\n                                    })\r\n                                }\r\n                            </IonSelect>\r\n                        </IonItem>\r\n                        <br />\r\n                        {\r\n                            generarGaleria()\r\n                        }\r\n                        {\r\n                            fotoActiva != '' ?\r\n                                <IonItem>\r\n                                    <IonCard className=\"centrar\">\r\n                                        <IonImg src={fotoActiva} />\r\n                                        <IonCardContent >\r\n                                            <IonButtons>\r\n                                                <IonButton color=\"secondary\" onClick={() => { setFotoActiva('') }}>Cerrar</IonButton>\r\n                                                <IonButton color=\"danger\" onClick={() => { borrarFotoEvidencia() }} >Eliminar</IonButton>\r\n                                            </IonButtons>\r\n                                        </IonCardContent>\r\n                                    </IonCard>\r\n                                </IonItem> : <></>\r\n                        }\r\n                        <IonItem>\r\n                            <IonLabel>Mes: </IonLabel>\r\n                            <IonSelect interface=\"action-sheet\" value={indexMes} selectedText={`${mesDefautl}`} disabled={bloquearCampos} onIonChange={e => handleSelectMes(e.detail.value)}>\r\n                                {\r\n                                    listaMeses.map((item, index) => {\r\n                                        return <IonSelectOption key={index} value={item.id} >{item.mes}</IonSelectOption>\r\n                                    })\r\n                                }\r\n                            </IonSelect>\r\n                        </IonItem>\r\n                        <IonItem>\r\n                            <IonLabel>Año: </IonLabel>\r\n                            <IonSelect interface=\"action-sheet\" value={indexAnioActual} selectedText={`${anioActual}`} disabled={bloquearCampos} onIonChange={e => handleSelectAnio(e.detail.value)}>\r\n                                {\r\n                                    listaAnios.map((item, index) => {\r\n                                        return <IonSelectOption key={index} value={item.id}>{item.anio}</IonSelectOption>\r\n                                    })\r\n                                }\r\n                            </IonSelect>\r\n                        </IonItem>\r\n                        <br />\r\n                        <div className=\"centrar\">\r\n                            <IonGrid>\r\n                                <IonRow>\r\n                                    <IonCol size=\"6\">\r\n                                        <IonButton color=\"secondary\" onClick = {btnRegresar}>\r\n                                            <IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon>\r\n                                            Regresar\r\n                                        </IonButton>\r\n                                    </IonCol>\r\n                                    <IonCol size=\"6\">\r\n                                        <IonButton color=\"danger\" onClick={handleBtnGuardar} disabled={btnInactivo}>\r\n                                            Guardar\r\n                                            <IonIcon icon={saveOutline} slot=\"end\"></IonIcon>\r\n                                        </IonButton>\r\n                                    </IonCol>\r\n                                </IonRow>\r\n                            </IonGrid>\r\n\r\n                        </div>\r\n                    </IonCardContent>\r\n                </IonCard>\r\n                <IonAlert\r\n                    cssClass=\"my-custom-class\"\r\n                    header={tipoMessage}\r\n                    message={message}\r\n\r\n                    isOpen={message.length > 0}\r\n                    backdropDismiss={false}\r\n                    buttons={enbleButtons ? alertButtons : [{ text: 'Aceptar', handler: () => { setMessage(\"\") } }]}\r\n                />\r\n                <IonLoading\r\n                    cssClass=\"my-custom-class\"\r\n                    isOpen={loading}\r\n                    onDidDismiss={() => { setLoading(false); }}\r\n                    message=\"Por favor espere\"\r\n                />\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n}\r\n\r\nexport default CapturaDeLectura;","import { IonAlert, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonCol, IonContent, IonDatetime, IonGrid, IonHeader, IonIcon, IonItem, IonItemDivider, IonLabel, IonList, IonLoading, IonMenuButton, IonPage, IonRow, IonTitle, IonToolbar, useIonViewWillEnter } from \"@ionic/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MenuLeft from '../../components/left-menu';\r\nimport { contractOutline, eyeOutline } from 'ionicons/icons';\r\nimport { historialFechas } from '../../controller/apiController';\r\nimport { guardarDatosEditarLectura, verifyingSession, cerrarSesion, setFechasHistorialLectura, getFechasHistorialLectura } from '../../controller/storageController';\r\nimport { useHistory } from 'react-router-dom'\r\nconst HistorialLecturas: React.FC = () => {\r\n    const fecha = new Date();\r\n    const history = useHistory();\r\n    const [fechaInicio, setFechaInicio] = useState('');\r\n    const [fechaFinal, setFechaFinal] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [historial, setHistorial] = useState<any[]>([])\r\n    const [message, setMessage] = useState('');\r\n    const [tipoMensaje, setTipoMensaje] = useState(\"MENSAJE\");\r\n    const [block, setBlock] = useState(false);\r\n    const [conectionError, setConectionErro] = useState(false);\r\n    const [expiredToken, setExpiredToken] = useState(Boolean);\r\n    const alertsButtons = [\r\n        {\r\n            text: \"Reintentar\",\r\n            handler: () => { setMessage(\"\"); setConectionErro(false); extraerHistorial(fechaInicio,fechaFinal); }\r\n        },\r\n        {\r\n            text: \"Cancelar\",\r\n            handler: () => { setConectionErro(false) }\r\n        }\r\n    ]\r\n    const isSessionValid = () => {\r\n        let valid = verifyingSession();\r\n        setExpiredToken(!valid);\r\n        setBlock(!valid);\r\n    }\r\n    useEffect(() => {\r\n        setFechaInicio(fecha.getFullYear() + \"-\" + (fecha.getMonth() + 1) + \"-\" + (fecha.getDate()));\r\n        setFechaFinal(fecha.getFullYear() + \"-\" + (fecha.getMonth() + 1) + \"-\" + (fecha.getDate()));\r\n        console.log(fechaInicio, \"\\n\\n\", fechaFinal)\r\n        isSessionValid();\r\n    }, [])\r\n    useEffect(() => { logOut() }, [expiredToken]);\r\n    const verificarFechas = () =>{\r\n        let data = getFechasHistorialLectura();\r\n        if(data != null){\r\n            setFechaInicio(String(data.desde));\r\n            setFechaFinal(String(data.hasta));\r\n            extraerHistorial(String(data.desde),String(data.hasta));\r\n\r\n        }\r\n    }\r\n    useIonViewWillEnter(verificarFechas)\r\n\r\n    const logOut = () => {\r\n        if (expiredToken) {\r\n            setTipoMensaje(\"Sesión no valida\");\r\n            setMessage(\"Inicie sesión por favor\\nRegresando...\");\r\n            setTimeout(() => {\r\n                cerrarSesion().then((result) => {\r\n                    setTipoMensaje('MENSAJE');\r\n                    setMessage('');\r\n                    history.replace('/home');\r\n                })\r\n            }, 2500)\r\n        }\r\n    }\r\n    const extraerHistorial = async (desde: string,hasta:string) => {\r\n        let selectionValid = validateFechas(desde,hasta);\r\n        if (selectionValid) {\r\n            setLoading(true)\r\n            await historialFechas(desde, hasta)\r\n                .then((result) => {\r\n                    if (result.Status) {\r\n                        console.log(result.Mensaje)\r\n                        setHistorial(result.Mensaje);\r\n                    } else {\r\n                        setHistorial([]);\r\n                        setTipoMensaje(\"MENSAJE\");\r\n                        setMessage(\"No se encontraron resultados.\");\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    let errorMessage = String(err.message);\r\n                    setExpiredToken(errorMessage.includes(\"Sesion no valida\"));\r\n                    setConectionErro(errorMessage.includes(\"API\"));\r\n                    if (!expiredToken) {\r\n                        setTipoMensaje(\"ERROR\");\r\n                        setMessage(errorMessage);\r\n                    }\r\n                })\r\n                .finally(() => { setLoading(false) })\r\n        }else{\r\n            setTipoMensaje(\"Mensaje\")\r\n            setMessage(\"Selección de fechas no validas\");\r\n        }\r\n    }\r\n    //manejadores de la interfaz\r\n    const handleSelectFechaInicio = (date: String) => {\r\n        setFechaInicio(date.split(\"T\")[0]);\r\n        console.log(fechaInicio);\r\n    }\r\n    const handleSelectFechaFin = (date: any) => {\r\n        setFechaFinal(date.split(\"T\")[0]);\r\n        console.log(fechaFinal)\r\n    }\r\n    const validateFechas = (desde: string,hasta: string) => {\r\n        let fechaDesde = new Date(desde);\r\n        let fechaHasta = new Date(hasta);\r\n        if (fechaDesde <= fechaHasta) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    const editarContribuyente = (datos: any) => {\r\n        //Guardar fechas historial\r\n        setFechasHistorialLectura(fechaInicio,fechaFinal);\r\n        guardarDatosEditarLectura(datos.idLectura, datos.ContratoVigente, datos.Contribuyente, datos.Medidor);\r\n        // Mostrar editarLecturaAgua\r\n        history.replace('/editar-lecturas-agua.page');\r\n    }\r\n    return (\r\n        <IonPage>\r\n            <IonContent>\r\n                <MenuLeft />\r\n                <IonHeader>\r\n                    <IonToolbar color=\"danger\" >\r\n                        <IonTitle>Historial de lecturas</IonTitle>\r\n                        <IonButtons slot=\"start\" className=\"btnMenu\">\r\n                            <IonMenuButton ></IonMenuButton>\r\n                        </IonButtons>\r\n                    </IonToolbar>\r\n                </IonHeader>\r\n                <IonCard>\r\n                    <IonCardHeader>\r\n                        <div className=\"center\">\r\n                            <h5>Seleccione la fecha</h5>\r\n                        </div>\r\n                    </IonCardHeader>\r\n                    <IonItem>\r\n                        <IonGrid>\r\n                            <IonRow>\r\n                                <IonCol size=\"6\">\r\n                                    <div className=\"center\">\r\n                                        <label>Desde: </label>\r\n                                        <IonDatetime disabled={block} value={fechaInicio} displayFormat=\"DD-MM-YYYY\" pickerFormat=\"DD-MM-YYYY\" cancelText=\"Cancelar\" doneText=\"Aceptar\" onIonChange={e => { handleSelectFechaInicio(e.detail.value + \"\") }} >{fechaInicio}</IonDatetime>\r\n                                    </div>\r\n                                </IonCol>\r\n                                <IonCol size=\"6\">\r\n                                    <div className=\"center\">\r\n                                        <label>Hasta: </label>\r\n                                        <IonDatetime disabled={block} value={fechaFinal} displayFormat=\"DD-MM-YYYY\" cancelText=\"Cancelar\" doneText=\"Aceptar\" onIonChange={e => { handleSelectFechaFin(e.detail.value + \"\") }} >{fechaFinal}</IonDatetime>\r\n                                    </div>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>\r\n                    </IonItem>\r\n                    <br />\r\n                    <div className=\"center\">\r\n                        <IonButton disabled={block} color=\"danger\" onClick={()=>{extraerHistorial(fechaInicio,fechaFinal)}}>Generar</IonButton>\r\n                    </div>\r\n                </IonCard>\r\n                <IonCard>\r\n                    <IonCardContent>\r\n                        <IonList>\r\n                            {\r\n                                historial.map((item, index) => {\r\n                                    return <IonItem key={index} onClick={() => { editarContribuyente(item) }}>\r\n                                        <IonList>\r\n                                            <h6>{item.Fecha}</h6>\r\n                                            <label>{item.Contribuyente}</label><br />\r\n                                            <label>{`Contrato: ${item.ContratoVigente} , Medidor: ${item.Medidor}, Toma: ${item.Toma}`}</label>\r\n                                        </IonList>\r\n                                        <label slot=\"end\" ><IonIcon icon={eyeOutline} color=\"primary\"></IonIcon></label>\r\n                                    </IonItem>\r\n                                })\r\n                            }\r\n                        </IonList>\r\n                    </IonCardContent>\r\n                </IonCard>\r\n                <IonLoading\r\n                    cssClass=\"my-custom-class\"\r\n                    isOpen={loading}\r\n                    onDidDismiss={() => { setLoading(false); }}\r\n                    message=\"Por favor espere\"\r\n                />\r\n                <IonAlert\r\n                    cssClass=\"my-custom-class\"\r\n                    header={tipoMensaje}\r\n                    message={message}\r\n                    isOpen={message.length > 0}\r\n                    backdropDismiss={false}\r\n                    onDidDismiss={() => { setConectionErro(false) }}\r\n                    buttons={conectionError ? alertsButtons : [{ text: \"Aceptar\", handler: () => { setMessage(\"\"); } }]}\r\n                />\r\n            </IonContent>\r\n        </IonPage>\r\n    )\r\n}\r\nexport default HistorialLecturas;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    IonPage,\r\n    IonButtons,\r\n    IonHeader,\r\n    IonMenuButton,\r\n    IonTitle,\r\n    IonToolbar,\r\n    IonContent,\r\n    IonCard,\r\n    IonCardHeader,\r\n    IonCardContent,\r\n    IonItem,\r\n    IonLabel,\r\n    IonInput,\r\n    IonDatetime,\r\n    IonSelect,\r\n    IonSelectOption,\r\n    IonButton,\r\n    IonIcon,\r\n    IonAlert,\r\n    IonToast,\r\n    IonLoading,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol\r\n} from '@ionic/react';\r\nimport LeftMenu from '../../components/left-menu';\r\nimport { getDatosLecturaEditar, actualizarLectura, obtenerPromedioEditar} from '../../controller/apiController';\r\nimport { saveOutline, checkmarkCircleOutline, chevronBackCircleOutline, star, } from 'ionicons/icons';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useTakePhoto, generarFechas, obtenerBase64, generarAniosPosterior, generarAnios, obtenerCoordenadas } from '../../utilities';\r\nimport { cerrarSesion, extraerDatosEditarLectura, verifyingSession } from '../../controller/storageController';\r\nconst EditarLecturaAgua: React.FC = () => {\r\n    const history = useHistory();\r\n    const [datosContribuyente, setDatosContribuyente] = useState(Object)\r\n    const [loading, setLoading] = useState(false);\r\n    const [anomalias, setAnomalias] = useState<any[]>([]);\r\n    const [bloquearCampos, setBloquearDatos] = useState(true);\r\n    const [tipoLectura, setTipoLectura] = useState(Number);\r\n    const [anhioLectura, setAnhioLectura] = useState(Number);\r\n    const [mesLectura, setMesLectura] = useState(Number)\r\n    const [validarAnhio, setValidarAnhio] = useState(Number);\r\n    const [validarMes, setValidarMes] = useState(Number);\r\n    const [message, setMessage] = useState(String);\r\n    const [listaAnhios, setListaAnhios] = useState<any[]>([]);\r\n    const [listaMeses, setListaMeses] = useState<any[]>([]);\r\n    const [consumo, setConsumo] = useState(Number);\r\n    const [lecturaActual, setLecturaActual] = useState(Number);\r\n    const [lecturaAnterior, setLecturaAnterior] = useState(Number);\r\n    const [tipoAnomalia, setTipoAnomalia] = useState(Number);\r\n    const [fechaLectura, setFechaLectura] = useState(Date);\r\n    const [tipoMensaje, setTipoMensaje] = useState(String);\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [connectionError, setConnectionError] = useState(false);\r\n    const [block, setBlock] = useState(false);\r\n    const [tokenExpired, setTokenExpered] = useState(false);\r\n    const [traceError, setTraceError] = useState(String);\r\n    //INDEV: Actualizar el registro de la lectura\r\n    const [bloqueoAnomalias, setBloqueoAnomalias] = useState(false);\r\n    const [seleccionAnomalia,setSeleccionAnomalia] = useState(0);\r\n    const [promedioLectura,setPromedioLectura] = useState(Number);\r\n    const [consumoMinimo,setConsumoMinimo] = useState(20);\r\n    const [lecturaRegistrada,setLecturaRegistrada] = useState(Number);\r\n    let consumoDatos = 0;\r\n    const fecha = new Date();\r\n    const alertRetriButtons = [\r\n        { text: \"Reintentar\", handler: () => { setMessage(\"\"); traceError == \"onLoad\" ? cargarDatos() : guardarLectura(); } },\r\n        { text: \"Aceptar\", handler: () => { setTraceError(\"\"); setMessage(\"\"); } }\r\n    ]\r\n    const alertAcceptButtons = [{ text: \"Aceptar\", handler: () => { } }];\r\n    const isSessionValid = () => {\r\n        let valid = verifyingSession(); //Verificamos si existe algun token guardado\r\n        setTokenExpered(!valid);        //Validacion para ver si el token expiro (Si valid == false se lanza el error de la sesion)\r\n        setBlock(!valid);               //Si existe el token\r\n    }\r\n    \r\n    const cargarDatos = async () => {\r\n        setLoading(true);\r\n        let result = extraerDatosEditarLectura();\r\n        setDatosContribuyente(result);\r\n        //Obtenemos el promedio de las lecturas\r\n        await getDatosLecturaEditar()\r\n            .then((result) => {\r\n                if (result.Status) {\r\n                    //Me falta contrato vigente\r\n                    console.log(result.Mensaje);\r\n                    setDatosContribuyente(result.Mensaje[0]);\r\n                    generarFechasAnhios(parseInt(result.Mensaje[0].A_no));\r\n                    filtrarLectura(result)\r\n\r\n                } else {\r\n                    setTipoMensaje(\"Mensaje\");\r\n                    setMessage(\"No se encontraron resultados.\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                let errorMessage = String(err.message);\r\n                setConnectionError(errorMessage.includes(\"API\"));\r\n                let sessionValid = errorMessage.includes(\"Sesion no valida\");\r\n                console.log(\"El toke es valido ?\", sessionValid)\r\n                setTokenExpered(sessionValid);\r\n                if (!sessionValid) {\r\n                    setTraceError(\"onLoad\");\r\n                    setMessage(err.message)\r\n                    setTipoMensaje(\"ERROR\");\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n    }\r\n    useEffect(() => { isSessionValid(); }, [anhioLectura]);\r\n    useEffect(() => { logOut(tokenExpired); }, [tokenExpired])\r\n    const logOut = (valid: boolean) => {\r\n        if (valid) {\r\n            setTipoMensaje(\"Sesión no valida\");\r\n            setMessage(\"Inicie sesión por favor\\nRegresando...\");\r\n            setTimeout(async () => {\r\n                setMessage('');\r\n                setTipoMensaje('MENSAJE')\r\n                await cerrarSesion().then((result) => {\r\n                    history.replace(\"/home\");\r\n                })\r\n            }, 2500)\r\n        } else {\r\n            cargarDatos();\r\n        }\r\n    }\r\n    const filtrarLectura = async (result: any) => {\r\n        console.log(result.tipoLectura[0].Valor);\r\n        result.bloqueoCampos[0].Valor == 0 ? setBloquearDatos(false) : setBloquearDatos(true);\r\n        setTipoLectura(result.tipoLectura[0].Valor);\r\n        setAnomalias(result.Anomalias);\r\n        let lectura = result.tipoLectura[0].Valor;\r\n        if (lectura == 1 || lectura == 2 || lectura == 3) {\r\n            setAnhioLectura(result.Mensaje[0]['A_no']);\r\n            setMesLectura(result.Mensaje[0]['Mes'])\r\n            setValidarAnhio(result.Mensaje[0]['A_no']);\r\n            setValidarMes(result.Mensaje[0]['Mes']);\r\n            //Obtenemos el promedio\r\n            await obtenerPromedioEditar(result.Mensaje[0]['Padr_onAgua']).then((result)=>{\r\n                setPromedioLectura(result);\r\n            }).catch((e)=>{\r\n                setPromedioLectura(0);\r\n            });\r\n        } else {\r\n            //Mensaje de error\r\n            setTipoMensaje('ERROR')\r\n            setMessage('Consulte con su administrador que el código de lecturas de agua se encuentre en el rango de 1-3');\r\n            setTimeout(() => {\r\n                history.goBack();\r\n            }, 2000)\r\n        }\r\n        let datosLectura = result.Mensaje[0];\r\n        setConsumo(datosLectura.Consumo);\r\n        consumoDatos = datosLectura.Consumo;\r\n        setLecturaActual(datosLectura.LecturaActual);\r\n        setLecturaRegistrada(datosLectura.LecturaActual);\r\n        setLecturaAnterior(datosLectura.LecturaAnterior);\r\n        datosLectura.Observaci_on == null ? setTipoAnomalia(0) : setTipoAnomalia(datosLectura.Observaci_on);\r\n        setFechaLectura(datosLectura.FechaLectura);\r\n    }\r\n    const generarFechasAnhios = async (anio: number) => {\r\n        let data = await generarFechas(anio);\r\n        setListaAnhios(data[1].Anios);\r\n        setListaMeses(data[0].Meses);\r\n    }\r\n    const handleCalcularconsumo = (consumido: number) => {\r\n        //Calculando el consumo\r\n        let result = consumido - lecturaAnterior;\r\n        setLecturaActual(consumido);\r\n        isNaN(result) ? setConsumo(0) : setConsumo(result)\r\n        \r\n    }\r\n    const guardarLectura = async () => {\r\n        setLoading(true);\r\n        //localStorage.setItem(\"@Storage::userToken\",\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczpcL1wvYXBpLnNlcnZpY2lvZW5saW5lYS5teFwvYXBpLW1vdmlsXC9sb2dpbi1wcmVzaWRlbnRlUHJ1ZWJhIiwiaWF0IjoxNjIxMzY1OTk0LCJleHAiOjE2MjE0MDE5OTQsIm5iZiI6MTYyMTM2NTk5NCwianRpIjoiV0w3VE9EeUZpQkhWZzZqRSIsInN1YiI6MzgwMCwicHJ2IjoiODdlMGFmMWVmOWZkMTU4MTJmZGVjOTcxNTNhMTRlMGIwNDc1NDZhYSJ9.5aG5sSnugBRIPvmj0QcbhHuqxPfBRkwrxN74bGz1uho\");\r\n        console.log(anhioLectura, mesLectura,datosContribuyente.Padr_onAgua);\r\n        let consumoCalculado = procesoConsumo();\r\n        if(consumoCalculado == 0){\r\n            setTipoMensaje(\"MENSAJE\");\r\n            setMessage(\"No se ha calculado el consumo\");\r\n            setLoading(false);\r\n        }else if(consumoCalculado < 0){\r\n            setTipoMensaje(\"MENSAJE\");\r\n            setMessage(\"La lectura actual no puede ser menor a la anterior\");\r\n            setLoading(false);\r\n        }else{\r\n            //Enviamos los datos a editar\r\n            let data = {\r\n                anhioLectura: anhioLectura,\r\n                consumo: consumoCalculado,\r\n                fechaLectura: fechaLectura,\r\n                lecturaActual: lecturaActual,\r\n                lecturaAnterior: lecturaAnterior,\r\n                mesLectura: mesLectura,\r\n                tipoAnomalia: tipoAnomalia,\r\n                validarAnhio: validarAnhio,\r\n                validarMes: validarMes,\r\n                idPadron: datosContribuyente.Padr_onAgua,\r\n            }\r\n            console.log(data);\r\n            setLoading(false);\r\n                 /*await actualizarLectura(data)\r\n            .then((result) => {\r\n                setShowToast(true);\r\n                console.log(result)\r\n            })\r\n            .catch((err) => {\r\n                let errorMessage = String(err.message);\r\n                setConnectionError(errorMessage.includes(\"API\"));\r\n                let sessionValid = errorMessage.includes(\"Sesion no valida\");\r\n                setTokenExpered(sessionValid);\r\n                if (!sessionValid) {\r\n                    setTraceError(\"onUpdate\");\r\n                    setTipoMensaje(\"ERROR\");\r\n                    setMessage(err.message)\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            })*/\r\n        }\r\n   \r\n    }\r\n    const regresarPantalla = async () => {\r\n        if (showToast) {\r\n            setShowToast(false);\r\n            history.replace('/historial-lecturas.page');\r\n        }\r\n    }\r\n    //Manejadores de \r\n    const handleSelectMes = (mes: string) => {\r\n        setMesLectura(parseInt(mes));\r\n    }\r\n    const handleSelectAnio = (anio: string) => {\r\n        setAnhioLectura(parseInt(anio));\r\n    }\r\n    const handlebtnRegresar = () => {\r\n        history.replace(\"/historial-lecturas.page\");\r\n        console.log(\"Regresando\");\r\n    }\r\n    const handleSelectAnomalia = (selectAnomalia: number) =>{\r\n        setSeleccionAnomalia(selectAnomalia);\r\n        setTipoAnomalia(selectAnomalia);\r\n        anomalias.map((item,index)=>{\r\n            if(item.id == selectAnomalia){\r\n                if(parseInt(item.ActualizarAdelante) == 1 || parseInt(item.ActualizarAtras) == 1){\r\n                    setBloqueoAnomalias(false);\r\n                }else{\r\n                    setBloqueoAnomalias(true);\r\n                    setLecturaActual(lecturaAnterior);\r\n                }\r\n                setConsumoMinimo(item.Minima);\r\n                console.log(item.Minima + \"Consumo calculado\");\r\n                if(lecturaActual != 0){\r\n                    setConsumo(procesoConsumo());\r\n                }\r\n                if(selectAnomalia == 24){\r\n                    setConsumo(promedioLectura);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    const handleCancelAnomalia = () =>{\r\n        setTipoAnomalia(0);\r\n        setSeleccionAnomalia(0);\r\n        setBloqueoAnomalias(false);\r\n        handleCalcularconsumo(lecturaActual);\r\n        setLecturaActual(lecturaRegistrada);\r\n    }\r\n    const procesoConsumo = () => {\r\n        let consumoProcesado = 0;\r\n        console.log(seleccionAnomalia);\r\n        if( seleccionAnomalia != 0){\r\n            if(bloqueoAnomalias){ // este es el proceso de las anomalias sin capturas\r\n                if (promedioLectura < consumoMinimo){\r\n                    consumoProcesado = consumoMinimo;\r\n                }else{\r\n                    consumoProcesado = promedioLectura;\r\n                }\r\n            }else{ //este el el proceso de las anomalias con captura\r\n                if(consumo < promedioLectura){\r\n                    consumoProcesado = promedioLectura;\r\n                }\r\n                if(promedioLectura < consumoMinimo){\r\n                    consumoProcesado = consumoMinimo;\r\n                }\r\n                if(consumoMinimo < consumo){\r\n                    consumoProcesado =  consumo;\r\n                }\r\n            }\r\n        }else{ // este es el proceso de captura normal\r\n            if(consumo < consumoMinimo && consumo > 0){\r\n                consumoProcesado = consumoMinimo;\r\n            }else{\r\n                consumoProcesado = consumo;\r\n            }\r\n        }\r\n        if(tipoAnomalia == 47){\r\n            consumoProcesado = consumoMinimo;\r\n        }\r\n        if(tipoAnomalia == 99){\r\n            if(lecturaActual < consumoMinimo){\r\n                consumoProcesado = consumoMinimo;\r\n            }else{\r\n                consumoProcesado = lecturaActual;\r\n            }\r\n        }\r\n        if(tipoAnomalia == 24){\r\n            consumoProcesado = promedioLectura;\r\n        }\r\n        \r\n        setConsumo(consumoProcesado);\r\n        return consumoProcesado;\r\n    }\r\n    return (\r\n        <IonPage>\r\n            <LeftMenu />\r\n            <IonHeader>\r\n                <IonToolbar color=\"danger\" >\r\n                    <IonTitle>Editar lectura</IonTitle>\r\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\r\n                        <IonMenuButton ></IonMenuButton>\r\n                    </IonButtons>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n            <IonContent>\r\n                <IonCard>\r\n                    <IonCardHeader>\r\n                        <div className=\"datosContribuyete\">\r\n                            <h3>{datosContribuyente.Nombre}</h3>\r\n                            <p>Contrato: {datosContribuyente.ContratoVigente}, &nbsp;&nbsp; Medidor: {datosContribuyente.Medidor}, &nbsp;&nbsp; Toma: {datosContribuyente.Toma}</p>\r\n                            <p>Municipio: {datosContribuyente.Municipio}, &nbsp;&nbsp; Localidad: {datosContribuyente.Localidad}</p>\r\n                            <p>Colonia: {datosContribuyente.Colonia} &nbsp;&nbsp; Calle: {datosContribuyente.Calle} &nbsp;&nbsp; Exterior: {datosContribuyente.Exterior} &nbsp;&nbsp; Interior: {datosContribuyente.Interior}</p>\r\n                        </div>\r\n                    </IonCardHeader>\r\n                    <IonCardContent>\r\n                        <br />\r\n                        <IonItem>\r\n                            <IonLabel> Lectura anterior:</IonLabel>\r\n                            <IonInput disabled value={lecturaAnterior}></IonInput>\r\n                        </IonItem>\r\n                        <br />\r\n                        <IonItem>\r\n                            <IonLabel>Lectura actual:</IonLabel>\r\n                            <IonInput disabled  value={lecturaActual} onIonChange={e => { handleCalcularconsumo(parseFloat(e.detail.value + \"\")) }}></IonInput>\r\n                        </IonItem>\r\n                        <br />\r\n                        <IonItem>\r\n                            <IonLabel>Consumo :</IonLabel>\r\n                            <IonInput disabled value={consumo}></IonInput>\r\n                        </IonItem>\r\n                        <br />\r\n                        <IonItem>\r\n                            <IonLabel>Fecha de lectura: </IonLabel>\r\n                            <IonDatetime disabled displayFormat=\"DD/MM/YYYY\" value={fechaLectura}></IonDatetime>\r\n                        </IonItem>\r\n                        <br />\r\n                        <IonItem>\r\n                            <IonLabel>Anomalía:</IonLabel>\r\n                            <IonSelect \r\n                                disabled\r\n                                placeholder=\"Seleccione uno\" \r\n                                interface=\"action-sheet\" \r\n                                cancelText=\"Cancelar\" \r\n                                value={tipoAnomalia}\r\n                                onIonCancel = {handleCancelAnomalia}\r\n                                onIonChange = { e => { handleSelectAnomalia(e.detail.value) } } >\r\n                                <IonSelectOption value={null}></IonSelectOption>\r\n                                {\r\n                                    //Lista de anomalias\r\n                                    anomalias.map((item, index) => {\r\n                                        return <IonSelectOption key={index} value={item.id}>\r\n                                            {`${item.clave}-${item.descripci_on}`}\r\n                                        </IonSelectOption>\r\n                                    })\r\n                                }\r\n                            </IonSelect>\r\n                        </IonItem>\r\n                        <br />\r\n                        <IonItem>\r\n                            <IonLabel> Mes: </IonLabel>\r\n                            <IonSelect disabled={bloquearCampos} interface=\"action-sheet\" placeholder=\"Seleccione uno\" cancelText=\"Cancelar\" value={mesLectura} onIonChange={e => { handleSelectMes(e.detail.value) }}>\r\n                                {\r\n                                    listaMeses.map((item, index) => {\r\n                                        return <IonSelectOption key={index} value={item.id}>\r\n                                            {item.mes}\r\n                                        </IonSelectOption>\r\n                                    })\r\n                                }\r\n                            </IonSelect>\r\n                        </IonItem>\r\n                        <br />\r\n                        <IonItem>\r\n                            <IonLabel>Año: </IonLabel>\r\n                            <IonSelect disabled={bloquearCampos} interface=\"action-sheet\" placeholder=\"Seleccione uno\" cancelText=\"Cancelar\" value={anhioLectura} onIonChange={e => { handleSelectAnio(e.detail.value) }}>\r\n                                {\r\n                                    listaAnhios.map((item, index) => {\r\n                                        return <IonSelectOption key={index} value={item.anio}>\r\n                                            {item.anio}\r\n                                        </IonSelectOption>\r\n                                    })\r\n                                }\r\n                            </IonSelect>\r\n                        </IonItem>\r\n                        <br />\r\n                        <div className=\"centrar\">\r\n                            <IonGrid>\r\n                                <IonRow>\r\n                                    <IonCol>\r\n                                        <IonButton color=\"secondary\" onClick={handlebtnRegresar} >Regresar<IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon> </IonButton>\r\n                                    </IonCol>\r\n                                </IonRow>\r\n                            </IonGrid>\r\n\r\n\r\n                        </div>\r\n                    </IonCardContent>\r\n                </IonCard>\r\n                <IonAlert\r\n                    cssClass=\"my-custom-class\"\r\n                    header={tipoMensaje}\r\n                    message={message}\r\n                    isOpen={message.length > 0}\r\n                    backdropDismiss={false}\r\n                    buttons={connectionError ? alertRetriButtons : [{ text: \"Aceptar\", handler: () => { setMessage(\"\") } }]}\r\n                />\r\n                <IonToast\r\n                    isOpen={showToast}\r\n                    onDidDismiss={regresarPantalla}\r\n                    message=\"Los datos se actualizaron correctamente\"\r\n                    duration={2000}\r\n                    position=\"top\"\r\n                    buttons={[{ side: \"end\", icon: checkmarkCircleOutline, handler: regresarPantalla }]}\r\n                ></IonToast>\r\n                <IonLoading\r\n                    cssClass=\"my-custom-class\"\r\n                    isOpen={loading}\r\n                    onDidDismiss={() => { setLoading(false); }}\r\n                    message=\"Por favor espere\"\r\n                />\r\n            </IonContent>\r\n        </IonPage>\r\n    )\r\n}\r\n\r\nexport default EditarLecturaAgua;","import { useIonToast,IonAlert, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonCheckbox, IonChip, IonCol, IonContent, IonGrid, IonHeader, IonImg, IonInput, IonItem, IonLabel, IonLoading, IonMenuButton, IonPage, IonRippleEffect, IonRow, IonText, IonTextarea, IonTitle, IonToolbar, IonIcon, useIonViewWillEnter } from '@ionic/react'\r\nimport { useEffect, useState } from 'react'\r\nimport LeftMenu from '../../components/left-menu';\r\nimport { crearReporte, guardarReporteV2 } from '../../controller/apiController';\r\nimport { verifyingSession, cerrarSesion, getContratoReporte } from '../../controller/storageController';\r\nimport { useTakePhoto, obtenerBase64, obtenerCoordenadas } from '../../utilities';\r\nimport { useHistory } from 'react-router';\r\nimport './reportes.page.css';\r\nimport { checkmarkCircle, chevronBackCircleOutline, saveOutline } from 'ionicons/icons';\r\nimport MenuLeft from '../../components/left-menu';\r\n\r\nconst Reportes: React.FC = () => {\r\n    const history = useHistory();\r\n    const [ loading, setLoading ] = useState(false);\r\n    const [ message, setMessage ] = useState(String);\r\n    const [ tipoMensaje, setTipoMensaje ] = useState(String);\r\n    const [ block, setBlock ] = useState(false);\r\n    const [ tokenExpired, setTokenExpired ] = useState(false);\r\n    const [ connectionError, setConnectionError ] = useState(false);\r\n    const [ contrato,setContrato ] = useState(String);\r\n    const [ fallaAdministrativa, setFallaAdministrativa ] = useState(false);\r\n    const [ arregloFotos, setArregloFotos ] = useState<string[]>([]);\r\n    const [ fotoActiva, setFotoActiva ] = useState('');\r\n    const [ indexFoto, setIndexFoto ] = useState(Number);\r\n    const [ fotosCodificadas, setFotosCodificadas ] = useState<any[]>([]);\r\n    const [pressentToast, dismissToast ] = useIonToast();\r\n    const [ activarGalaria, setActivarGaleria ] = useState(false);\r\n    const [ ErrorUI, setErrorUI ] = useState(\"\");\r\n    //NOTE: manejadores de los inputs\r\n    const [colonia, setColonia] = useState(String);\r\n    const [calle, setCalle] = useState(String);\r\n    const [numero, setNumero] = useState(String);\r\n    const [ descripcion, setDescripcion ] = useState( String );\r\n    const [activarMenu,setActivarMenu] = useState(false);\r\n\r\n    const { takePhoto } = useTakePhoto();\r\n    //Verificando la session\r\n    const buttonsErrorConnection = [\r\n        { text: \"Reintentar\", handler: () => { setMessage(\"\"); handleBtnCrearReporte(); } },\r\n        { text: \"Aceptar\", handler: () => { setMessage(\"\"); console.log(\"Cancelando\") } }\r\n    ]\r\n    const isSessionValid = async () => {\r\n        let valid = verifyingSession();\r\n        setTokenExpired(!valid);\r\n        setBlock(!valid);\r\n    }\r\n    useIonViewWillEnter(()=>{setActivarMenu(true)});\r\n    useEffect(() => { isSessionValid() }, []);\r\n    useEffect(() => { logOut() }, [tokenExpired]);\r\n    useEffect(()=>{\r\n        setActivarGaleria( arregloFotos.length > 0 );\r\n    },[arregloFotos])\r\n    //Manejadores de la interfaz\r\n    const logOut = async () => {\r\n        if (tokenExpired) {\r\n            setTipoMensaje(\"Sesión no valida\");\r\n            setMessage(\"Inicie sesión por favor\\nRegresando...\");\r\n            setTimeout(() => {\r\n                cerrarSesion()\r\n                    .then((result) => {\r\n                        setMessage('');\r\n                        history.replace('/home');\r\n                    })\r\n            }, 2500)\r\n        }\r\n    }\r\n    const handleBtnCrearReporte = async () => {\r\n        setLoading(true);\r\n        let data = {\r\n            colonia: colonia,\r\n            calle: calle,\r\n            numero: numero,\r\n            descripcion: descripcion,\r\n            contrato: contrato,\r\n            fallaAdministrativa: fallaAdministrativa ? 1 : 0,\r\n        }\r\n        await crearReporte(data)\r\n            .then((result) => {\r\n                setConnectionError(false);\r\n                limpiarPantalla();\r\n                setTipoMensaje(\"Mensaje\");\r\n                setMessage(result);\r\n            }).catch((err) => {\r\n                setTipoMensaje(\"ERROR\");\r\n                let messageError = String(err.message);\r\n                setConnectionError(messageError.includes(\"API\"));\r\n                let sessionExpired = messageError.includes(\"Sesion no valida\");\r\n                setTokenExpired(sessionExpired);\r\n                if (!sessionExpired) {\r\n                    setMessage(messageError);\r\n                } else {\r\n                    console.log(\"El token ya expiro\")\r\n                }\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            })\r\n    }\r\n    const generarGaleria = () => {\r\n        if ( activarGalaria ) {\r\n            let data =\r\n                <div>\r\n                    <br></br>\r\n                    {\r\n                        arregloFotos.length > 0 ?\r\n                            <IonItem>\r\n                                <IonRow>\r\n                                    {\r\n                                        arregloFotos.map((item, index) => {\r\n                                            return <IonCol key={index} className = {\"ion-activatable ripple-parent \" + ( indexFoto == index ? \"selected\" : \"\")} >\r\n                                                        <IonImg src={item} onClick={() => { cambiarFotoActiva(item, index) }} className=\"imgFormat\"></IonImg>\r\n                                                        <IonRippleEffect></IonRippleEffect>\r\n                                                    </IonCol>\r\n                                        })\r\n                                    }\r\n                                </IonRow>\r\n                            </IonItem> : <></>\r\n                    }\r\n                </div>;\r\n            return data;\r\n        }\r\n    }\r\n    const cambiarFotoActiva = (foto: string, index: number) => {\r\n        setFotoActiva(foto);\r\n        setIndexFoto(index);\r\n    }\r\n    const handleAbrirCamera = async () => {\r\n        setLoading(true);\r\n        await takePhoto()\r\n            .then(async (result) => {\r\n                \r\n                if (arregloFotos.length <= 2) {\r\n                    setLoading(true);\r\n                    agregarImagenEncode(result.webPath + \"\");\r\n                }\r\n                else {\r\n                    setLoading(false)\r\n                    setMessage(\"Solo se permiten 3 fotos como máximo\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                let errorType = err.message + \"\";\r\n                if (errorType.includes(\"denied\")) {\r\n                    setMessage(\"La aplicación no tiene permisos para usar la cámara\")\r\n                }\r\n            }).finally(() => { setLoading(false) })\r\n    }\r\n    const agregarImagenEncode = async (imgDir: string) => {\r\n        await obtenerBase64(imgDir).then((result) => {\r\n            setFotoActiva(imgDir);\r\n            setArregloFotos(fotosEvidencia => [...fotosEvidencia, imgDir]);\r\n            setIndexFoto(arregloFotos.length);\r\n            setFotosCodificadas(fotosCodificadas => [...fotosCodificadas, result])\r\n        }).finally(() => { setLoading(false) })\r\n    }\r\n    const borrarFotoEvidencia = () => {\r\n        let fotosTemporal = new Array;\r\n        let fotosEncoded = new Array;\r\n        arregloFotos.map((item, index) => {\r\n            if (index != indexFoto) {\r\n                fotosTemporal.push(item);\r\n            }\r\n        });\r\n        fotosCodificadas.map((item, index) => {\r\n            if (index != indexFoto) {\r\n                fotosEncoded.push(item);\r\n            }\r\n        })\r\n        setFotosCodificadas(fotosEncoded);\r\n        setArregloFotos(fotosTemporal);\r\n        setFotoActiva('');\r\n        pressentToast({\r\n            message: \"Se elimino la foto de la lista'\",\r\n            duration: 2000,\r\n            position: 'top',\r\n            buttons: [\r\n                {\r\n                    side: 'start',\r\n                    icon: checkmarkCircle,\r\n                }\r\n            ]\r\n        })\r\n    }\r\n    const validarDatos = () =>{\r\n        setMessage(\"\");\r\n        let error = \"\";\r\n        if( calle.trim().length == 0 ){\r\n            error += \"Cl,\";\r\n        }\r\n        if( colonia.trim().length == 0 ){\r\n            error += \"C,\";\r\n        }\r\n        if( numero.trim().length == 0 ){\r\n            error += \"N,\";\r\n        }\r\n        if ( descripcion.trim().length == 0 ){\r\n            error += \"D,\";\r\n        }\r\n        //NOTE: validamos que los datos no esten en 0\r\n        error.length == 0 ? enviarReporte() : lanzarMensaje(\"Mensaje\",\"Favor de ingresar los campos requeridos\", error);\r\n\r\n    }\r\n    const enviarReporte = async () =>{\r\n        //NOTE: Recolectamos los datos\r\n        setLoading(true);\r\n        if(fotosCodificadas.length > 0 && fotosCodificadas.length < 4 ){\r\n            let Padron = getContratoReporte()\r\n            await obtenerCoordenadas().then( async ( coordenadas )=>{\r\n                let datos = {\r\n                    'Calle':calle,\r\n                    'Colonia':colonia,\r\n                    'Numero':numero,\r\n                    'Descripcion':descripcion,\r\n                    'Latitud':String(coordenadas.latitude),\r\n                    'Longitud':String(coordenadas.longitude),\r\n                    'FallaAdministrativa':0,\r\n                    'Estatus':1,\r\n                    'Fotos':fotosCodificadas,\r\n                    'Padron':String(Padron),\r\n                };\r\n                await guardarReporteV2(datos)\r\n                .then(( result )=>{\r\n                    limpiarPantalla();\r\n                })\r\n                .catch(( error )=>{\r\n                    setTipoMensaje(\"Mensaje\");\r\n                    setMessage(error.mensaje);\r\n                }).finally(()=>{\r\n                    setLoading(false);\r\n                })\r\n            })\r\n        }else{\r\n            setLoading(false);\r\n            if(fotosCodificadas.length == 0){\r\n                setTipoMensaje(\"Mensaje\");\r\n                setMessage(\" Debes capturar almenos una evidencia \");\r\n                setConnectionError(false);\r\n            }\r\n            if(fotosCodificadas.length >= 4){\r\n                setTipoMensaje(\"Mensaje\");\r\n                setMessage(\" Solo se permiten 3 evidencias maximo \");\r\n                setConnectionError(false);\r\n            }\r\n        }\r\n    }\r\n    const lanzarMensaje = ( tipoMensaje: string, mensaje: string, error = \"\") =>{\r\n        setTipoMensaje( tipoMensaje );\r\n        setMessage( mensaje );\r\n        setErrorUI( error );\r\n    }\r\n    const btnRegresar = () => {\r\n        history.goBack();\r\n    }\r\n    const limpiarPantalla = () =>{\r\n        \r\n        setColonia(\"\");\r\n        setCalle(\"\");\r\n        setNumero(\"\");\r\n        setDescripcion(\"\");\r\n        setContrato(\"\");\r\n        setFotoActiva(\"\");\r\n        setFotosCodificadas([]);\r\n        setArregloFotos([]);\r\n        setTipoMensaje(\"Mensaje\");\r\n        setMessage(\"Reporte guardado\\nRegresando\");\r\n        setTimeout(()=>{\r\n            history.goBack();\r\n        }, 1000);\r\n\r\n    }\r\n    return (\r\n        <IonPage >\r\n            <LeftMenu />\r\n            {\r\n                activarMenu ? \r\n                <MenuLeft />: <></>\r\n            }\r\n            <IonHeader>\r\n                <IonToolbar color=\"danger\" >\r\n                    <IonTitle>Reportar</IonTitle>\r\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\r\n                        <IonMenuButton></IonMenuButton>\r\n                    </IonButtons>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n            <IonContent >\r\n                {/*INDEV: Pantalla de para el reporte */  }\r\n                <div style={{paddingLeft:10, paddingRight:10}} >\r\n                    <br></br>\r\n                    <IonGrid className = {'centerInput ' + ( ErrorUI.includes(\"C,\") ? \"errorInput\" : \"\" )} >\r\n                        <IonRow>\r\n                            <IonCol size='2' className = 'centerItems' >\r\n                                <IonLabel className = {'inputLabel'} > Colonia: </IonLabel>\r\n                            </IonCol>\r\n                            <IonCol size='10' >\r\n                                <IonInput value={colonia} onIonChange = { text => { setColonia(String(text.detail.value))} } ></IonInput>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>\r\n                    <br></br>\r\n                    <IonGrid className = {'centerInput ' + ( ErrorUI.includes(\"Cl,\") ? \"errorInput\" : \"\" ) } >\r\n                        <IonRow>\r\n                            <IonCol size='2' className = 'centerItems' >\r\n                                <IonLabel className='inputLabel' > Calle: </IonLabel>\r\n                            </IonCol>\r\n                            <IonCol size='10' >\r\n                                <IonInput value={calle} onIonChange = { text => { setCalle( String(text.detail.value) )}} >  </IonInput>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>\r\n                    <br></br>\r\n                    <IonGrid className = {'centerInput ' + ( ErrorUI.includes(\"N,\") ? \"errorInput\" : \"\" ) } >\r\n                        <IonRow>\r\n                            <IonCol size='2' className = 'centerItems' >\r\n                                <IonLabel className='inputLabel' > Numero: </IonLabel>\r\n                            </IonCol>\r\n                            <IonCol size='10' >\r\n                                <IonInput value = { numero } onIonChange = { text => {setNumero( String(text.detail.value))}} >  </IonInput>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>\r\n                    <br/><br/>\r\n                    <IonGrid className = {'centerInput ' + ( ErrorUI.includes(\"D,\") ? \"errorInput\" : \"\" ) } >\r\n                        <IonRow>\r\n                            <IonCol size='12' className='centrado descrip' >\r\n                                <IonLabel > Descripción </IonLabel>\r\n                            </IonCol>\r\n                            <IonCol size='12' >\r\n                                <IonTextarea value = { descripcion } onIonChange = { text => { setDescripcion(String(text.detail.value))}}></IonTextarea>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>\r\n                    <br></br>\r\n                    { generarGaleria() }\r\n                    {\r\n                        fotoActiva != '' ?\r\n                        <IonItem>\r\n                            <IonCard className=\"centrar\">\r\n                                <IonImg src={fotoActiva} />\r\n                                <IonCardContent >\r\n                                    <IonButtons>\r\n                                        <IonButton color=\"secondary\" onClick={() => { setFotoActiva('') }}>Cerrar</IonButton>\r\n                                        <IonButton color=\"danger\" onClick={() => { borrarFotoEvidencia() }} >Eliminar</IonButton>\r\n                                    </IonButtons>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n                        </IonItem> : <></>\r\n                    }\r\n                    <IonGrid >\r\n                        <IonRow>\r\n                            <IonCol size='12' className='centrado' >\r\n                                <IonButton color='primary' expand='block'  onClick={ handleAbrirCamera } > Evidencia </IonButton>\r\n                                <IonRippleEffect></IonRippleEffect>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>\r\n                    <IonGrid>\r\n                        <IonRow>\r\n                            <IonCol size='6' >\r\n                                <IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon>\r\n                                <IonButton color='secondary' expand='block' onClick={ btnRegresar }> Regresar </IonButton>\r\n                            </IonCol>\r\n                            <IonCol size='6' >\r\n                                <IonButton color='danger' expand='block' onClick={ validarDatos }> Guardar</IonButton>\r\n                                <IonIcon icon={saveOutline} slot=\"end\"></IonIcon>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>\r\n                </div>\r\n                <IonAlert\r\n                    cssClass=\"my-custom-class\"\r\n                    header={ tipoMensaje }\r\n                    message={ message }\r\n                    isOpen={ message.length > 0 }\r\n                    backdropDismiss={ false }\r\n                    buttons={connectionError ? buttonsErrorConnection : [{ text: \"Aceptar\", handler: () => { setMessage(\"\"); console.log(\"Cancelando\") } }]}\r\n                />\r\n                <IonLoading\r\n                    cssClass=\"my-custom-class\"\r\n                    isOpen={loading}\r\n                    onDidDismiss={() => { setLoading(false); }}\r\n                    message=\"Por favor espere\"\r\n                />\r\n            </IonContent>\r\n        </IonPage>\r\n    )\r\n}\r\n\r\nexport default Reportes;","import React, { useEffect, useState } from \"react\";\r\nimport { \r\n    IonPage, \r\n    IonHeader, \r\n    IonToolbar, \r\n    IonTitle, \r\n    IonButtons, \r\n    IonMenuButton, \r\n    IonContent, \r\n    IonCard, \r\n    IonCardHeader, \r\n    IonLabel,\r\n    IonGrid,\r\n    IonRow, \r\n    IonCol,\r\n    IonItem,\r\n    IonSelect,\r\n    IonSelectOption,\r\n    IonInput,\r\n    IonButton,\r\n    IonCardContent,\r\n    IonItemDivider,\r\n    IonIcon,\r\n    IonList,\r\n    IonAlert,\r\n    IonLoading,\r\n    useIonViewWillEnter,\r\n    IonNote,\r\n    useIonViewDidLeave,\r\n} from \"@ionic/react\";\r\nimport MenuLeft from \"../../components/left-menu\";\r\nimport { obtenerDatosCliente, verifyingSession, getClienteNombreCorto, cerrarSesion, getUsuario, setContratoReporte } from \"../../controller/storageController\";\r\nimport { solicitarPermisos, verifyCameraPermission, verifyGPSPermission, ContratosListaContratoReporte, buscarMedidorSinFiltro } from \"../../controller/apiController\";\r\nimport { zeroFill } from '../../utilities';\r\nimport { searchCircle } from 'ionicons/icons';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ListaContratoReportes : React.FC = () => {\r\n    const [ activarMenu, setActivarMenu ] = useState( false );\r\n    const [ tokenExpirado , setTokenExpirado ] = useState( false );\r\n    const [ nombreCliente, setClienteNombre ] = useState( String );\r\n    const [ tipoMensaje, setTipoMensaje ] = useState( String );\r\n    const [ mensaje, setMensaje ] = useState(String);\r\n    const [ usuario, setUsuario ] = useState(\"\");\r\n    const [ tipoFiltro, setTipoFiltro ] = useState(1);\r\n    const [ placeHolderFiltro, setPlaceHolderFiltro ] = useState(\"Buscar por contrato\");\r\n    const [ palabraClave, setPalabraClave ] = useState(String);\r\n    const [ botonReintentar, setBotonReintentar ] = useState( false );\r\n    const [ tipoError , setTipoError ] = useState( String );\r\n    const [ cargando, setCargando ] = useState(false);\r\n    const [ listaContratos, setListaContratos ] = useState<any[]>([]);\r\n    const listaEstatus = [\"Activo\",\"Cortado\",\"Baja Temporal\",\"Baja Permanente\",\"Inactivo\",\"Nueva\",\"\",\"\",\"Sin Toma\",\"Multada\"];\r\n    const history = useHistory();\r\n\r\n    const [] = useState( true );\r\n    //NOTE: recursos de la pantalla\r\n    const alertButtons = [\r\n        {\r\n          text: \"Reintentar\", handler: () => {\r\n            setMensaje(\"\");\r\n            buscarContrato(palabraClave);\r\n          }\r\n        },\r\n        {\r\n          text: \"Cancelar\", handle: () => {\r\n            setMensaje(\"\");\r\n          }\r\n        }\r\n      ]\r\n    //NOTE: Session de los hooks\r\n    useIonViewWillEnter(()=>{setActivarMenu( true )});\r\n    useIonViewDidLeave(()=>{setActivarMenu( false )});\r\n    useEffect(()=>{ verificarSession(); },[]);\r\n    useEffect(()=>{ tokenExpirado ? logOut( tokenExpirado ) : prepararPantalla()  },[tokenExpirado])\r\n    //NOTE: seccion de los metodos\r\n    const verificarSession = async () =>{\r\n        //INDEV: obtenemos el token y lo verificamos\r\n        setTokenExpirado(!verifyingSession());\r\n        setClienteNombre( String(await getClienteNombreCorto()));\r\n    }\r\n    const logOut = async(valido:Boolean) =>{\r\n        if (valido) {\r\n            setTipoMensaje(\"Sesión no valida\");\r\n            setMensaje(\"Inicie sesión por favor\\nRegresando...\");\r\n            setTimeout(async () => {\r\n              setTipoMensaje('Error');\r\n              setMensaje('');\r\n              await cerrarSesion()\r\n                .then((result) => {\r\n                  history.replace(\"/home\")\r\n                })\r\n            }, 2500);\r\n          }\r\n    }\r\n    const prepararPantalla = async () => {\r\n        await solicitarPermisos()\r\n        .then( async (  )=>{\r\n            let camera = await verifyCameraPermission();\r\n            let gps = await verifyGPSPermission();\r\n            if(camera && gps ){\r\n                setUsuario(String(getUsuario()));\r\n            }else{\r\n                setMensaje(\"Debe otorgar permisos para usar la aplicación\");\r\n                setTimeout(() => {\r\n                    history.replace(\"/home\")\r\n                }, 2500)\r\n            }\r\n        });\r\n    }\r\n    const handleSelectFiltro = (filtro: number) => {\r\n        setTipoFiltro(filtro);\r\n        filtro == 1 ? setPlaceHolderFiltro(\"Buscar por Medidor\") : setPlaceHolderFiltro(\"Buscar por Contrato\");\r\n    }\r\n    //INDEV: metodo para crear un reporte\r\n    const irReportar = ( item:any ) =>{\r\n        //INDEV: aqui ingresamos el id del contrato \r\n        setContratoReporte(item.id);\r\n        setCargando( true );\r\n        setTimeout(()=>{\r\n            setCargando( false );\r\n            history.push(\"/reportes.page\");\r\n        },500)\r\n    }\r\n    //INDEV: metodo para la busqueda de contratos sin filtros\r\n    const buscarContrato = async (pablabraClave: string) =>{\r\n        //NOTE: damos formato al contrato\r\n        console.log(zeroFill( pablabraClave ));\r\n        await ContratosListaContratoReporte(zeroFill( pablabraClave ))\r\n        .then(( result )=>{\r\n          if(result.length == 0){\r\n            setTipoError(\"Mensaje\");\r\n            setMensaje(\"Sin resultados\");\r\n            setBotonReintentar(false);\r\n          }\r\n            setListaContratos(result);\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error);\r\n        })\r\n        .finally(()=>{\r\n          setCargando(false);\r\n        })\r\n    } \r\n    const buscarMedidor = async ( palabraClave: string ) => {\r\n      await buscarMedidorSinFiltro(zeroFill( palabraClave ))\r\n      .then(( result ) => {\r\n        if(result.length == 0){\r\n          setTipoError(\"Mensaje\");\r\n          setMensaje(\"Sin resultados\");\r\n          setBotonReintentar(false);\r\n        }\r\n        setListaContratos( result );\r\n      })\r\n      .catch(( error )=>{\r\n        console.log(error.message);\r\n      }).finally(()=>{\r\n        setCargando( false );\r\n      })\r\n    }\r\n    const realizarBusqueda = async() =>  {\r\n      if( palabraClave.trim().length == 0 ){\r\n        setTipoMensaje(\"Mensaje\");\r\n        setMensaje(\"Ingrese un contrato o medidor\");\r\n        setBotonReintentar( true );\r\n      }else{\r\n        setCargando(true);\r\n        tipoFiltro == 1 ? buscarContrato( palabraClave ) : buscarMedidor( palabraClave );\r\n      }\r\n      \r\n    }\r\n    return (\r\n        <IonPage>\r\n        {\r\n          activarMenu ? \r\n          <MenuLeft />: <></>\r\n        }\r\n        <IonHeader>\r\n          <IonToolbar color=\"danger\" >\r\n            <IonTitle>{`${usuario} - ${nombreCliente}`}</IonTitle>\r\n            <IonButtons slot=\"start\" className=\"btnMenu\">\r\n              <IonMenuButton ></IonMenuButton>\r\n            </IonButtons>\r\n          </IonToolbar>\r\n        </IonHeader>\r\n        <IonContent>\r\n          <IonCard class=\"ion-text-center\" className=\"box\">\r\n            <IonCardHeader>\r\n              <div>\r\n                <h3> Buscar contrato </h3>\r\n                <IonLabel>Puedes realizar busquedas por:</IonLabel>\r\n                <p>Contrato o Medidor</p>\r\n                <br />\r\n              </div>\r\n              <IonGrid>\r\n              <IonRow>\r\n                  <IonCol>\r\n                  <IonItem>\r\n                    <IonLabel>Filtrar Por:</IonLabel>\r\n                  <IonSelect onIonCancel = {()=>{ setTipoFiltro(1) }} value = { tipoFiltro } placeholder = \"Seleccione el filtro\" interface = \"action-sheet\" onIonChange = {e => {handleSelectFiltro(parseInt(e.detail.value+\"\"))}}>\r\n                      <IonSelectOption value={1} >Contrato</IonSelectOption>\r\n                      <IonSelectOption value={2} >Medidor</IonSelectOption>\r\n                    </IonSelect>\r\n                  </IonItem>\r\n                  </IonCol>\r\n                </IonRow>\r\n                <IonRow>\r\n                  <IonCol size=\"12\">\r\n                    <IonItem>\r\n                      <IonInput type=\"number\" placeholder = {placeHolderFiltro} onIonChange={e => {setPalabraClave(String(e.detail.value)) }}></IonInput>\r\n                    </IonItem>\r\n                  </IonCol>\r\n                </IonRow>\r\n                <IonRow>\r\n                    <IonCol size=\"12\" > \r\n                        <IonButton color=\"danger\" expand=\"block\" onClick={ realizarBusqueda } ><IonIcon icon={searchCircle} color=\"light\" size=\"large\" ></IonIcon></IonButton>\r\n                    </IonCol>\r\n                </IonRow>\r\n              </IonGrid>\r\n            </IonCardHeader>\r\n            <IonCardContent>\r\n                {/*NOTE: contenedor lista*/ }\r\n                <div style = {{flex:1,justifyContent:\"center\", borderWidth: 1, marginTop: 5 }} >\r\n                    <IonList className = \"borderList\" >\r\n                        {\r\n                            listaContratos.map((item,index)=>{\r\n                                return <IonItem key = {index} onClick = { ()=>{ irReportar(item); } } >\r\n                                    <IonLabel>\r\n                                        <h2> {item.Contribuyente} </h2>\r\n                                        <p> Contrato: { item.ContratoVigente }, Toma: { item.Toma } </p>\r\n                                        <p> Medidor: { item.Medidor }</p>\r\n                                        <IonNote color=\"primary\">Estado: {listaEstatus[item.Estatus - 1] }</IonNote>\r\n                                    </IonLabel>\r\n                                    \r\n                                    </IonItem>\r\n                            })\r\n                        }\r\n                    </IonList>\r\n                </div>\r\n            </IonCardContent>\r\n          </IonCard>\r\n          <IonAlert\r\n            cssClass=\"my-custom-class\"\r\n            header={tipoMensaje}\r\n            message={mensaje}\r\n            isOpen={mensaje.length > 0}\r\n            backdropDismiss={false}\r\n            buttons={botonReintentar ? [{ text: \"Aceptar\", handler: () => { setMensaje(\"\") } }] : alertButtons}\r\n          />\r\n          <IonLoading\r\n            cssClass=\"my-custom-class\"\r\n            isOpen={cargando}\r\n            onDidDismiss={() => { setCargando( false ); }}\r\n            message=\"Por favor espere\"\r\n          />\r\n        </IonContent>\r\n      </IonPage>\r\n    );\r\n}\r\n\r\nexport default ListaContratoReportes;","import { IonIcon, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonContent, IonHeader, IonInput, IonItem, IonLabel, IonMenuButton, IonPage, IonTitle, IonToolbar, IonAlert, IonLoading, IonGrid, IonCol, IonRow, IonFooter, IonFab, IonFabButton } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './datos-del-contribuyente.css'\r\nimport MenuLeft from '../../components/left-menu';\r\nimport { obtenerDatosContribuyente, actualizarContribuyente } from '../../controller/apiController';\r\nimport { backspaceOutline, chevronBackCircleOutline, saveOutline, saveSharp, logoFacebook, compassOutline } from 'ionicons/icons';\r\nimport { cerrarSesion } from '../../controller/storageController';\r\nconst DatosContribuyente: React.FC = () => {\r\n    const history = useHistory();\r\n    const [datosContribuyente, setDatosContribuyente] = useState(Object);\r\n    const [telefono, setTelefono] = useState(String);\r\n    const [email, setEmail] = useState(String);\r\n    const [message, setMessage] = useState(String);\r\n    const [typeMessage, setTypeMessage] = useState(String);\r\n    const [loading, setLoading] = useState(false);\r\n    const [hideButtons, setHideButtons] = useState(true);\r\n    const [tokenExpired, setTokenExpired] = useState(false);\r\n    const [ typeError, setTypeError ] = useState(String);\r\n    useEffect(() => { obtenerContribuyente() }, []);\r\n    useEffect(() => { logOut() }, [tokenExpired]);\r\n    const alertButtons = [\r\n        { text: \"Reintentar\", handler: () => { setMessage(\"\"); typeError == \"onLoad\" ? obtenerContribuyente() : handleBtnGuardarContacto();} },\r\n        { text: \"Aceptar\", handler: () => { setMessage(\"\"); } }\r\n    ]\r\n    const logOut = () => {\r\n        if (tokenExpired) {\r\n            setTypeMessage(\"Session no valida\");\r\n            setMessage(\"Inicie sesión por favor\\nRegresando...\");\r\n            setHideButtons(true);\r\n            setTimeout(async () => {\r\n                await cerrarSesion().then((result) => {\r\n                    setTypeMessage(\"Error\");\r\n                    setMessage('');\r\n                    history.replace('/home');\r\n                })\r\n            }, 2500)\r\n        }\r\n    }\r\n    const obtenerContribuyente = async () => {\r\n        setLoading(true);\r\n        await obtenerDatosContribuyente()\r\n            .then((result) => {\r\n                if( result != null ){\r\n                    setTelefono(result.Celular == null ? \"\" : result.Celular);\r\n                    setEmail(result.Email == null ? \"\" : result.Email);\r\n                    setDatosContribuyente(result);\r\n                }else{\r\n                    setTypeMessage(\"ERROR\");\r\n                    setTypeError(\"onLoad\");\r\n                    setMessage(\"No se encontro el contribuyente\");\r\n                }\r\n            })\r\n            .catch((error) => { \r\n                setHideButtons(false);\r\n                let errorMessage = String(error.message);\r\n                let validSession = errorMessage.includes(\"Sesion no valida\");\r\n                if(!validSession){\r\n                    setTypeMessage(\"ERROR\");\r\n                    setTypeError(\"onLoad\");\r\n                    setMessage(errorMessage);\r\n                }\r\n             })\r\n            .finally(() => { setLoading(false) });\r\n    }\r\n    const handleTelefono = (value: string) => {\r\n        setTelefono(value);\r\n    }\r\n    const handleEmail = (value: string) => {\r\n        setEmail(value);\r\n    }\r\n    const handleBtnGuardarContacto = async () => {\r\n        setLoading(true);\r\n        let datos = {\r\n            telefono: telefono,\r\n            email: email\r\n        }\r\n        await actualizarContribuyente(datos)\r\n            .then((result) => {\r\n                setHideButtons(true);\r\n                setTypeMessage(\"MENSAJE\");\r\n                setMessage(result);\r\n            })\r\n            .catch(err => {\r\n                setTypeError(\"onUpdate\");\r\n                let errorMessage = String(err.message);\r\n                let sesionValid = errorMessage.includes(\"Sesion no valida\");\r\n                let connectionError = errorMessage.includes(\"API\");\r\n                setHideButtons(connectionError);\r\n                if (!sesionValid) {\r\n                    setHideButtons(false);\r\n                    setTypeMessage(\"Error\");\r\n                    setMessage(err.message);\r\n                } else {\r\n                    setTokenExpired(true);\r\n                }\r\n            })\r\n            .finally(() => { setLoading(false) })\r\n    }\r\n    const handleBtnRegresar = () =>{\r\n        console.log(\"REGRESANDO!!\");\r\n        history.replace(\"/captura-de-lectura.page\")\r\n    }\r\n    return (\r\n        <IonPage>\r\n            <IonContent fullscreen = {true}>\r\n                <MenuLeft />\r\n                <IonHeader>\r\n                    <IonToolbar color=\"danger\" >\r\n                        <IonTitle>Detalles contribuyente</IonTitle>\r\n                        <IonButtons slot=\"start\" className=\"btnMenu\">\r\n                            <IonMenuButton ></IonMenuButton>\r\n                        </IonButtons>\r\n                    </IonToolbar>\r\n                </IonHeader>\r\n                <IonCard >\r\n                    <IonCardHeader className=\"headerData\">\r\n                        <div className=\"datosContribuyete\">\r\n                            <h3>{datosContribuyente.Nombre}</h3>\r\n                            <p>Contrato: {datosContribuyente.ContratoVigente}, &nbsp;&nbsp; Medidor: {datosContribuyente.Medidor}, &nbsp;&nbsp; Toma: {datosContribuyente.Toma}</p>\r\n                            <p>Municipio: {datosContribuyente.Municipio}, &nbsp;&nbsp; Localidad: {datosContribuyente.Localidad}</p>\r\n                            <p>Colonia: {datosContribuyente.Colonia} &nbsp;&nbsp; Calle: {datosContribuyente.Calle} &nbsp;&nbsp; Exterior: {datosContribuyente.Exterior} &nbsp;&nbsp; Interior: {datosContribuyente.Interior}</p>\r\n                        </div>\r\n                    </IonCardHeader>\r\n                    <IonCardContent className=\"centrar\">\r\n                        <IonItem>\r\n                            <IonLabel className=\"center\" color=\"\">Datos de contacto</IonLabel>\r\n                        </IonItem>\r\n                        <br />\r\n                        <IonItem>\r\n                            <IonLabel className=\"input\" position=\"floating\">Telefono</IonLabel>\r\n                            <IonInput type=\"tel\" placeholder=\"Telefono del contribuyente\" value={telefono} onIonChange={e => { handleTelefono(String(e.detail.value)) }} />\r\n                        </IonItem>\r\n                        <IonItem>\r\n                            <IonLabel className=\"input\" position=\"floating\" >Correo Electronico</IonLabel>\r\n                            <IonInput type=\"email\" placeholder=\"Correo Electronico\" value={email} onIonChange={e => { handleEmail(String(e.detail.value)) }} />\r\n                        </IonItem>\r\n                        <br />\r\n                        <IonGrid>\r\n                            <IonRow>\r\n                                <IonCol size=\"4\">\r\n                                    <IonButton color=\"secondary\" onClick = {handleBtnRegresar}>\r\n                                        Regresar\r\n                                        <IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon>\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                                <IonCol size=\"4\" ></IonCol>\r\n                                <IonCol size=\"4\">\r\n                                    <IonButton color=\"danger\" onClick={handleBtnGuardarContacto}>\r\n                                        Guardar\r\n                                        <IonIcon icon={saveSharp} slot=\"end\"></IonIcon>\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>\r\n                    </IonCardContent>\r\n                </IonCard>\r\n                <IonAlert\r\n                    isOpen={message.length > 0}\r\n                    header={typeMessage}\r\n                    message={message}\r\n                    backdropDismiss={false}\r\n                    buttons={hideButtons ? [\"Aceptar\"] : alertButtons}\r\n                />\r\n                <IonLoading\r\n                    cssClass=\"my-custom-class\"\r\n                    isOpen={loading}\r\n                    message={\"Por favor espere\"}\r\n                    backdropDismiss={false}\r\n                />\r\n            </IonContent>\r\n        </IonPage>\r\n    )\r\n}\r\n\r\nexport default DatosContribuyente;","import { IonAlert, IonButton, IonCard, IonCardHeader, IonCol, IonContent, IonGrid, IonIcon, IonInput, IonItem, IonItemDivider, IonLabel, IonList, IonLoading, IonNote, IonPage, IonRow, IonSelect, IonSelectOption, useIonViewDidEnter, useIonViewWillEnter } from \"@ionic/react\"\r\nimport { useEffect, useState } from \"react\"\r\nimport MenuLeft from '../../components/left-menu';\r\nimport { IonHeader,IonToolbar,IonTitle,IonButtons,IonMenuButton } from '@ionic/react';\r\nimport { buscarContrato, solicitarPermisos, verifyGPSPermission,verifyCameraPermission, buscarPorMedidor, buscarMedidorSinFiltro, ContratosListaContratoReporte } from '../../controller/apiController';\r\nimport { searchCircle } from \"ionicons/icons\";\r\nimport { getCuentasPapas, getUsuario, setContratoCorte } from \"../../controller/storageController\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst PrincipalCortes: React.FC = () => {\r\n    const history = useHistory();\r\n    const [ activarMenu,setActivarMenu ] = useState(true);\r\n    const [ tipoFiltro , setTipoFiltro ] = useState(1);\r\n    const [user, setUser ] = useState(\"Prueba\");\r\n    const [ nombreCliente,setNombreCliente ] = useState(\"Demo OPD\");\r\n    const [ contrato, setContrato ] = useState(\"\");\r\n    const [ loading, setLoading ] = useState(false);\r\n    const [ listaContratos, setListaContratos ] = useState<any[]>([]);\r\n    const [ tipoMensaje, setTipoMensaje ] = useState(\"Mensaje\");\r\n    const [ mensaje, setMensaje ] = useState(\"\");\r\n    const [ sesionValida, setSessionValida ] = useState( true );\r\n\r\n    useEffect(()=>{ prepararPantalla(); });\r\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\r\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\r\n    const BuscarLectura = (  ) => {\r\n        setLoading(true);\r\n        if(contrato != \"\"){\r\n            tipoFiltro == 1 ? PorContrato( contrato ) : porMedidor( contrato );\r\n        }else{\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const PorContrato = async ( contrato: string ) =>{\r\n        await ContratosListaContratoReporte(zeroFill(contrato))\r\n        .then(( result )=>{\r\n        setListaContratos(result);\r\n        }).catch((error)=>{\r\n          let errorMessage = String(error.message);\r\n          let expired = errorMessage.includes(\"Sesion no valida\");\r\n          if (!expired) {\r\n            setTipoMensaje(\"Error\");\r\n            setMensaje(error.message)\r\n          }\r\n        })\r\n        setLoading(false);\r\n    }\r\n    const porMedidor = async (medidor: string) =>{ \r\n      setLoading(true);\r\n      await buscarMedidorSinFiltro(zeroFill(medidor,10))\r\n      .then(result =>{\r\n        setListaContratos(result);\r\n      }).catch(err=>{\r\n        \r\n        let errorMessage = String(err.message);\r\n        let expired = errorMessage.includes(\"Sesion no valida\");\r\n        setSessionValida(expired);\r\n        if (!expired) {\r\n          setTipoMensaje(\"Error\");\r\n          setMensaje(err.message)\r\n        }else{\r\n          setMensaje(err.message+\"\\nRegresando...\");\r\n        }\r\n      }).finally(\r\n       ()=>{setLoading(false);} \r\n      )\r\n    }\r\n    function zeroFill( number:string,width:number = 9)\r\n    {\r\n        while(number.length < width){\r\n            number = \"0\"+number;\r\n        }\r\n        return number;\r\n    }\r\n    const functionValidarLectura = (estatus: number, cobro:number) =>{\r\n        let leyendaCobro = \"\";\r\n        let result = [\"\",false];\r\n        if(cobro == 1){\r\n          leyendaCobro = \"Cuota Fija \";\r\n        }\r\n      switch(estatus){\r\n        case 1:\r\n          result = [ leyendaCobro + \"\",cobro == 1];\r\n        break;\r\n        case 2:\r\n         result = [leyendaCobro + \"\",cobro == 1];\r\n        break;\r\n        case 3:\r\n          result = [ leyendaCobro + \"Baja Temporal\",true];\r\n        break;\r\n        case 4:\r\n          result = [ leyendaCobro +  \"Baja Permanente\",true];\r\n        break;\r\n        case 5:\r\n          result = [ leyendaCobro + \"Inactivo\",true];\r\n        break;\r\n        case 6:\r\n          result = [ leyendaCobro +  \"Nueva\",true];\r\n        break;    \r\n        case 9:\r\n          result = [ leyendaCobro +  \"Sin Toma\",true];\r\n        break;\r\n        case 10:\r\n          result = [ leyendaCobro +  \"Multada\",true]\r\n        break;\r\n      }\r\n      return result;\r\n    }\r\n    const prepararPantalla = async () => {\r\n        await solicitarPermisos()\r\n          .then(async (err) => {\r\n            console.log(\"Solicitando persmisos\");\r\n            let camera = await verifyCameraPermission();\r\n            let gps = await verifyGPSPermission();\r\n            if (camera && gps) {\r\n              let storageUser = getUsuario();\r\n              setUser(storageUser + \"\");\r\n            } else {\r\n            }\r\n          }).catch(() => {\r\n            //Quitar antes de la vercion final (solo sirve en web)\r\n            let storageUser = getUsuario();\r\n            setUser(storageUser + \"\");\r\n          })\r\n        /**\r\n        * Activar el metodo solo para la version web de prueba\r\n        */        \r\n    }\r\n    const mostrarDatosContrato = async (item:any ,esPapa:boolean) =>{\r\n      //NOTE: Verificamos si es una cuenta papa\r\n      if(!esPapa){\r\n        //INDEV: guardamos los datos en el storage para mostrar en la pantalla\r\n        setContratoCorte(item.id);\r\n        history.push(\"/realizar-corte\");\r\n      }\r\n    }\r\n\r\n    return (\r\n        <IonPage>\r\n            {\r\n                activarMenu ? \r\n                    <MenuLeft /> :<></>\r\n            }\r\n            {/* Cabezera */}            \r\n            <IonHeader>\r\n                <IonToolbar color=\"danger\" >\r\n                <IonTitle>{`${user} - ${nombreCliente}`}</IonTitle>\r\n                <IonButtons slot=\"start\" className=\"btnMenu\">\r\n                    <IonMenuButton ></IonMenuButton>\r\n                </IonButtons>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n            {/* Contenido de la app */}\r\n            <IonContent>\r\n                <IonCard class=\"ion-text-center\" className=\"box\" >\r\n                    <IonCardHeader >\r\n                        <div>\r\n                          <h3>Realizar corte</h3>\r\n                          <IonLabel >Puedes realizar busquedas por:</IonLabel>\r\n                          <p>Contrato o Medidor</p>\r\n                          <br/>\r\n                        </div>\r\n                        <IonGrid>\r\n                        <IonRow>\r\n                            <IonCol>\r\n                                <IonItem>\r\n                                    <IonLabel>Filtrar Por:</IonLabel>\r\n                                    <IonSelect value = {tipoFiltro}  onIonCancel = { ()=>{ setTipoFiltro(1); } } placeholder = \"Seleccione el filtro\" interface = \"action-sheet\" onIonChange = {e => { setTipoFiltro(e.detail.value) }} >\r\n                                        <IonSelectOption value={1} >Contrato</IonSelectOption>\r\n                                        <IonSelectOption value={2} >Medidor</IonSelectOption>\r\n                                    </IonSelect>\r\n                                </IonItem>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                        <IonRow>\r\n                            <IonCol size=\"12\">\r\n                              <IonItem>\r\n                                  <IonInput type=\"number\" placeholder = { `Ingrese el ${tipoFiltro == 1 ?  \"contrato\" : \"medidor\"}` } onIonChange={e => { setContrato(String(e.detail.value)) }}></IonInput>\r\n                              </IonItem>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                        <br />\r\n                        <IonButton color=\"danger\" expand = \"block\" onClick={ BuscarLectura }>\r\n                            <IonIcon icon={searchCircle} color=\"light\" size=\"large\"></IonIcon>\r\n                            \r\n                            </IonButton>\r\n                        <IonItem>\r\n                            <IonLabel className=\"center\" color=\"\">Contrato</IonLabel>\r\n                        </IonItem>\r\n                        </IonGrid>\r\n                    </IonCardHeader>\r\n                    <IonList>\r\n                        {\r\n                            listaContratos.map((item,index)=>{\r\n                                let papas = getCuentasPapas();\r\n                                let arrayData = functionValidarLectura(parseInt(item.Estatus),parseInt(item.M_etodoCobro));\r\n                                let cuentaPapa = String(papas).includes(item.id);\r\n                                if(cuentaPapa){\r\n                                  arrayData[0] += \"Desarrollo\";  \r\n                                }\r\n                                return <div className = { ( cuentaPapa || arrayData[1]) ? 'cuotaFija':''} key={index} onClick={() => { mostrarDatosContrato( item, cuentaPapa ); }}>\r\n                                  <IonItem detail={true} >\r\n                                    <IonList>\r\n                                      <IonLabel>{item.Contribuyente}</IonLabel>\r\n                                      <p>Contrato: {item.ContratoVigente},\r\n                                         Medidor: {item.Medidor}, \r\n                                         Toma: {item.Toma}\r\n                                         &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                         {\r\n                                           (cuentaPapa || arrayData[1]) ? <IonNote style ={{fontsize: 20}} color=\"danger\">{arrayData[0]}</IonNote> :\"\"\r\n                                         }\r\n                                      </p>\r\n                                    </IonList>\r\n                                  </IonItem>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </IonList>\r\n                </IonCard>\r\n                <IonLoading\r\n                    cssClass=\"my-custom-class\"\r\n                    isOpen={loading}\r\n                    onDidDismiss={() => { setLoading(false); }}\r\n                    message=\"Por favor espere\"\r\n                />\r\n                <IonAlert\r\n                    cssClass=\"my-custom-class\"\r\n                    header={tipoMensaje}\r\n                    message={mensaje}\r\n                    onDidDismiss = {()=>{if(!sesionValida){ history.replace(\"./home\");}}}\r\n                    isOpen={mensaje.length > 0}\r\n                    backdropDismiss={false}\r\n                    buttons={ [{ text: 'Aceptar', handler: () => { setMensaje(\"\") } }] }\r\n                />\r\n            </IonContent>\r\n        </IonPage>\r\n    )\r\n}\r\nexport default PrincipalCortes;","import { IonAlert, IonApp, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonChip, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonImg, IonItem, IonLabel, IonLoading, IonMenuButton, IonPage, IonPicker, IonRippleEffect, IonRow, IonSelect, IonSelectOption, IonText, IonTextarea, IonTitle, IonToolbar, useIonToast, useIonViewDidEnter, useIonViewWillEnter } from \"@ionic/react\";\r\nimport { checkmarkCircle, chevronBackCircleOutline, contractOutline, pencil, saveOutline, triangle } from \"ionicons/icons\";\r\nimport { useEffect,useState } from 'react';\r\nimport MenuLeft from '../../components/left-menu';\r\nimport { obtenerDatosCorte, RealizarCorteAPI } from '../../controller/apiController';\r\nimport { getIdUsuario } from '../../controller/storageController';\r\nimport { useTakePhoto, obtenerBase64, obtenerCoordenadas } from '../../utilities';\r\nimport { camera } from 'ionicons/icons';\r\nimport './realizar-corte.css';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst RealizarCorte: React.FC = () => {\r\n    const history = useHistory();\r\n    const [ activarMenu, setActivarMenu ] = useState(true);\r\n    const [ datosContrato, setDatosContrato ] = useState(Object);\r\n    const [ datosUsuario, setDatosUsuario ] = useState(Object);\r\n    const [ loading, setLoading ] = useState(true);\r\n    const [ fechaActual, setFechaActual ] = useState(\"\");\r\n    const [ tipoInspeccion, setTipoInspecion ] = useState(2);\r\n    /**NOTE: Manejadores de fotos */\r\n    const [ arregloFotos, setArregloFotos ] = useState<string[]>([]);\r\n    const [ arregloFotosVista, setArregloFotosVista ] = useState<string[]>([]);\r\n    const [ fotoActiva, setFotoActiva ] = useState(String);\r\n    const [ indexFoto, setIndexFoto ] = useState(Number);\r\n    const [ activarGaleria, setActivarGaleria ] = useState(false);\r\n    const { takePhoto } = useTakePhoto();\r\n    //NOTE: contradores de la base de datos\r\n    const [ motivoInspeccion, setMotivoInspeccion ] = useState(String);\r\n    const [ ejercicio, setEjercicio ] = useState(2020);\r\n    //NOTE: Validacion de toma si esta cortado\r\n    const [ bloquearCorte, setBloquearCorte ] = useState(true);\r\n    /**NOTE: Manejador de mensajes de error y advertencias */\r\n    const [ tipoMensaje, setTipoMensaje ] = useState(String);   \r\n    const [ mensaje, setMensaje ] = useState( String );\r\n    const [ errorCarga, setErrorCarga ] = useState(false);\r\n    const [ errorCampos, setErrorCampos ] = useState(false);\r\n    const [pressentToast, dismissToast] = useIonToast();\r\n    const alertButtons = [\r\n        {\r\n            text: \"Reintentar\", handler: () => {\r\n                setMensaje(\"\");\r\n                setTipoMensaje(\"Error\");\r\n                setLoading(true);\r\n                extraerDatos();\r\n                \r\n            }\r\n        },\r\n        {\r\n            text: \"Cancelar\"\r\n        }]\r\n    const modoPruebas = false; //INDEV: modo de pruebas \r\n    const fecha = new Date();\r\n    useEffect(()=>{\r\n        extraerDatos();\r\n    },[]);\r\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\r\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\r\n    const listaEstados = [\"Activo\",\"Cortado\",\"Baja Temporal\",\"Baja Permanente\",\"Inactivo\",\"Nueva\",\"\",\"\",\"Sin toma\",\"Multada\"];\r\n    const extraerDatos = async () =>{\r\n        //NOTE: extraer datos del contrato\r\n        let dia = fecha.getDate();\r\n        let mes = fecha.getMonth();\r\n        let anio = fecha.getFullYear();\r\n        setEjercicio( modoPruebas ? 2020 : anio);\r\n        setFechaActual( formatoFecha(dia,mes,anio) );\r\n        await obtenerDatosCorte()\r\n        .then(( result )=>{\r\n            if(result != undefined ){\r\n                console.log(result[1]);\r\n                setDatosContrato(result[0]);\r\n                setDatosUsuario(result[1]);\r\n                //NOTE: verificamos si\r\n                setBloquearCorte(result[0].Estatus != 1);\r\n            }\r\n        })\r\n        .catch(( error )=>{\r\n            setErrorCarga(true);\r\n            setMensaje(error.message);\r\n            setTipoMensaje(\"ERROR\");\r\n\r\n        }).finally(()=>{\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const formatoFecha = ( dia: number, mes: number, anio:number  ) =>{\r\n        let formatoFecha = \"\";\r\n        dia < 10 ? formatoFecha += (\"0\"+dia+\"/\") : formatoFecha += dia +\"/\";\r\n        mes < 10 ? formatoFecha += (\"0\"+mes+\"/\") :  formatoFecha += mes + \"/\";\r\n        formatoFecha += anio;\r\n        return formatoFecha;\r\n    }\r\n    const handleAbrirCamara = async () =>{\r\n        if(!bloquearCorte){\r\n            console.log(\"Abriendo Camara...\");\r\n            setLoading(true);\r\n            await takePhoto()\r\n            .then((result)=>{\r\n                agregarImagenEncode( String(result.webPath) );\r\n                //NOTE: Verificamos que aun tenga fotos disponible\r\n            }).catch((erro)=>{\r\n                let errorType = erro.message + \"\";\r\n                if (errorType.includes(\"denied\")) {\r\n                    setMensaje(\"La aplicación no tiene permisos para usar la cámara\");\r\n                }\r\n            }).finally(()=>{\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n    const agregarImagenEncode = async ( direccion: string ) =>{\r\n        await obtenerBase64(direccion)\r\n        .then(( base64Encode )=>{\r\n            setFotoActiva(direccion);\r\n            setArregloFotosVista(arregloFotosVista => [...arregloFotosVista, direccion]);\r\n            setIndexFoto(arregloFotosVista.length);\r\n            setArregloFotos( arregloFotos => [...arregloFotos,String(base64Encode)] );\r\n            setActivarGaleria(true);\r\n        }).catch((error)=>{\r\n\r\n        }).finally(()=>{\r\n            setLoading(false);;\r\n        })\r\n        \r\n    }\r\n    const generarGaleria = () => {\r\n        if (activarGaleria) {\r\n            let data =\r\n                <div>\r\n                    {\r\n                        arregloFotosVista.length > 0 ?\r\n                            <IonItem>\r\n                                <IonRow>\r\n                                    {\r\n                                        arregloFotosVista.map((item, index) => {\r\n                                            return <IonCol key={index} className = {\"ion-activatable ripple-parent \" + ( indexFoto == index ? \"selected\" : \"\")} >\r\n                                                        <IonImg src={item} onClick={() => { cambiarFotoActiva(item, index) }} className=\"imgFormat\"></IonImg>\r\n                                                        <IonRippleEffect></IonRippleEffect>\r\n                                                    </IonCol>\r\n                                        })\r\n                                    }\r\n                                </IonRow>\r\n                            </IonItem> : <></>\r\n                    }\r\n                </div>;\r\n            return data;\r\n        }\r\n    }\r\n    const cambiarFotoActiva = (foto: string, index: number) => {\r\n        setFotoActiva(foto);\r\n        setIndexFoto(index);\r\n    }\r\n    const guardarInspeccion = async(  ) =>{\r\n        try {\r\n            setLoading(true);\r\n            setTimeout(() => {\r\n                if (loading) {\r\n                    throw 0;\r\n                }\r\n            }, 20000);\r\n            if(!(arregloFotos.length == 0)){\r\n                await obtenerCoordenadas()\r\n                .then( async ( coordenadas )=>{\r\n                    //NOTE: damos formato a los datos que se enviaran\r\n                    //INDEV: faltan las fotos {\\\"Estatus\\\":true,\\\"Code\\\":200,\\\"Mensaje\\\":\\\"Tomar cortada\\\",\\\"Corte\\\":6089}\r\n                    let datos = {\r\n                        Motivo: motivoInspeccion,\r\n                        Padron: datosContrato.Padron,\r\n                        Persona: datosUsuario.Persona,\r\n                        Usuario: datosUsuario.Usuario,\r\n                        Estado: tipoInspeccion,\r\n                        Longitud: String(coordenadas.longitude),\r\n                        Latitud: String(coordenadas.latitude),\r\n                        Ejercicio: ejercicio,\r\n                        Evidencia:arregloFotos\r\n                    };\r\n                    await RealizarCorteAPI(datos)\r\n                    .then(()=>{\r\n                        setErrorCarga(false);\r\n                        setTipoMensaje(\"Mensaje\");\r\n                        setMensaje(\"Corte realizado...\");\r\n                    })\r\n                    .catch((error)=>{\r\n                        setErrorCarga(false);\r\n                        setMensaje(error.message);\r\n                        setTipoMensaje(\"ERROR\");            \r\n                    })\r\n                    .finally(()=>{\r\n                        setLoading(false);\r\n                    })\r\n                });\r\n            }else{\r\n                setTipoMensaje(\"Mensaje\");\r\n                setMensaje(\"Debe capturar almenos 1 foto\")\r\n                setLoading(false);\r\n            }\r\n        }catch(error){\r\n            console.log(error);\r\n            setLoading(false);\r\n            setTipoMensaje(\"Mensaje\");\r\n            setMensaje(`Tiempo de espera agotado.\r\n            Asegúrese de activar la ubicación del dispositivo`)\r\n        }\r\n    }\r\n    const validarCampos = async () =>{\r\n        if(motivoInspeccion != \"\"){\r\n            setErrorCampos(false);\r\n            await guardarInspeccion();\r\n        }else{\r\n            setTipoMensaje(\"Mensaje\");\r\n            setMensaje(\"Favor de ingresar el motivo del corte\");\r\n            setErrorCampos(true);\r\n        }\r\n    }\r\n    const borrarFotoEvidencia = () => {\r\n        let fotosTemporal = new Array;\r\n        let fotosEncoded = new Array;\r\n        arregloFotos.map((item, index) => {\r\n            if (index != indexFoto) {\r\n                fotosTemporal.push(item);\r\n            }\r\n        });\r\n        arregloFotosVista.map((item, index) => {\r\n            if (index != indexFoto) {\r\n                fotosEncoded.push(item);\r\n            }\r\n        })\r\n        setArregloFotosVista(fotosTemporal);\r\n        setArregloFotos(fotosEncoded);\r\n        setFotoActiva('');\r\n        pressentToast({\r\n            message: \"Se elimino la foto de la lista\",\r\n            duration: 2000,\r\n            position: 'top',\r\n            buttons: [\r\n                {\r\n                    side: 'start',\r\n                    icon: checkmarkCircle,\r\n                }\r\n            ]\r\n        });\r\n        console.log(fotosTemporal.length + \" - \" + fotosEncoded.length);\r\n    }\r\n    const regresar = () =>{\r\n        history.replace('/buscar-contrato');\r\n    }\r\n    const limpiarPantalla = () =>{\r\n        setActivarGaleria(false);\r\n        setFotoActiva(\"\");\r\n        setArregloFotos([]);\r\n        setArregloFotosVista([]);\r\n        setIndexFoto(0);\r\n        setBloquearCorte(true);\r\n        setMensaje(\"\");\r\n        setTipoMensaje(\"\");\r\n        setErrorCampos(false);\r\n        setErrorCarga(false);\r\n    } \r\n    return (\r\n        <IonPage>\r\n            {\r\n                activarMenu ? <MenuLeft /> : <></>\r\n            }\r\n            {/**  Header del menu */}\r\n            \r\n            <IonHeader>\r\n                <IonToolbar color=\"danger\" >\r\n                    <IonTitle>Cortar toma</IonTitle>\r\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\r\n                        <IonMenuButton ></IonMenuButton>\r\n                    </IonButtons>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n            <IonContent>\r\n                <IonCard>\r\n                    <IonCardHeader>\r\n                        <div className=\"datosContribuyete\">\r\n                            <h3>{ datosContrato.Nombre } </h3>\r\n                            <p> RFC: { datosContrato.Rfc } , Cuenta: {datosContrato.Cuenta}</p>\r\n                            <p>Contrato: { datosContrato.ContratoVigente }, &nbsp;&nbsp; Medidor: {datosContrato.Medidor}, &nbsp;&nbsp; Toma: {datosContrato.Toma}</p>\r\n                            <p>Municipio: {datosContrato.Municipio}, &nbsp;&nbsp; Localidad: { datosContrato.Localidad}</p>\r\n                            <p>Direccion: {datosContrato.Direccion}</p>\r\n                        </div>\r\n                    </IonCardHeader>\r\n                    <IonCardContent>\r\n                        <br />\r\n                        <IonItem >\r\n                            <IonLabel>{ `Inspector: ${datosUsuario.PersonaNombre} - ${ datosUsuario.Puesto } ` }</IonLabel>\r\n                        </IonItem>\r\n                        <br/>\r\n                        <IonItem >\r\n                            <IonLabel color = {bloquearCorte ? \"danger\" : \"primary\"} className = \"bloquearCorte\" > { ` Estado:  ${listaEstados[ parseInt(datosContrato.Estatus)-1 ]} ${modoPruebas ? \" Modo Pruebas \" :\"\" }` } </IonLabel>\r\n                        </IonItem>\r\n                        <br/>\r\n                        <IonItem>\r\n                            <IonLabel> {`Fecha: ${fechaActual} `} </IonLabel>\r\n                        </IonItem>\r\n                        <br />\r\n                        <IonItem>\r\n                            <IonLabel> Tipo de inspección </IonLabel>\r\n                            <IonSelect disabled interface = \"action-sheet\" value = {tipoInspeccion} onIonChange = { ( e )=>{setTipoInspecion(e.detail.value)} } >\r\n                                <IonSelectOption value = {3} > Baja Temporal </IonSelectOption>\r\n                                <IonSelectOption value = {4} > Baja Permanente </IonSelectOption>\r\n                                <IonSelectOption value = {2} > Cortado </IonSelectOption>\r\n                                <IonSelectOption value = {5} > Inactivo </IonSelectOption>\r\n                                <IonSelectOption value = {9} > Sin Toma </IonSelectOption>\r\n                            </IonSelect>\r\n                        </IonItem>\r\n                        <IonItem>\r\n                            <IonTextarea disabled = {bloquearCorte} placeholder = \"Motivo del corte\" className = {errorCampos ? \"inputBorderError\":\"inputBorder\"} onIonChange = {e=>{setMotivoInspeccion(String(e.detail.value))}} > </IonTextarea>   \r\n                        </IonItem>\r\n                        <br/>\r\n                        \r\n                        <IonItem>\r\n                            <IonLabel >Adjuntar evidencia (maximo 3 fotos)</IonLabel>\r\n                            <IonIcon  icon={camera} className=\"iconStyle\" onClick={handleAbrirCamara}></IonIcon>\r\n                        </IonItem>\r\n                        <br/>\r\n                        {\r\n                            generarGaleria()\r\n                        }\r\n                        <br />\r\n                        {\r\n                            fotoActiva != '' ?\r\n                            <IonItem >\r\n                                <IonCard className = \"centrarCarousel\" >\r\n                                    <IonImg src={fotoActiva} />\r\n                                    <IonCardContent >\r\n                                        <IonButtons>\r\n                                            <IonButton color=\"secondary\" onClick={() => { setFotoActiva(''); }}>Cerrar</IonButton>\r\n                                            <IonButton color=\"danger\" onClick={() => { borrarFotoEvidencia(); }} >Eliminar</IonButton>\r\n                                        </IonButtons>\r\n                                    </IonCardContent>\r\n                                </IonCard>\r\n                            </IonItem> : <></>\r\n                        }\r\n                            <IonGrid>\r\n                                <IonRow>\r\n                                    <IonCol size=\"6\">\r\n                                            <IonIcon icon={chevronBackCircleOutline} slot=\"start\"></IonIcon>\r\n                                        <IonButton color=\"secondary\" onClick = {regresar}>\r\n                                            Regresar\r\n                                        </IonButton>\r\n                                    </IonCol>\r\n                                    <IonCol size=\"6\">\r\n                                        <IonButton disabled = {bloquearCorte} color=\"danger\" onClick={validarCampos}>\r\n                                            Guardar\r\n                                            <IonIcon icon={saveOutline} slot=\"end\"></IonIcon>\r\n                                        </IonButton>\r\n                                    </IonCol>\r\n                                </IonRow>\r\n                            </IonGrid>\r\n                    </IonCardContent>\r\n                </IonCard>\r\n                <IonLoading \r\n                    cssClass=\"my-custom-class\"\r\n                    isOpen={loading}\r\n                    onDidDismiss={() => { setLoading(false); }}\r\n                    message=\"Por favor espere\"\r\n                />\r\n                <IonAlert\r\n                    cssClass=\"my-custom-class\"\r\n                    header={tipoMensaje}\r\n                    message={mensaje}\r\n\r\n                    isOpen={mensaje.length > 0}\r\n                    backdropDismiss={false}\r\n                    buttons={ errorCarga ? alertButtons : [{ text: 'Aceptar', \r\n                        handler: () => { \r\n                            if(mensaje == \"Corte realizado...\"){\r\n                                limpiarPantalla();\r\n                                extraerDatos();\r\n                            }\r\n                        setMensaje(\"\");\r\n                     } \r\n                }]}\r\n                />\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n}\r\n\r\nexport default RealizarCorte;","import { IonButtons, \r\n    IonCard, \r\n    IonCardHeader, \r\n    IonCol, \r\n    IonContent, \r\n    IonHeader, \r\n    IonMenuButton, \r\n    IonPage, \r\n    IonRippleEffect, \r\n    IonRow, \r\n    IonText, \r\n    IonTitle, \r\n    IonToolbar, \r\n    useIonViewDidEnter, \r\n    useIonViewWillEnter,\r\n    IonSelect,\r\n    IonSelectOption, \r\n    IonItemDivider,\r\n    IonList,\r\n    IonItem,\r\n    IonLabel,\r\n    IonButton,\r\n    IonNote,\r\n    IonCardContent,\r\n    IonLoading,\r\n    IonAlert} from \"@ionic/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { generarFechas } from '../../utilities'; \r\nimport MenuLeft from '../../components/left-menu';\r\nimport { ListaCortes } from '../../controller/apiController';\r\nimport { useHistory } from  'react-router-dom'; \r\nimport './buscar-corte.css'\r\nconst BuscarCorte: React.FC = () => {\r\n    const history = useHistory();\r\n    const [activarMenu , setActivarMenu ] = useState(true);\r\n    const [fechaActual, setFechaActual ] = useState(String);\r\n    const [ anios, setAnios ] = useState<any[]>([]);\r\n    const [ meses, setMeses ] = useState<any[]>([]);\r\n    const [ anioSeleccionado, setAnioSeleccionado ] = useState(11);\r\n    const [ mesSelecionado, setMesSeleccionado ] = useState(Number);\r\n    const [ arregloCortes , setArregloCortes ] = useState<any[]>([]);\r\n    const [ loading, setLoading ] = useState(false);\r\n    const [mensaje, setMensaje ] = useState(\"\");\r\n    const [ tipoMensaje, setTipoMensaje ] = useState( \"Mensaje\" );\r\n    const fecha = new Date();\r\n    const listaEstados = [\"Activo\",\"Cortado\",\"Baja Temporal\",\"Baja Permanente\",\"Inactivo\",\"Nueva\",\"\",\"\",\"Sin toma\",\"Multada\"];\r\n    useIonViewWillEnter(()=>{setActivarMenu(false)});\r\n    useIonViewDidEnter(()=>{setActivarMenu(true)});\r\n    useEffect(()=>{\r\n        setFechaActual(fecha.getFullYear() + \"-\" + (fecha.getMonth() + 1) + \"-\" + (fecha.getDate()  + 1 ));\r\n        preparaPantalla(String(fecha.getFullYear()));\r\n        \r\n    },[]);\r\n    const preparaPantalla = async (anio:string) =>{\r\n        let aniosMeses = await generarFechas(fecha.getFullYear());\r\n        setMeses(aniosMeses[0].Meses);\r\n        setAnios(aniosMeses[1].Anios);\r\n        setMesSeleccionado(fecha.getMonth() + 1);\r\n        //setAnioSeleccionado(fecha.getFullYear()); es mediante el id del arreglo\r\n    }\r\n    const obtenerCortes = async () =>{\r\n        setLoading(true);\r\n        await ListaCortes(mesSelecionado <= 9 ? (\"0\" + mesSelecionado ) : String(mesSelecionado),anios[anioSeleccionado-1].anio)\r\n        .then((result)=>{\r\n            setArregloCortes(result);\r\n        })\r\n        .catch((error)=>{\r\n            error.message == \"No se encontraron registros\" ? setTipoMensaje(\"MENSAJE\") : setTipoMensaje(\"ERROR\");\r\n            setMensaje(error.message);\r\n            setArregloCortes([]);\r\n        }).finally(()=>{\r\n            setLoading(false);\r\n        })\r\n    }\r\n    const regresarPantalla = ()=>{\r\n        history.goBack();\r\n    }\r\n    return(\r\n        <IonPage>\r\n            {\r\n                activarMenu ? \r\n                <MenuLeft /> : <></>\r\n            }\r\n            <IonHeader>\r\n                <IonToolbar color=\"danger\" >\r\n                    <IonTitle>Cortar toma</IonTitle>\r\n                    <IonButtons slot=\"start\" className=\"btnMenu\">\r\n                        <IonMenuButton ></IonMenuButton>\r\n                    </IonButtons>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n            <IonContent>\r\n                <IonCard>\r\n                    <IonCardHeader >\r\n                        <IonTitle className = \"center\" > Historial de cortes </IonTitle>\r\n                        <br />\r\n                        <IonRow className = \"bordeFecha\" >\r\n                            <IonCol size = \"6\" className = \"labelCalendario\" >\r\n                                <IonText > Seleccione el año: </IonText>\r\n                            </IonCol>    \r\n                            <IonCol size=\"6\" className = \"ion-activatable ripple-parent\">\r\n                                <div >\r\n                                    <IonSelect onIonCancel = { ()=>{setAnioSeleccionado(11)} }  interface = \"action-sheet\" value={ anioSeleccionado } onIonChange = {e=>{setAnioSeleccionado(e.detail.value)}} >\r\n                                        {\r\n                                            anios != null ?\r\n                                            anios.map((item,index)=>{\r\n                                                return <IonSelectOption value={ item.id } key = {index} >{ item.anio }</IonSelectOption>\r\n                                            }) : <></>\r\n                                        }\r\n                                    </IonSelect>\r\n                                    <IonRippleEffect></IonRippleEffect>\r\n                                </div>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                        <IonRow className = \"bordeFecha\" >\r\n                            <IonCol size=\"6\" class=\"labelCalendario\">\r\n                                <IonText> Seleccione mes: </IonText>\r\n                            </IonCol>\r\n                            <IonCol>\r\n                                <div>\r\n                                    <IonSelect onIonCancel = { () => { setMesSeleccionado(fecha.getMonth() + 1) }} interface = \"action-sheet\" value = { mesSelecionado } onIonChange = {e => {setMesSeleccionado(e.detail.value)}} >\r\n                                        {\r\n                                            meses.map((mes,item)=>{\r\n                                                return <IonSelectOption value={mes.id} key = {mes.id} >{ mes.mes }</IonSelectOption>\r\n                                            })\r\n                                        }\r\n                                    </IonSelect>\r\n                                </div>\r\n                            </IonCol> \r\n                        </IonRow>\r\n                        <IonRow>\r\n                            <IonCol className = \"center margintop\" >\r\n                                <IonButton color=\"danger\" expand = \"block\" onClick = { obtenerCortes } > <IonText> Buscar Cortes </IonText> <IonRippleEffect></IonRippleEffect> </IonButton>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonCardHeader>\r\n                    <IonCardContent>\r\n                        {/*NOTE: contenedor lista*/ }\r\n                        <div style = {{flex:1,justifyContent:\"center\", borderWidth: 1, marginTop: 5 }} >\r\n                            <IonList className = \"borderList\" >\r\n                                {\r\n                                    arregloCortes.map((item,index)=>{\r\n                                        return <IonItem key = {index} >\r\n                                            <IonLabel>\r\n                                                <h2> {item.Nombre} </h2>\r\n                                                <p> Contrato: { item.ContratoVigente }, Fecha: { item.FechaCorte } </p>\r\n                                                <p> Motivo: { item.Motivo } </p>\r\n                                                <IonNote slot = \"end\" color = {item.Estatus == 2 ? \"danger\" : \"primary\"} > {listaEstados[item.Estatus-1]} </IonNote>\r\n                                            </IonLabel>\r\n                                            </IonItem>\r\n                                    })\r\n                                }\r\n                            </IonList>\r\n                        </div>\r\n                    </IonCardContent>\r\n                </IonCard>\r\n                <IonLoading\r\n                cssClass=\"my-custom-class\"\r\n                isOpen={loading}\r\n                onDidDismiss={() => { setLoading(false); }}\r\n                message=\"Por favor espere\"\r\n                />\r\n                <IonAlert\r\n                cssClass=\"my-custom-class\"\r\n                header={tipoMensaje}\r\n                message={mensaje}\r\n                isOpen={mensaje.length > 0}\r\n                onDidDismiss = {()=>{setMensaje(\"\")}}\r\n                buttons ={[{\r\n                    text:\"Aceptar\",\r\n                    handler:()=>{setMensaje(\"\")}\r\n                }]}\r\n                />\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n}\r\n\r\nexport default BuscarCorte;","import { Redirect, Route } from 'react-router-dom';\r\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\r\nimport { IonReactRouter } from '@ionic/react-router';\r\nimport Home from './pages/Home';\r\nimport TomaDatos from './pages/form-datos-toma/form-datos-toma.page'\r\nimport CapturaLectura from './pages/captura-de-lectura/captura-de-lectura.page'\r\nimport HistorialLecturas from './pages/historial-lecturas/historial-lecturas.page'\r\nimport EditarLectura from './pages/editar-lecturas-agua/editar-lecturas-agua.page'\r\nimport Reportes from './pages/reportes/reportes.page';\r\nimport ReportesContrato from './pages/buscar-contrato-reporte/buscar-contrato-reporte';\r\n//import HistorialReportes from './pages/historial-reportes/historial-reportes.page';\r\n//import DetallesHistorial from './pages/detalle-reporte/detalle-reporte.page';\r\nimport DatosContribuyente from './pages/datos-contribuyente/datos-del-contribuyente';\r\nimport PrincipalCortes from './pages/captura-cortes/buscar-contrato';\r\nimport RealizarCorte from './pages/realizar-corte/realizar-corte';\r\nimport BuscarCorte from './pages/buscar-corte/buscar-corte';\r\n/* Core CSS required for Ionic components to work properly */\r\nimport '@ionic/react/css/core.css';\r\n\r\n/* Basic CSS for apps built with Ionic */\r\nimport '@ionic/react/css/normalize.css';\r\nimport '@ionic/react/css/structure.css';\r\nimport '@ionic/react/css/typography.css';\r\n\r\n/* Optional CSS utils that can be commented out */\r\nimport '@ionic/react/css/padding.css';\r\nimport '@ionic/react/css/float-elements.css';\r\nimport '@ionic/react/css/text-alignment.css';\r\nimport '@ionic/react/css/text-transformation.css';\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '@ionic/react/css/display.css';\r\n\r\n/* Theme variables */\r\nimport './theme/variables.css';\r\n\r\nconst App: React.FC = () => (\r\n  <IonApp>\r\n    <IonReactRouter>\r\n      <IonRouterOutlet>\r\n        <Route exact path=\"/home\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/home\" />\r\n        </Route>\r\n        <Route exact path = \"/form-datos-toma.page\">\r\n          <TomaDatos />\r\n        </Route>\r\n        <Route exact path = \"/captura-de-lectura.page\">\r\n          <CapturaLectura/>\r\n        </Route>\r\n        <Route exact path = \"/historial-lecturas.page\">\r\n          <HistorialLecturas/>\r\n        </Route>\r\n        <Route exact path = \"/editar-lecturas-agua.page\">\r\n          <EditarLectura/>\r\n        </Route>\r\n        <Route exact path = \"/datos-contribuyente.page\">\r\n          <DatosContribuyente/>\r\n        </Route>\r\n        <Route exact path = \"/buscar-contrato\">\r\n          <PrincipalCortes/>\r\n        </Route>\r\n        <Route exact path = \"/realizar-corte\">\r\n          <RealizarCorte />\r\n        </Route>\r\n        <Route exact path = \"/buscar-corte\" >\r\n          <BuscarCorte />\r\n        </Route>\r\n        <Route exact path = \"/reportes.page\">\r\n          <Reportes />\r\n        </Route>\r\n        <Route exact path = \"/ContratosReportes\" >\r\n          <ReportesContrato />\r\n        </Route>\r\n      </IonRouterOutlet>\r\n    </IonReactRouter>\r\n  </IonApp>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t142,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t143,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t144,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t145,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t146,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t147,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t148,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t149,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t150,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t151,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t152,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t153,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t154,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t155,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t156,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t157,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t158,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t159,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t160,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t161,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t162,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t163,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t164,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t165,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t166,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t167,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t168,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t169,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t170,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t171,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t172,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t173,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t174,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t175,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t176,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t177,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t178,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t179,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t180,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t181,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t182,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t183,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t184,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 92;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t185,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 94;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}